// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dzhyun.historytrends.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dzhyun.historytrends.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dzhyun {

namespace {

const ::google::protobuf::Descriptor* YueKXianShuJu_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YueKXianShuJu_reflection_ = NULL;
const ::google::protobuf::Descriptor* YueZouShiShuJu_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YueZouShiShuJu_reflection_ = NULL;
const ::google::protobuf::Descriptor* HistoryTrends_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HistoryTrends_reflection_ = NULL;
const ::google::protobuf::Descriptor* MonthTrends_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MonthTrends_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dzhyun_2ehistorytrends_2eproto() {
  protobuf_AddDesc_dzhyun_2ehistorytrends_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dzhyun.historytrends.proto");
  GOOGLE_CHECK(file != NULL);
  YueKXianShuJu_descriptor_ = file->message_type(0);
  static const int YueKXianShuJu_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YueKXianShuJu, nian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YueKXianShuJu, zhangfu_),
  };
  YueKXianShuJu_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YueKXianShuJu_descriptor_,
      YueKXianShuJu::default_instance_,
      YueKXianShuJu_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YueKXianShuJu, _has_bits_[0]),
      -1,
      -1,
      sizeof(YueKXianShuJu),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YueKXianShuJu, _internal_metadata_),
      -1);
  YueZouShiShuJu_descriptor_ = file->message_type(1);
  static const int YueZouShiShuJu_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YueZouShiShuJu, yue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YueZouShiShuJu, yuekxian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YueZouShiShuJu, shangzhanggailv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YueZouShiShuJu, pingjunzhangfu_),
  };
  YueZouShiShuJu_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YueZouShiShuJu_descriptor_,
      YueZouShiShuJu::default_instance_,
      YueZouShiShuJu_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YueZouShiShuJu, _has_bits_[0]),
      -1,
      -1,
      sizeof(YueZouShiShuJu),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YueZouShiShuJu, _internal_metadata_),
      -1);
  HistoryTrends_descriptor_ = file->message_type(2);
  static const int HistoryTrends_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryTrends, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryTrends, yuezoushi_),
  };
  HistoryTrends_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HistoryTrends_descriptor_,
      HistoryTrends::default_instance_,
      HistoryTrends_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryTrends, _has_bits_[0]),
      -1,
      -1,
      sizeof(HistoryTrends),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryTrends, _internal_metadata_),
      -1);
  MonthTrends_descriptor_ = file->message_type(3);
  static const int MonthTrends_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthTrends, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthTrends, hangqing_),
  };
  MonthTrends_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MonthTrends_descriptor_,
      MonthTrends::default_instance_,
      MonthTrends_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthTrends, _has_bits_[0]),
      -1,
      -1,
      sizeof(MonthTrends),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthTrends, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dzhyun_2ehistorytrends_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YueKXianShuJu_descriptor_, &YueKXianShuJu::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YueZouShiShuJu_descriptor_, &YueZouShiShuJu::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HistoryTrends_descriptor_, &HistoryTrends::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MonthTrends_descriptor_, &MonthTrends::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dzhyun_2ehistorytrends_2eproto() {
  delete YueKXianShuJu::default_instance_;
  delete YueKXianShuJu_reflection_;
  delete YueZouShiShuJu::default_instance_;
  delete YueZouShiShuJu_reflection_;
  delete HistoryTrends::default_instance_;
  delete HistoryTrends_reflection_;
  delete MonthTrends::default_instance_;
  delete MonthTrends_reflection_;
}

void protobuf_AddDesc_dzhyun_2ehistorytrends_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::dzhyun::protobuf_AddDesc_dzhyun_2etopicinvest_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032dzhyun.historytrends.proto\022\006dzhyun\032\030dz"
    "hyun.topicinvest.proto\".\n\rYueKXianShuJu\022"
    "\014\n\004Nian\030\001 \002(\003\022\017\n\007ZhangFu\030\002 \001(\003\"w\n\016YueZou"
    "ShiShuJu\022\013\n\003Yue\030\001 \002(\003\022\'\n\010YueKXian\030\002 \003(\0132"
    "\025.dzhyun.YueKXianShuJu\022\027\n\017ShangZhangGaiL"
    "v\030\003 \001(\003\022\026\n\016PingJunZhangFu\030\004 \001(\003\"G\n\rHisto"
    "ryTrends\022\013\n\003Obj\030\001 \002(\t\022)\n\tYueZouShi\030\002 \003(\013"
    "2\026.dzhyun.YueZouShiShuJu\"C\n\013MonthTrends\022"
    "\013\n\003Obj\030\001 \002(\t\022\'\n\010HangQing\030\002 \003(\0132\025.dzhyun."
    "LiShiHangQingB\022\n\020com.dzhyun.proto", 393);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dzhyun.historytrends.proto", &protobuf_RegisterTypes);
  YueKXianShuJu::default_instance_ = new YueKXianShuJu();
  YueZouShiShuJu::default_instance_ = new YueZouShiShuJu();
  HistoryTrends::default_instance_ = new HistoryTrends();
  MonthTrends::default_instance_ = new MonthTrends();
  YueKXianShuJu::default_instance_->InitAsDefaultInstance();
  YueZouShiShuJu::default_instance_->InitAsDefaultInstance();
  HistoryTrends::default_instance_->InitAsDefaultInstance();
  MonthTrends::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dzhyun_2ehistorytrends_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dzhyun_2ehistorytrends_2eproto {
  StaticDescriptorInitializer_dzhyun_2ehistorytrends_2eproto() {
    protobuf_AddDesc_dzhyun_2ehistorytrends_2eproto();
  }
} static_descriptor_initializer_dzhyun_2ehistorytrends_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YueKXianShuJu::kNianFieldNumber;
const int YueKXianShuJu::kZhangFuFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YueKXianShuJu::YueKXianShuJu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.YueKXianShuJu)
}

void YueKXianShuJu::InitAsDefaultInstance() {
}

YueKXianShuJu::YueKXianShuJu(const YueKXianShuJu& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.YueKXianShuJu)
}

void YueKXianShuJu::SharedCtor() {
  _cached_size_ = 0;
  nian_ = GOOGLE_LONGLONG(0);
  zhangfu_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YueKXianShuJu::~YueKXianShuJu() {
  // @@protoc_insertion_point(destructor:dzhyun.YueKXianShuJu)
  SharedDtor();
}

void YueKXianShuJu::SharedDtor() {
  if (this != default_instance_) {
  }
}

void YueKXianShuJu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YueKXianShuJu::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YueKXianShuJu_descriptor_;
}

const YueKXianShuJu& YueKXianShuJu::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2ehistorytrends_2eproto();
  return *default_instance_;
}

YueKXianShuJu* YueKXianShuJu::default_instance_ = NULL;

YueKXianShuJu* YueKXianShuJu::New(::google::protobuf::Arena* arena) const {
  YueKXianShuJu* n = new YueKXianShuJu;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YueKXianShuJu::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.YueKXianShuJu)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(YueKXianShuJu, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<YueKXianShuJu*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(nian_, zhangfu_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool YueKXianShuJu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.YueKXianShuJu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 Nian = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nian_)));
          set_has_nian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ZhangFu;
        break;
      }

      // optional int64 ZhangFu = 2;
      case 2: {
        if (tag == 16) {
         parse_ZhangFu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &zhangfu_)));
          set_has_zhangfu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.YueKXianShuJu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.YueKXianShuJu)
  return false;
#undef DO_
}

void YueKXianShuJu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.YueKXianShuJu)
  // required int64 Nian = 1;
  if (has_nian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->nian(), output);
  }

  // optional int64 ZhangFu = 2;
  if (has_zhangfu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->zhangfu(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.YueKXianShuJu)
}

::google::protobuf::uint8* YueKXianShuJu::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.YueKXianShuJu)
  // required int64 Nian = 1;
  if (has_nian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->nian(), target);
  }

  // optional int64 ZhangFu = 2;
  if (has_zhangfu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->zhangfu(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.YueKXianShuJu)
  return target;
}

int YueKXianShuJu::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.YueKXianShuJu)
  int total_size = 0;

  // required int64 Nian = 1;
  if (has_nian()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nian());
  }
  // optional int64 ZhangFu = 2;
  if (has_zhangfu()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->zhangfu());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YueKXianShuJu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.YueKXianShuJu)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YueKXianShuJu* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YueKXianShuJu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.YueKXianShuJu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.YueKXianShuJu)
    MergeFrom(*source);
  }
}

void YueKXianShuJu::MergeFrom(const YueKXianShuJu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.YueKXianShuJu)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nian()) {
      set_nian(from.nian());
    }
    if (from.has_zhangfu()) {
      set_zhangfu(from.zhangfu());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void YueKXianShuJu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.YueKXianShuJu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YueKXianShuJu::CopyFrom(const YueKXianShuJu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.YueKXianShuJu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YueKXianShuJu::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void YueKXianShuJu::Swap(YueKXianShuJu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YueKXianShuJu::InternalSwap(YueKXianShuJu* other) {
  std::swap(nian_, other->nian_);
  std::swap(zhangfu_, other->zhangfu_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YueKXianShuJu::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YueKXianShuJu_descriptor_;
  metadata.reflection = YueKXianShuJu_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YueKXianShuJu

// required int64 Nian = 1;
bool YueKXianShuJu::has_nian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YueKXianShuJu::set_has_nian() {
  _has_bits_[0] |= 0x00000001u;
}
void YueKXianShuJu::clear_has_nian() {
  _has_bits_[0] &= ~0x00000001u;
}
void YueKXianShuJu::clear_nian() {
  nian_ = GOOGLE_LONGLONG(0);
  clear_has_nian();
}
 ::google::protobuf::int64 YueKXianShuJu::nian() const {
  // @@protoc_insertion_point(field_get:dzhyun.YueKXianShuJu.Nian)
  return nian_;
}
 void YueKXianShuJu::set_nian(::google::protobuf::int64 value) {
  set_has_nian();
  nian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.YueKXianShuJu.Nian)
}

// optional int64 ZhangFu = 2;
bool YueKXianShuJu::has_zhangfu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YueKXianShuJu::set_has_zhangfu() {
  _has_bits_[0] |= 0x00000002u;
}
void YueKXianShuJu::clear_has_zhangfu() {
  _has_bits_[0] &= ~0x00000002u;
}
void YueKXianShuJu::clear_zhangfu() {
  zhangfu_ = GOOGLE_LONGLONG(0);
  clear_has_zhangfu();
}
 ::google::protobuf::int64 YueKXianShuJu::zhangfu() const {
  // @@protoc_insertion_point(field_get:dzhyun.YueKXianShuJu.ZhangFu)
  return zhangfu_;
}
 void YueKXianShuJu::set_zhangfu(::google::protobuf::int64 value) {
  set_has_zhangfu();
  zhangfu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.YueKXianShuJu.ZhangFu)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YueZouShiShuJu::kYueFieldNumber;
const int YueZouShiShuJu::kYueKXianFieldNumber;
const int YueZouShiShuJu::kShangZhangGaiLvFieldNumber;
const int YueZouShiShuJu::kPingJunZhangFuFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YueZouShiShuJu::YueZouShiShuJu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.YueZouShiShuJu)
}

void YueZouShiShuJu::InitAsDefaultInstance() {
}

YueZouShiShuJu::YueZouShiShuJu(const YueZouShiShuJu& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.YueZouShiShuJu)
}

void YueZouShiShuJu::SharedCtor() {
  _cached_size_ = 0;
  yue_ = GOOGLE_LONGLONG(0);
  shangzhanggailv_ = GOOGLE_LONGLONG(0);
  pingjunzhangfu_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YueZouShiShuJu::~YueZouShiShuJu() {
  // @@protoc_insertion_point(destructor:dzhyun.YueZouShiShuJu)
  SharedDtor();
}

void YueZouShiShuJu::SharedDtor() {
  if (this != default_instance_) {
  }
}

void YueZouShiShuJu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YueZouShiShuJu::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YueZouShiShuJu_descriptor_;
}

const YueZouShiShuJu& YueZouShiShuJu::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2ehistorytrends_2eproto();
  return *default_instance_;
}

YueZouShiShuJu* YueZouShiShuJu::default_instance_ = NULL;

YueZouShiShuJu* YueZouShiShuJu::New(::google::protobuf::Arena* arena) const {
  YueZouShiShuJu* n = new YueZouShiShuJu;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YueZouShiShuJu::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.YueZouShiShuJu)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(YueZouShiShuJu, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<YueZouShiShuJu*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 13u) {
    ZR_(shangzhanggailv_, pingjunzhangfu_);
    yue_ = GOOGLE_LONGLONG(0);
  }

#undef ZR_HELPER_
#undef ZR_

  yuekxian_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool YueZouShiShuJu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.YueZouShiShuJu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 Yue = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &yue_)));
          set_has_yue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_YueKXian;
        break;
      }

      // repeated .dzhyun.YueKXianShuJu YueKXian = 2;
      case 2: {
        if (tag == 18) {
         parse_YueKXian:
          DO_(input->IncrementRecursionDepth());
         parse_loop_YueKXian:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_yuekxian()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_YueKXian;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_ShangZhangGaiLv;
        break;
      }

      // optional int64 ShangZhangGaiLv = 3;
      case 3: {
        if (tag == 24) {
         parse_ShangZhangGaiLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shangzhanggailv_)));
          set_has_shangzhanggailv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_PingJunZhangFu;
        break;
      }

      // optional int64 PingJunZhangFu = 4;
      case 4: {
        if (tag == 32) {
         parse_PingJunZhangFu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pingjunzhangfu_)));
          set_has_pingjunzhangfu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.YueZouShiShuJu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.YueZouShiShuJu)
  return false;
#undef DO_
}

void YueZouShiShuJu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.YueZouShiShuJu)
  // required int64 Yue = 1;
  if (has_yue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->yue(), output);
  }

  // repeated .dzhyun.YueKXianShuJu YueKXian = 2;
  for (unsigned int i = 0, n = this->yuekxian_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->yuekxian(i), output);
  }

  // optional int64 ShangZhangGaiLv = 3;
  if (has_shangzhanggailv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->shangzhanggailv(), output);
  }

  // optional int64 PingJunZhangFu = 4;
  if (has_pingjunzhangfu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->pingjunzhangfu(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.YueZouShiShuJu)
}

::google::protobuf::uint8* YueZouShiShuJu::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.YueZouShiShuJu)
  // required int64 Yue = 1;
  if (has_yue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->yue(), target);
  }

  // repeated .dzhyun.YueKXianShuJu YueKXian = 2;
  for (unsigned int i = 0, n = this->yuekxian_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->yuekxian(i), target);
  }

  // optional int64 ShangZhangGaiLv = 3;
  if (has_shangzhanggailv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->shangzhanggailv(), target);
  }

  // optional int64 PingJunZhangFu = 4;
  if (has_pingjunzhangfu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->pingjunzhangfu(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.YueZouShiShuJu)
  return target;
}

int YueZouShiShuJu::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.YueZouShiShuJu)
  int total_size = 0;

  // required int64 Yue = 1;
  if (has_yue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->yue());
  }
  if (_has_bits_[2 / 32] & 12u) {
    // optional int64 ShangZhangGaiLv = 3;
    if (has_shangzhanggailv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shangzhanggailv());
    }

    // optional int64 PingJunZhangFu = 4;
    if (has_pingjunzhangfu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pingjunzhangfu());
    }

  }
  // repeated .dzhyun.YueKXianShuJu YueKXian = 2;
  total_size += 1 * this->yuekxian_size();
  for (int i = 0; i < this->yuekxian_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->yuekxian(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YueZouShiShuJu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.YueZouShiShuJu)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YueZouShiShuJu* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YueZouShiShuJu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.YueZouShiShuJu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.YueZouShiShuJu)
    MergeFrom(*source);
  }
}

void YueZouShiShuJu::MergeFrom(const YueZouShiShuJu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.YueZouShiShuJu)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  yuekxian_.MergeFrom(from.yuekxian_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_yue()) {
      set_yue(from.yue());
    }
    if (from.has_shangzhanggailv()) {
      set_shangzhanggailv(from.shangzhanggailv());
    }
    if (from.has_pingjunzhangfu()) {
      set_pingjunzhangfu(from.pingjunzhangfu());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void YueZouShiShuJu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.YueZouShiShuJu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YueZouShiShuJu::CopyFrom(const YueZouShiShuJu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.YueZouShiShuJu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YueZouShiShuJu::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->yuekxian())) return false;
  return true;
}

void YueZouShiShuJu::Swap(YueZouShiShuJu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YueZouShiShuJu::InternalSwap(YueZouShiShuJu* other) {
  std::swap(yue_, other->yue_);
  yuekxian_.UnsafeArenaSwap(&other->yuekxian_);
  std::swap(shangzhanggailv_, other->shangzhanggailv_);
  std::swap(pingjunzhangfu_, other->pingjunzhangfu_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YueZouShiShuJu::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YueZouShiShuJu_descriptor_;
  metadata.reflection = YueZouShiShuJu_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YueZouShiShuJu

// required int64 Yue = 1;
bool YueZouShiShuJu::has_yue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YueZouShiShuJu::set_has_yue() {
  _has_bits_[0] |= 0x00000001u;
}
void YueZouShiShuJu::clear_has_yue() {
  _has_bits_[0] &= ~0x00000001u;
}
void YueZouShiShuJu::clear_yue() {
  yue_ = GOOGLE_LONGLONG(0);
  clear_has_yue();
}
 ::google::protobuf::int64 YueZouShiShuJu::yue() const {
  // @@protoc_insertion_point(field_get:dzhyun.YueZouShiShuJu.Yue)
  return yue_;
}
 void YueZouShiShuJu::set_yue(::google::protobuf::int64 value) {
  set_has_yue();
  yue_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.YueZouShiShuJu.Yue)
}

// repeated .dzhyun.YueKXianShuJu YueKXian = 2;
int YueZouShiShuJu::yuekxian_size() const {
  return yuekxian_.size();
}
void YueZouShiShuJu::clear_yuekxian() {
  yuekxian_.Clear();
}
const ::dzhyun::YueKXianShuJu& YueZouShiShuJu::yuekxian(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.YueZouShiShuJu.YueKXian)
  return yuekxian_.Get(index);
}
::dzhyun::YueKXianShuJu* YueZouShiShuJu::mutable_yuekxian(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.YueZouShiShuJu.YueKXian)
  return yuekxian_.Mutable(index);
}
::dzhyun::YueKXianShuJu* YueZouShiShuJu::add_yuekxian() {
  // @@protoc_insertion_point(field_add:dzhyun.YueZouShiShuJu.YueKXian)
  return yuekxian_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::YueKXianShuJu >*
YueZouShiShuJu::mutable_yuekxian() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.YueZouShiShuJu.YueKXian)
  return &yuekxian_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::YueKXianShuJu >&
YueZouShiShuJu::yuekxian() const {
  // @@protoc_insertion_point(field_list:dzhyun.YueZouShiShuJu.YueKXian)
  return yuekxian_;
}

// optional int64 ShangZhangGaiLv = 3;
bool YueZouShiShuJu::has_shangzhanggailv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YueZouShiShuJu::set_has_shangzhanggailv() {
  _has_bits_[0] |= 0x00000004u;
}
void YueZouShiShuJu::clear_has_shangzhanggailv() {
  _has_bits_[0] &= ~0x00000004u;
}
void YueZouShiShuJu::clear_shangzhanggailv() {
  shangzhanggailv_ = GOOGLE_LONGLONG(0);
  clear_has_shangzhanggailv();
}
 ::google::protobuf::int64 YueZouShiShuJu::shangzhanggailv() const {
  // @@protoc_insertion_point(field_get:dzhyun.YueZouShiShuJu.ShangZhangGaiLv)
  return shangzhanggailv_;
}
 void YueZouShiShuJu::set_shangzhanggailv(::google::protobuf::int64 value) {
  set_has_shangzhanggailv();
  shangzhanggailv_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.YueZouShiShuJu.ShangZhangGaiLv)
}

// optional int64 PingJunZhangFu = 4;
bool YueZouShiShuJu::has_pingjunzhangfu() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void YueZouShiShuJu::set_has_pingjunzhangfu() {
  _has_bits_[0] |= 0x00000008u;
}
void YueZouShiShuJu::clear_has_pingjunzhangfu() {
  _has_bits_[0] &= ~0x00000008u;
}
void YueZouShiShuJu::clear_pingjunzhangfu() {
  pingjunzhangfu_ = GOOGLE_LONGLONG(0);
  clear_has_pingjunzhangfu();
}
 ::google::protobuf::int64 YueZouShiShuJu::pingjunzhangfu() const {
  // @@protoc_insertion_point(field_get:dzhyun.YueZouShiShuJu.PingJunZhangFu)
  return pingjunzhangfu_;
}
 void YueZouShiShuJu::set_pingjunzhangfu(::google::protobuf::int64 value) {
  set_has_pingjunzhangfu();
  pingjunzhangfu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.YueZouShiShuJu.PingJunZhangFu)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HistoryTrends::kObjFieldNumber;
const int HistoryTrends::kYueZouShiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HistoryTrends::HistoryTrends()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.HistoryTrends)
}

void HistoryTrends::InitAsDefaultInstance() {
}

HistoryTrends::HistoryTrends(const HistoryTrends& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.HistoryTrends)
}

void HistoryTrends::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HistoryTrends::~HistoryTrends() {
  // @@protoc_insertion_point(destructor:dzhyun.HistoryTrends)
  SharedDtor();
}

void HistoryTrends::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HistoryTrends::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HistoryTrends::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HistoryTrends_descriptor_;
}

const HistoryTrends& HistoryTrends::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2ehistorytrends_2eproto();
  return *default_instance_;
}

HistoryTrends* HistoryTrends::default_instance_ = NULL;

HistoryTrends* HistoryTrends::New(::google::protobuf::Arena* arena) const {
  HistoryTrends* n = new HistoryTrends;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HistoryTrends::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.HistoryTrends)
  if (has_obj()) {
    obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  yuezoushi_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HistoryTrends::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.HistoryTrends)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.HistoryTrends.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_YueZouShi;
        break;
      }

      // repeated .dzhyun.YueZouShiShuJu YueZouShi = 2;
      case 2: {
        if (tag == 18) {
         parse_YueZouShi:
          DO_(input->IncrementRecursionDepth());
         parse_loop_YueZouShi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_yuezoushi()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_YueZouShi;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.HistoryTrends)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.HistoryTrends)
  return false;
#undef DO_
}

void HistoryTrends::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.HistoryTrends)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.HistoryTrends.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // repeated .dzhyun.YueZouShiShuJu YueZouShi = 2;
  for (unsigned int i = 0, n = this->yuezoushi_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->yuezoushi(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.HistoryTrends)
}

::google::protobuf::uint8* HistoryTrends::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.HistoryTrends)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.HistoryTrends.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // repeated .dzhyun.YueZouShiShuJu YueZouShi = 2;
  for (unsigned int i = 0, n = this->yuezoushi_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->yuezoushi(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.HistoryTrends)
  return target;
}

int HistoryTrends::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.HistoryTrends)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  // repeated .dzhyun.YueZouShiShuJu YueZouShi = 2;
  total_size += 1 * this->yuezoushi_size();
  for (int i = 0; i < this->yuezoushi_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->yuezoushi(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HistoryTrends::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.HistoryTrends)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HistoryTrends* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HistoryTrends>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.HistoryTrends)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.HistoryTrends)
    MergeFrom(*source);
  }
}

void HistoryTrends::MergeFrom(const HistoryTrends& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.HistoryTrends)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  yuezoushi_.MergeFrom(from.yuezoushi_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HistoryTrends::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.HistoryTrends)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HistoryTrends::CopyFrom(const HistoryTrends& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.HistoryTrends)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HistoryTrends::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->yuezoushi())) return false;
  return true;
}

void HistoryTrends::Swap(HistoryTrends* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HistoryTrends::InternalSwap(HistoryTrends* other) {
  obj_.Swap(&other->obj_);
  yuezoushi_.UnsafeArenaSwap(&other->yuezoushi_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HistoryTrends::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HistoryTrends_descriptor_;
  metadata.reflection = HistoryTrends_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HistoryTrends

// required string Obj = 1;
bool HistoryTrends::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HistoryTrends::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void HistoryTrends::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void HistoryTrends::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& HistoryTrends::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.HistoryTrends.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HistoryTrends::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.HistoryTrends.Obj)
}
 void HistoryTrends::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.HistoryTrends.Obj)
}
 void HistoryTrends::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.HistoryTrends.Obj)
}
 ::std::string* HistoryTrends::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.HistoryTrends.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HistoryTrends::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.HistoryTrends.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HistoryTrends::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.HistoryTrends.Obj)
}

// repeated .dzhyun.YueZouShiShuJu YueZouShi = 2;
int HistoryTrends::yuezoushi_size() const {
  return yuezoushi_.size();
}
void HistoryTrends::clear_yuezoushi() {
  yuezoushi_.Clear();
}
const ::dzhyun::YueZouShiShuJu& HistoryTrends::yuezoushi(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.HistoryTrends.YueZouShi)
  return yuezoushi_.Get(index);
}
::dzhyun::YueZouShiShuJu* HistoryTrends::mutable_yuezoushi(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.HistoryTrends.YueZouShi)
  return yuezoushi_.Mutable(index);
}
::dzhyun::YueZouShiShuJu* HistoryTrends::add_yuezoushi() {
  // @@protoc_insertion_point(field_add:dzhyun.HistoryTrends.YueZouShi)
  return yuezoushi_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::YueZouShiShuJu >*
HistoryTrends::mutable_yuezoushi() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.HistoryTrends.YueZouShi)
  return &yuezoushi_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::YueZouShiShuJu >&
HistoryTrends::yuezoushi() const {
  // @@protoc_insertion_point(field_list:dzhyun.HistoryTrends.YueZouShi)
  return yuezoushi_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonthTrends::kObjFieldNumber;
const int MonthTrends::kHangQingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonthTrends::MonthTrends()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.MonthTrends)
}

void MonthTrends::InitAsDefaultInstance() {
}

MonthTrends::MonthTrends(const MonthTrends& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.MonthTrends)
}

void MonthTrends::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MonthTrends::~MonthTrends() {
  // @@protoc_insertion_point(destructor:dzhyun.MonthTrends)
  SharedDtor();
}

void MonthTrends::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MonthTrends::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonthTrends::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MonthTrends_descriptor_;
}

const MonthTrends& MonthTrends::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2ehistorytrends_2eproto();
  return *default_instance_;
}

MonthTrends* MonthTrends::default_instance_ = NULL;

MonthTrends* MonthTrends::New(::google::protobuf::Arena* arena) const {
  MonthTrends* n = new MonthTrends;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MonthTrends::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.MonthTrends)
  if (has_obj()) {
    obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hangqing_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MonthTrends::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.MonthTrends)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.MonthTrends.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_HangQing;
        break;
      }

      // repeated .dzhyun.LiShiHangQing HangQing = 2;
      case 2: {
        if (tag == 18) {
         parse_HangQing:
          DO_(input->IncrementRecursionDepth());
         parse_loop_HangQing:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_hangqing()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_HangQing;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.MonthTrends)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.MonthTrends)
  return false;
#undef DO_
}

void MonthTrends::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.MonthTrends)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.MonthTrends.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // repeated .dzhyun.LiShiHangQing HangQing = 2;
  for (unsigned int i = 0, n = this->hangqing_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hangqing(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.MonthTrends)
}

::google::protobuf::uint8* MonthTrends::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.MonthTrends)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.MonthTrends.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // repeated .dzhyun.LiShiHangQing HangQing = 2;
  for (unsigned int i = 0, n = this->hangqing_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hangqing(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.MonthTrends)
  return target;
}

int MonthTrends::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.MonthTrends)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  // repeated .dzhyun.LiShiHangQing HangQing = 2;
  total_size += 1 * this->hangqing_size();
  for (int i = 0; i < this->hangqing_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hangqing(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonthTrends::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.MonthTrends)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MonthTrends* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MonthTrends>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.MonthTrends)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.MonthTrends)
    MergeFrom(*source);
  }
}

void MonthTrends::MergeFrom(const MonthTrends& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.MonthTrends)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  hangqing_.MergeFrom(from.hangqing_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MonthTrends::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.MonthTrends)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonthTrends::CopyFrom(const MonthTrends& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.MonthTrends)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonthTrends::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->hangqing())) return false;
  return true;
}

void MonthTrends::Swap(MonthTrends* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonthTrends::InternalSwap(MonthTrends* other) {
  obj_.Swap(&other->obj_);
  hangqing_.UnsafeArenaSwap(&other->hangqing_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MonthTrends::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MonthTrends_descriptor_;
  metadata.reflection = MonthTrends_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MonthTrends

// required string Obj = 1;
bool MonthTrends::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MonthTrends::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void MonthTrends::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void MonthTrends::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& MonthTrends::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.MonthTrends.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MonthTrends::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.MonthTrends.Obj)
}
 void MonthTrends::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.MonthTrends.Obj)
}
 void MonthTrends::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.MonthTrends.Obj)
}
 ::std::string* MonthTrends::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.MonthTrends.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MonthTrends::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.MonthTrends.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MonthTrends::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.MonthTrends.Obj)
}

// repeated .dzhyun.LiShiHangQing HangQing = 2;
int MonthTrends::hangqing_size() const {
  return hangqing_.size();
}
void MonthTrends::clear_hangqing() {
  hangqing_.Clear();
}
const ::dzhyun::LiShiHangQing& MonthTrends::hangqing(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.MonthTrends.HangQing)
  return hangqing_.Get(index);
}
::dzhyun::LiShiHangQing* MonthTrends::mutable_hangqing(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.MonthTrends.HangQing)
  return hangqing_.Mutable(index);
}
::dzhyun::LiShiHangQing* MonthTrends::add_hangqing() {
  // @@protoc_insertion_point(field_add:dzhyun.MonthTrends.HangQing)
  return hangqing_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::LiShiHangQing >*
MonthTrends::mutable_hangqing() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.MonthTrends.HangQing)
  return &hangqing_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::LiShiHangQing >&
MonthTrends::hangqing() const {
  // @@protoc_insertion_point(field_list:dzhyun.MonthTrends.HangQing)
  return hangqing_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dzhyun

// @@protoc_insertion_point(global_scope)
