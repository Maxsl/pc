// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CldDanShangPinShuXing.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CldDanShangPinShuXing.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dzhyun {

namespace {

const ::google::protobuf::Descriptor* DanShangPinShuXing_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DanShangPinShuXing_reflection_ = NULL;
const ::google::protobuf::Descriptor* MarketTradeDate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MarketTradeDate_reflection_ = NULL;
const ::google::protobuf::Descriptor* FutureInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FutureInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewStockInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewStockInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CldDanShangPinShuXing_2eproto() {
  protobuf_AddDesc_CldDanShangPinShuXing_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CldDanShangPinShuXing.proto");
  GOOGLE_CHECK(file != NULL);
  DanShangPinShuXing_descriptor_ = file->message_type(0);
  static const int DanShangPinShuXing_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DanShangPinShuXing, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DanShangPinShuXing, shangshishijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DanShangPinShuXing, zhongwenjiancheng_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DanShangPinShuXing, yingwenquancheng_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DanShangPinShuXing, xiaoshudianweishu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DanShangPinShuXing, jiaoyishijianleixin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DanShangPinShuXing, jiaoyibizhong_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DanShangPinShuXing, tuishishijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DanShangPinShuXing, shangshizhuangtai_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DanShangPinShuXing, zhengquanleibie_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DanShangPinShuXing, tingpai_),
  };
  DanShangPinShuXing_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DanShangPinShuXing_descriptor_,
      DanShangPinShuXing::default_instance_,
      DanShangPinShuXing_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DanShangPinShuXing, _has_bits_[0]),
      -1,
      -1,
      sizeof(DanShangPinShuXing),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DanShangPinShuXing, _internal_metadata_),
      -1);
  MarketTradeDate_descriptor_ = file->message_type(1);
  static const int MarketTradeDate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketTradeDate, market_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketTradeDate, tradedate_),
  };
  MarketTradeDate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MarketTradeDate_descriptor_,
      MarketTradeDate::default_instance_,
      MarketTradeDate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketTradeDate, _has_bits_[0]),
      -1,
      -1,
      sizeof(MarketTradeDate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketTradeDate, _internal_metadata_),
      -1);
  FutureInfo_descriptor_ = file->message_type(2);
  static const int FutureInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureInfo, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureInfo, begindate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureInfo, enddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureInfo, deliveryday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureInfo, tradeunit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureInfo, marginrate_),
  };
  FutureInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FutureInfo_descriptor_,
      FutureInfo::default_instance_,
      FutureInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(FutureInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureInfo, _internal_metadata_),
      -1);
  NewStockInfo_descriptor_ = file->message_type(3);
  static const int NewStockInfo_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, stockcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, stockname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, stocksummary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, buycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, issuetotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, onlinetotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, buylimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, issueprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, firstclose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, buydate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, pubdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, paydate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, tradedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, issuepe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, industrype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, successrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, offertotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, offertimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, seriesnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, increasetotal_),
  };
  NewStockInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NewStockInfo_descriptor_,
      NewStockInfo::default_instance_,
      NewStockInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(NewStockInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewStockInfo, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CldDanShangPinShuXing_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DanShangPinShuXing_descriptor_, &DanShangPinShuXing::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MarketTradeDate_descriptor_, &MarketTradeDate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FutureInfo_descriptor_, &FutureInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NewStockInfo_descriptor_, &NewStockInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CldDanShangPinShuXing_2eproto() {
  delete DanShangPinShuXing::default_instance_;
  delete DanShangPinShuXing_reflection_;
  delete MarketTradeDate::default_instance_;
  delete MarketTradeDate_reflection_;
  delete FutureInfo::default_instance_;
  delete FutureInfo_reflection_;
  delete NewStockInfo::default_instance_;
  delete NewStockInfo_reflection_;
}

void protobuf_AddDesc_CldDanShangPinShuXing_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033CldDanShangPinShuXing.proto\022\006dzhyun\"\232\002"
    "\n\022DanShangPinShuXing\022\013\n\003obj\030\001 \002(\t\022\027\n\017sha"
    "ngShiShiJian\030\002 \001(\t\022\031\n\021zhongWenJianCheng\030"
    "\003 \001(\t\022\030\n\020yingWenQuanCheng\030\004 \001(\t\022\031\n\021xiaoS"
    "huDianWeiShu\030\005 \001(\005\022\033\n\023jiaoYiShiJianLeiXi"
    "n\030\006 \001(\005\022\025\n\rjiaoYiBiZhong\030\007 \001(\t\022\025\n\rtuiShi"
    "ShiJian\030\010 \001(\t\022\031\n\021shangShiZhuangTai\030\t \001(\005"
    "\022\027\n\017zhengQuanLeiBie\030\n \001(\t\022\017\n\007tingPai\030\013 \001"
    "(\005\"4\n\017MarketTradeDate\022\016\n\006Market\030\001 \002(\t\022\021\n"
    "\tTradeDate\030\002 \003(\t\"\207\001\n\nFutureInfo\022\013\n\003Obj\030\001"
    " \002(\t\022\014\n\004Name\030\002 \001(\t\022\021\n\tBeginDate\030\003 \001(\t\022\017\n"
    "\007EndDate\030\004 \001(\t\022\023\n\013DeliveryDay\030\005 \001(\t\022\021\n\tT"
    "radeUnit\030\006 \001(\001\022\022\n\nMarginRate\030\007 \001(\001\"\220\003\n\014N"
    "ewStockInfo\022\021\n\tStockCode\030\001 \002(\t\022\021\n\tStockN"
    "ame\030\002 \001(\t\022\024\n\014StockSummary\030\003 \001(\t\022\017\n\007BuyCo"
    "de\030\004 \001(\t\022\022\n\nIssueTotal\030\005 \001(\t\022\023\n\013OnlineTo"
    "tal\030\006 \001(\t\022\020\n\010BuyLimit\030\007 \001(\t\022\022\n\nIssuePric"
    "e\030\010 \001(\t\022\022\n\nFirstClose\030\t \001(\t\022\017\n\007BuyDate\030\n"
    " \001(\t\022\017\n\007PubDate\030\013 \001(\t\022\017\n\007PayDate\030\014 \001(\t\022\021"
    "\n\tTradeDate\030\r \001(\t\022\017\n\007IssuePE\030\016 \001(\t\022\022\n\nIn"
    "dustryPE\030\017 \001(\t\022\023\n\013SuccessRate\030\020 \001(\t\022\022\n\nO"
    "fferTotal\030\021 \001(\t\022\022\n\nOfferTimes\030\022 \001(\t\022\021\n\tS"
    "eriesNum\030\023 \001(\t\022\025\n\rIncreaseTotal\030\024 \001(\tB\022\n"
    "\020com.dzhyun.proto", 937);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CldDanShangPinShuXing.proto", &protobuf_RegisterTypes);
  DanShangPinShuXing::default_instance_ = new DanShangPinShuXing();
  MarketTradeDate::default_instance_ = new MarketTradeDate();
  FutureInfo::default_instance_ = new FutureInfo();
  NewStockInfo::default_instance_ = new NewStockInfo();
  DanShangPinShuXing::default_instance_->InitAsDefaultInstance();
  MarketTradeDate::default_instance_->InitAsDefaultInstance();
  FutureInfo::default_instance_->InitAsDefaultInstance();
  NewStockInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CldDanShangPinShuXing_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CldDanShangPinShuXing_2eproto {
  StaticDescriptorInitializer_CldDanShangPinShuXing_2eproto() {
    protobuf_AddDesc_CldDanShangPinShuXing_2eproto();
  }
} static_descriptor_initializer_CldDanShangPinShuXing_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DanShangPinShuXing::kObjFieldNumber;
const int DanShangPinShuXing::kShangShiShiJianFieldNumber;
const int DanShangPinShuXing::kZhongWenJianChengFieldNumber;
const int DanShangPinShuXing::kYingWenQuanChengFieldNumber;
const int DanShangPinShuXing::kXiaoShuDianWeiShuFieldNumber;
const int DanShangPinShuXing::kJiaoYiShiJianLeiXinFieldNumber;
const int DanShangPinShuXing::kJiaoYiBiZhongFieldNumber;
const int DanShangPinShuXing::kTuiShiShiJianFieldNumber;
const int DanShangPinShuXing::kShangShiZhuangTaiFieldNumber;
const int DanShangPinShuXing::kZhengQuanLeiBieFieldNumber;
const int DanShangPinShuXing::kTingPaiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DanShangPinShuXing::DanShangPinShuXing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.DanShangPinShuXing)
}

void DanShangPinShuXing::InitAsDefaultInstance() {
}

DanShangPinShuXing::DanShangPinShuXing(const DanShangPinShuXing& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.DanShangPinShuXing)
}

void DanShangPinShuXing::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shangshishijian_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zhongwenjiancheng_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  yingwenquancheng_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xiaoshudianweishu_ = 0;
  jiaoyishijianleixin_ = 0;
  jiaoyibizhong_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tuishishijian_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shangshizhuangtai_ = 0;
  zhengquanleibie_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tingpai_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DanShangPinShuXing::~DanShangPinShuXing() {
  // @@protoc_insertion_point(destructor:dzhyun.DanShangPinShuXing)
  SharedDtor();
}

void DanShangPinShuXing::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shangshishijian_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zhongwenjiancheng_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  yingwenquancheng_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jiaoyibizhong_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tuishishijian_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zhengquanleibie_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DanShangPinShuXing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DanShangPinShuXing::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DanShangPinShuXing_descriptor_;
}

const DanShangPinShuXing& DanShangPinShuXing::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CldDanShangPinShuXing_2eproto();
  return *default_instance_;
}

DanShangPinShuXing* DanShangPinShuXing::default_instance_ = NULL;

DanShangPinShuXing* DanShangPinShuXing::New(::google::protobuf::Arena* arena) const {
  DanShangPinShuXing* n = new DanShangPinShuXing;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DanShangPinShuXing::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.DanShangPinShuXing)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DanShangPinShuXing, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DanShangPinShuXing*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(xiaoshudianweishu_, jiaoyishijianleixin_);
    if (has_obj()) {
      obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_shangshishijian()) {
      shangshishijian_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_zhongwenjiancheng()) {
      zhongwenjiancheng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_yingwenquancheng()) {
      yingwenquancheng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_jiaoyibizhong()) {
      jiaoyibizhong_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_tuishishijian()) {
      tuishishijian_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 1792u) {
    ZR_(shangshizhuangtai_, tingpai_);
    if (has_zhengquanleibie()) {
      zhengquanleibie_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DanShangPinShuXing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.DanShangPinShuXing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DanShangPinShuXing.obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_shangShiShiJian;
        break;
      }

      // optional string shangShiShiJian = 2;
      case 2: {
        if (tag == 18) {
         parse_shangShiShiJian:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shangshishijian()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->shangshishijian().data(), this->shangshishijian().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DanShangPinShuXing.shangShiShiJian");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_zhongWenJianCheng;
        break;
      }

      // optional string zhongWenJianCheng = 3;
      case 3: {
        if (tag == 26) {
         parse_zhongWenJianCheng:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zhongwenjiancheng()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->zhongwenjiancheng().data(), this->zhongwenjiancheng().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DanShangPinShuXing.zhongWenJianCheng");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_yingWenQuanCheng;
        break;
      }

      // optional string yingWenQuanCheng = 4;
      case 4: {
        if (tag == 34) {
         parse_yingWenQuanCheng:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_yingwenquancheng()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->yingwenquancheng().data(), this->yingwenquancheng().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DanShangPinShuXing.yingWenQuanCheng");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_xiaoShuDianWeiShu;
        break;
      }

      // optional int32 xiaoShuDianWeiShu = 5;
      case 5: {
        if (tag == 40) {
         parse_xiaoShuDianWeiShu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xiaoshudianweishu_)));
          set_has_xiaoshudianweishu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_jiaoYiShiJianLeiXin;
        break;
      }

      // optional int32 jiaoYiShiJianLeiXin = 6;
      case 6: {
        if (tag == 48) {
         parse_jiaoYiShiJianLeiXin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jiaoyishijianleixin_)));
          set_has_jiaoyishijianleixin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_jiaoYiBiZhong;
        break;
      }

      // optional string jiaoYiBiZhong = 7;
      case 7: {
        if (tag == 58) {
         parse_jiaoYiBiZhong:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jiaoyibizhong()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->jiaoyibizhong().data(), this->jiaoyibizhong().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DanShangPinShuXing.jiaoYiBiZhong");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_tuiShiShiJian;
        break;
      }

      // optional string tuiShiShiJian = 8;
      case 8: {
        if (tag == 66) {
         parse_tuiShiShiJian:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tuishishijian()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tuishishijian().data(), this->tuishishijian().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DanShangPinShuXing.tuiShiShiJian");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_shangShiZhuangTai;
        break;
      }

      // optional int32 shangShiZhuangTai = 9;
      case 9: {
        if (tag == 72) {
         parse_shangShiZhuangTai:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shangshizhuangtai_)));
          set_has_shangshizhuangtai();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_zhengQuanLeiBie;
        break;
      }

      // optional string zhengQuanLeiBie = 10;
      case 10: {
        if (tag == 82) {
         parse_zhengQuanLeiBie:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zhengquanleibie()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->zhengquanleibie().data(), this->zhengquanleibie().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DanShangPinShuXing.zhengQuanLeiBie");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_tingPai;
        break;
      }

      // optional int32 tingPai = 11;
      case 11: {
        if (tag == 88) {
         parse_tingPai:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tingpai_)));
          set_has_tingpai();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.DanShangPinShuXing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.DanShangPinShuXing)
  return false;
#undef DO_
}

void DanShangPinShuXing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.DanShangPinShuXing)
  // required string obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DanShangPinShuXing.obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // optional string shangShiShiJian = 2;
  if (has_shangshishijian()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shangshishijian().data(), this->shangshishijian().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DanShangPinShuXing.shangShiShiJian");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->shangshishijian(), output);
  }

  // optional string zhongWenJianCheng = 3;
  if (has_zhongwenjiancheng()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zhongwenjiancheng().data(), this->zhongwenjiancheng().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DanShangPinShuXing.zhongWenJianCheng");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->zhongwenjiancheng(), output);
  }

  // optional string yingWenQuanCheng = 4;
  if (has_yingwenquancheng()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->yingwenquancheng().data(), this->yingwenquancheng().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DanShangPinShuXing.yingWenQuanCheng");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->yingwenquancheng(), output);
  }

  // optional int32 xiaoShuDianWeiShu = 5;
  if (has_xiaoshudianweishu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->xiaoshudianweishu(), output);
  }

  // optional int32 jiaoYiShiJianLeiXin = 6;
  if (has_jiaoyishijianleixin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->jiaoyishijianleixin(), output);
  }

  // optional string jiaoYiBiZhong = 7;
  if (has_jiaoyibizhong()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jiaoyibizhong().data(), this->jiaoyibizhong().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DanShangPinShuXing.jiaoYiBiZhong");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->jiaoyibizhong(), output);
  }

  // optional string tuiShiShiJian = 8;
  if (has_tuishishijian()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tuishishijian().data(), this->tuishishijian().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DanShangPinShuXing.tuiShiShiJian");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->tuishishijian(), output);
  }

  // optional int32 shangShiZhuangTai = 9;
  if (has_shangshizhuangtai()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->shangshizhuangtai(), output);
  }

  // optional string zhengQuanLeiBie = 10;
  if (has_zhengquanleibie()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zhengquanleibie().data(), this->zhengquanleibie().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DanShangPinShuXing.zhengQuanLeiBie");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->zhengquanleibie(), output);
  }

  // optional int32 tingPai = 11;
  if (has_tingpai()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->tingpai(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.DanShangPinShuXing)
}

::google::protobuf::uint8* DanShangPinShuXing::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.DanShangPinShuXing)
  // required string obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DanShangPinShuXing.obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // optional string shangShiShiJian = 2;
  if (has_shangshishijian()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shangshishijian().data(), this->shangshishijian().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DanShangPinShuXing.shangShiShiJian");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->shangshishijian(), target);
  }

  // optional string zhongWenJianCheng = 3;
  if (has_zhongwenjiancheng()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zhongwenjiancheng().data(), this->zhongwenjiancheng().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DanShangPinShuXing.zhongWenJianCheng");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->zhongwenjiancheng(), target);
  }

  // optional string yingWenQuanCheng = 4;
  if (has_yingwenquancheng()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->yingwenquancheng().data(), this->yingwenquancheng().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DanShangPinShuXing.yingWenQuanCheng");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->yingwenquancheng(), target);
  }

  // optional int32 xiaoShuDianWeiShu = 5;
  if (has_xiaoshudianweishu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->xiaoshudianweishu(), target);
  }

  // optional int32 jiaoYiShiJianLeiXin = 6;
  if (has_jiaoyishijianleixin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->jiaoyishijianleixin(), target);
  }

  // optional string jiaoYiBiZhong = 7;
  if (has_jiaoyibizhong()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jiaoyibizhong().data(), this->jiaoyibizhong().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DanShangPinShuXing.jiaoYiBiZhong");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->jiaoyibizhong(), target);
  }

  // optional string tuiShiShiJian = 8;
  if (has_tuishishijian()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tuishishijian().data(), this->tuishishijian().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DanShangPinShuXing.tuiShiShiJian");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->tuishishijian(), target);
  }

  // optional int32 shangShiZhuangTai = 9;
  if (has_shangshizhuangtai()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->shangshizhuangtai(), target);
  }

  // optional string zhengQuanLeiBie = 10;
  if (has_zhengquanleibie()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zhengquanleibie().data(), this->zhengquanleibie().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DanShangPinShuXing.zhengQuanLeiBie");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->zhengquanleibie(), target);
  }

  // optional int32 tingPai = 11;
  if (has_tingpai()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->tingpai(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.DanShangPinShuXing)
  return target;
}

int DanShangPinShuXing::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.DanShangPinShuXing)
  int total_size = 0;

  // required string obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  if (_has_bits_[1 / 32] & 254u) {
    // optional string shangShiShiJian = 2;
    if (has_shangshishijian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shangshishijian());
    }

    // optional string zhongWenJianCheng = 3;
    if (has_zhongwenjiancheng()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->zhongwenjiancheng());
    }

    // optional string yingWenQuanCheng = 4;
    if (has_yingwenquancheng()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->yingwenquancheng());
    }

    // optional int32 xiaoShuDianWeiShu = 5;
    if (has_xiaoshudianweishu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->xiaoshudianweishu());
    }

    // optional int32 jiaoYiShiJianLeiXin = 6;
    if (has_jiaoyishijianleixin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jiaoyishijianleixin());
    }

    // optional string jiaoYiBiZhong = 7;
    if (has_jiaoyibizhong()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jiaoyibizhong());
    }

    // optional string tuiShiShiJian = 8;
    if (has_tuishishijian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tuishishijian());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional int32 shangShiZhuangTai = 9;
    if (has_shangshizhuangtai()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shangshizhuangtai());
    }

    // optional string zhengQuanLeiBie = 10;
    if (has_zhengquanleibie()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->zhengquanleibie());
    }

    // optional int32 tingPai = 11;
    if (has_tingpai()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tingpai());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DanShangPinShuXing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.DanShangPinShuXing)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DanShangPinShuXing* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DanShangPinShuXing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.DanShangPinShuXing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.DanShangPinShuXing)
    MergeFrom(*source);
  }
}

void DanShangPinShuXing::MergeFrom(const DanShangPinShuXing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.DanShangPinShuXing)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
    if (from.has_shangshishijian()) {
      set_has_shangshishijian();
      shangshishijian_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shangshishijian_);
    }
    if (from.has_zhongwenjiancheng()) {
      set_has_zhongwenjiancheng();
      zhongwenjiancheng_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zhongwenjiancheng_);
    }
    if (from.has_yingwenquancheng()) {
      set_has_yingwenquancheng();
      yingwenquancheng_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.yingwenquancheng_);
    }
    if (from.has_xiaoshudianweishu()) {
      set_xiaoshudianweishu(from.xiaoshudianweishu());
    }
    if (from.has_jiaoyishijianleixin()) {
      set_jiaoyishijianleixin(from.jiaoyishijianleixin());
    }
    if (from.has_jiaoyibizhong()) {
      set_has_jiaoyibizhong();
      jiaoyibizhong_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jiaoyibizhong_);
    }
    if (from.has_tuishishijian()) {
      set_has_tuishishijian();
      tuishishijian_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tuishishijian_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_shangshizhuangtai()) {
      set_shangshizhuangtai(from.shangshizhuangtai());
    }
    if (from.has_zhengquanleibie()) {
      set_has_zhengquanleibie();
      zhengquanleibie_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zhengquanleibie_);
    }
    if (from.has_tingpai()) {
      set_tingpai(from.tingpai());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DanShangPinShuXing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.DanShangPinShuXing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DanShangPinShuXing::CopyFrom(const DanShangPinShuXing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.DanShangPinShuXing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DanShangPinShuXing::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DanShangPinShuXing::Swap(DanShangPinShuXing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DanShangPinShuXing::InternalSwap(DanShangPinShuXing* other) {
  obj_.Swap(&other->obj_);
  shangshishijian_.Swap(&other->shangshishijian_);
  zhongwenjiancheng_.Swap(&other->zhongwenjiancheng_);
  yingwenquancheng_.Swap(&other->yingwenquancheng_);
  std::swap(xiaoshudianweishu_, other->xiaoshudianweishu_);
  std::swap(jiaoyishijianleixin_, other->jiaoyishijianleixin_);
  jiaoyibizhong_.Swap(&other->jiaoyibizhong_);
  tuishishijian_.Swap(&other->tuishishijian_);
  std::swap(shangshizhuangtai_, other->shangshizhuangtai_);
  zhengquanleibie_.Swap(&other->zhengquanleibie_);
  std::swap(tingpai_, other->tingpai_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DanShangPinShuXing::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DanShangPinShuXing_descriptor_;
  metadata.reflection = DanShangPinShuXing_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DanShangPinShuXing

// required string obj = 1;
bool DanShangPinShuXing::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DanShangPinShuXing::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void DanShangPinShuXing::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void DanShangPinShuXing::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& DanShangPinShuXing::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.DanShangPinShuXing.obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DanShangPinShuXing::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DanShangPinShuXing.obj)
}
 void DanShangPinShuXing::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DanShangPinShuXing.obj)
}
 void DanShangPinShuXing::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DanShangPinShuXing.obj)
}
 ::std::string* DanShangPinShuXing::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.DanShangPinShuXing.obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DanShangPinShuXing::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.DanShangPinShuXing.obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DanShangPinShuXing::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DanShangPinShuXing.obj)
}

// optional string shangShiShiJian = 2;
bool DanShangPinShuXing::has_shangshishijian() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DanShangPinShuXing::set_has_shangshishijian() {
  _has_bits_[0] |= 0x00000002u;
}
void DanShangPinShuXing::clear_has_shangshishijian() {
  _has_bits_[0] &= ~0x00000002u;
}
void DanShangPinShuXing::clear_shangshishijian() {
  shangshishijian_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_shangshishijian();
}
 const ::std::string& DanShangPinShuXing::shangshishijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.DanShangPinShuXing.shangShiShiJian)
  return shangshishijian_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DanShangPinShuXing::set_shangshishijian(const ::std::string& value) {
  set_has_shangshishijian();
  shangshishijian_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DanShangPinShuXing.shangShiShiJian)
}
 void DanShangPinShuXing::set_shangshishijian(const char* value) {
  set_has_shangshishijian();
  shangshishijian_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DanShangPinShuXing.shangShiShiJian)
}
 void DanShangPinShuXing::set_shangshishijian(const char* value, size_t size) {
  set_has_shangshishijian();
  shangshishijian_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DanShangPinShuXing.shangShiShiJian)
}
 ::std::string* DanShangPinShuXing::mutable_shangshishijian() {
  set_has_shangshishijian();
  // @@protoc_insertion_point(field_mutable:dzhyun.DanShangPinShuXing.shangShiShiJian)
  return shangshishijian_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DanShangPinShuXing::release_shangshishijian() {
  // @@protoc_insertion_point(field_release:dzhyun.DanShangPinShuXing.shangShiShiJian)
  clear_has_shangshishijian();
  return shangshishijian_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DanShangPinShuXing::set_allocated_shangshishijian(::std::string* shangshishijian) {
  if (shangshishijian != NULL) {
    set_has_shangshishijian();
  } else {
    clear_has_shangshishijian();
  }
  shangshishijian_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shangshishijian);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DanShangPinShuXing.shangShiShiJian)
}

// optional string zhongWenJianCheng = 3;
bool DanShangPinShuXing::has_zhongwenjiancheng() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DanShangPinShuXing::set_has_zhongwenjiancheng() {
  _has_bits_[0] |= 0x00000004u;
}
void DanShangPinShuXing::clear_has_zhongwenjiancheng() {
  _has_bits_[0] &= ~0x00000004u;
}
void DanShangPinShuXing::clear_zhongwenjiancheng() {
  zhongwenjiancheng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_zhongwenjiancheng();
}
 const ::std::string& DanShangPinShuXing::zhongwenjiancheng() const {
  // @@protoc_insertion_point(field_get:dzhyun.DanShangPinShuXing.zhongWenJianCheng)
  return zhongwenjiancheng_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DanShangPinShuXing::set_zhongwenjiancheng(const ::std::string& value) {
  set_has_zhongwenjiancheng();
  zhongwenjiancheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DanShangPinShuXing.zhongWenJianCheng)
}
 void DanShangPinShuXing::set_zhongwenjiancheng(const char* value) {
  set_has_zhongwenjiancheng();
  zhongwenjiancheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DanShangPinShuXing.zhongWenJianCheng)
}
 void DanShangPinShuXing::set_zhongwenjiancheng(const char* value, size_t size) {
  set_has_zhongwenjiancheng();
  zhongwenjiancheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DanShangPinShuXing.zhongWenJianCheng)
}
 ::std::string* DanShangPinShuXing::mutable_zhongwenjiancheng() {
  set_has_zhongwenjiancheng();
  // @@protoc_insertion_point(field_mutable:dzhyun.DanShangPinShuXing.zhongWenJianCheng)
  return zhongwenjiancheng_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DanShangPinShuXing::release_zhongwenjiancheng() {
  // @@protoc_insertion_point(field_release:dzhyun.DanShangPinShuXing.zhongWenJianCheng)
  clear_has_zhongwenjiancheng();
  return zhongwenjiancheng_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DanShangPinShuXing::set_allocated_zhongwenjiancheng(::std::string* zhongwenjiancheng) {
  if (zhongwenjiancheng != NULL) {
    set_has_zhongwenjiancheng();
  } else {
    clear_has_zhongwenjiancheng();
  }
  zhongwenjiancheng_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zhongwenjiancheng);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DanShangPinShuXing.zhongWenJianCheng)
}

// optional string yingWenQuanCheng = 4;
bool DanShangPinShuXing::has_yingwenquancheng() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DanShangPinShuXing::set_has_yingwenquancheng() {
  _has_bits_[0] |= 0x00000008u;
}
void DanShangPinShuXing::clear_has_yingwenquancheng() {
  _has_bits_[0] &= ~0x00000008u;
}
void DanShangPinShuXing::clear_yingwenquancheng() {
  yingwenquancheng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_yingwenquancheng();
}
 const ::std::string& DanShangPinShuXing::yingwenquancheng() const {
  // @@protoc_insertion_point(field_get:dzhyun.DanShangPinShuXing.yingWenQuanCheng)
  return yingwenquancheng_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DanShangPinShuXing::set_yingwenquancheng(const ::std::string& value) {
  set_has_yingwenquancheng();
  yingwenquancheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DanShangPinShuXing.yingWenQuanCheng)
}
 void DanShangPinShuXing::set_yingwenquancheng(const char* value) {
  set_has_yingwenquancheng();
  yingwenquancheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DanShangPinShuXing.yingWenQuanCheng)
}
 void DanShangPinShuXing::set_yingwenquancheng(const char* value, size_t size) {
  set_has_yingwenquancheng();
  yingwenquancheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DanShangPinShuXing.yingWenQuanCheng)
}
 ::std::string* DanShangPinShuXing::mutable_yingwenquancheng() {
  set_has_yingwenquancheng();
  // @@protoc_insertion_point(field_mutable:dzhyun.DanShangPinShuXing.yingWenQuanCheng)
  return yingwenquancheng_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DanShangPinShuXing::release_yingwenquancheng() {
  // @@protoc_insertion_point(field_release:dzhyun.DanShangPinShuXing.yingWenQuanCheng)
  clear_has_yingwenquancheng();
  return yingwenquancheng_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DanShangPinShuXing::set_allocated_yingwenquancheng(::std::string* yingwenquancheng) {
  if (yingwenquancheng != NULL) {
    set_has_yingwenquancheng();
  } else {
    clear_has_yingwenquancheng();
  }
  yingwenquancheng_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), yingwenquancheng);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DanShangPinShuXing.yingWenQuanCheng)
}

// optional int32 xiaoShuDianWeiShu = 5;
bool DanShangPinShuXing::has_xiaoshudianweishu() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DanShangPinShuXing::set_has_xiaoshudianweishu() {
  _has_bits_[0] |= 0x00000010u;
}
void DanShangPinShuXing::clear_has_xiaoshudianweishu() {
  _has_bits_[0] &= ~0x00000010u;
}
void DanShangPinShuXing::clear_xiaoshudianweishu() {
  xiaoshudianweishu_ = 0;
  clear_has_xiaoshudianweishu();
}
 ::google::protobuf::int32 DanShangPinShuXing::xiaoshudianweishu() const {
  // @@protoc_insertion_point(field_get:dzhyun.DanShangPinShuXing.xiaoShuDianWeiShu)
  return xiaoshudianweishu_;
}
 void DanShangPinShuXing::set_xiaoshudianweishu(::google::protobuf::int32 value) {
  set_has_xiaoshudianweishu();
  xiaoshudianweishu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DanShangPinShuXing.xiaoShuDianWeiShu)
}

// optional int32 jiaoYiShiJianLeiXin = 6;
bool DanShangPinShuXing::has_jiaoyishijianleixin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DanShangPinShuXing::set_has_jiaoyishijianleixin() {
  _has_bits_[0] |= 0x00000020u;
}
void DanShangPinShuXing::clear_has_jiaoyishijianleixin() {
  _has_bits_[0] &= ~0x00000020u;
}
void DanShangPinShuXing::clear_jiaoyishijianleixin() {
  jiaoyishijianleixin_ = 0;
  clear_has_jiaoyishijianleixin();
}
 ::google::protobuf::int32 DanShangPinShuXing::jiaoyishijianleixin() const {
  // @@protoc_insertion_point(field_get:dzhyun.DanShangPinShuXing.jiaoYiShiJianLeiXin)
  return jiaoyishijianleixin_;
}
 void DanShangPinShuXing::set_jiaoyishijianleixin(::google::protobuf::int32 value) {
  set_has_jiaoyishijianleixin();
  jiaoyishijianleixin_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DanShangPinShuXing.jiaoYiShiJianLeiXin)
}

// optional string jiaoYiBiZhong = 7;
bool DanShangPinShuXing::has_jiaoyibizhong() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void DanShangPinShuXing::set_has_jiaoyibizhong() {
  _has_bits_[0] |= 0x00000040u;
}
void DanShangPinShuXing::clear_has_jiaoyibizhong() {
  _has_bits_[0] &= ~0x00000040u;
}
void DanShangPinShuXing::clear_jiaoyibizhong() {
  jiaoyibizhong_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_jiaoyibizhong();
}
 const ::std::string& DanShangPinShuXing::jiaoyibizhong() const {
  // @@protoc_insertion_point(field_get:dzhyun.DanShangPinShuXing.jiaoYiBiZhong)
  return jiaoyibizhong_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DanShangPinShuXing::set_jiaoyibizhong(const ::std::string& value) {
  set_has_jiaoyibizhong();
  jiaoyibizhong_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DanShangPinShuXing.jiaoYiBiZhong)
}
 void DanShangPinShuXing::set_jiaoyibizhong(const char* value) {
  set_has_jiaoyibizhong();
  jiaoyibizhong_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DanShangPinShuXing.jiaoYiBiZhong)
}
 void DanShangPinShuXing::set_jiaoyibizhong(const char* value, size_t size) {
  set_has_jiaoyibizhong();
  jiaoyibizhong_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DanShangPinShuXing.jiaoYiBiZhong)
}
 ::std::string* DanShangPinShuXing::mutable_jiaoyibizhong() {
  set_has_jiaoyibizhong();
  // @@protoc_insertion_point(field_mutable:dzhyun.DanShangPinShuXing.jiaoYiBiZhong)
  return jiaoyibizhong_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DanShangPinShuXing::release_jiaoyibizhong() {
  // @@protoc_insertion_point(field_release:dzhyun.DanShangPinShuXing.jiaoYiBiZhong)
  clear_has_jiaoyibizhong();
  return jiaoyibizhong_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DanShangPinShuXing::set_allocated_jiaoyibizhong(::std::string* jiaoyibizhong) {
  if (jiaoyibizhong != NULL) {
    set_has_jiaoyibizhong();
  } else {
    clear_has_jiaoyibizhong();
  }
  jiaoyibizhong_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jiaoyibizhong);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DanShangPinShuXing.jiaoYiBiZhong)
}

// optional string tuiShiShiJian = 8;
bool DanShangPinShuXing::has_tuishishijian() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void DanShangPinShuXing::set_has_tuishishijian() {
  _has_bits_[0] |= 0x00000080u;
}
void DanShangPinShuXing::clear_has_tuishishijian() {
  _has_bits_[0] &= ~0x00000080u;
}
void DanShangPinShuXing::clear_tuishishijian() {
  tuishishijian_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tuishishijian();
}
 const ::std::string& DanShangPinShuXing::tuishishijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.DanShangPinShuXing.tuiShiShiJian)
  return tuishishijian_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DanShangPinShuXing::set_tuishishijian(const ::std::string& value) {
  set_has_tuishishijian();
  tuishishijian_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DanShangPinShuXing.tuiShiShiJian)
}
 void DanShangPinShuXing::set_tuishishijian(const char* value) {
  set_has_tuishishijian();
  tuishishijian_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DanShangPinShuXing.tuiShiShiJian)
}
 void DanShangPinShuXing::set_tuishishijian(const char* value, size_t size) {
  set_has_tuishishijian();
  tuishishijian_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DanShangPinShuXing.tuiShiShiJian)
}
 ::std::string* DanShangPinShuXing::mutable_tuishishijian() {
  set_has_tuishishijian();
  // @@protoc_insertion_point(field_mutable:dzhyun.DanShangPinShuXing.tuiShiShiJian)
  return tuishishijian_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DanShangPinShuXing::release_tuishishijian() {
  // @@protoc_insertion_point(field_release:dzhyun.DanShangPinShuXing.tuiShiShiJian)
  clear_has_tuishishijian();
  return tuishishijian_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DanShangPinShuXing::set_allocated_tuishishijian(::std::string* tuishishijian) {
  if (tuishishijian != NULL) {
    set_has_tuishishijian();
  } else {
    clear_has_tuishishijian();
  }
  tuishishijian_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tuishishijian);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DanShangPinShuXing.tuiShiShiJian)
}

// optional int32 shangShiZhuangTai = 9;
bool DanShangPinShuXing::has_shangshizhuangtai() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void DanShangPinShuXing::set_has_shangshizhuangtai() {
  _has_bits_[0] |= 0x00000100u;
}
void DanShangPinShuXing::clear_has_shangshizhuangtai() {
  _has_bits_[0] &= ~0x00000100u;
}
void DanShangPinShuXing::clear_shangshizhuangtai() {
  shangshizhuangtai_ = 0;
  clear_has_shangshizhuangtai();
}
 ::google::protobuf::int32 DanShangPinShuXing::shangshizhuangtai() const {
  // @@protoc_insertion_point(field_get:dzhyun.DanShangPinShuXing.shangShiZhuangTai)
  return shangshizhuangtai_;
}
 void DanShangPinShuXing::set_shangshizhuangtai(::google::protobuf::int32 value) {
  set_has_shangshizhuangtai();
  shangshizhuangtai_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DanShangPinShuXing.shangShiZhuangTai)
}

// optional string zhengQuanLeiBie = 10;
bool DanShangPinShuXing::has_zhengquanleibie() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void DanShangPinShuXing::set_has_zhengquanleibie() {
  _has_bits_[0] |= 0x00000200u;
}
void DanShangPinShuXing::clear_has_zhengquanleibie() {
  _has_bits_[0] &= ~0x00000200u;
}
void DanShangPinShuXing::clear_zhengquanleibie() {
  zhengquanleibie_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_zhengquanleibie();
}
 const ::std::string& DanShangPinShuXing::zhengquanleibie() const {
  // @@protoc_insertion_point(field_get:dzhyun.DanShangPinShuXing.zhengQuanLeiBie)
  return zhengquanleibie_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DanShangPinShuXing::set_zhengquanleibie(const ::std::string& value) {
  set_has_zhengquanleibie();
  zhengquanleibie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DanShangPinShuXing.zhengQuanLeiBie)
}
 void DanShangPinShuXing::set_zhengquanleibie(const char* value) {
  set_has_zhengquanleibie();
  zhengquanleibie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DanShangPinShuXing.zhengQuanLeiBie)
}
 void DanShangPinShuXing::set_zhengquanleibie(const char* value, size_t size) {
  set_has_zhengquanleibie();
  zhengquanleibie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DanShangPinShuXing.zhengQuanLeiBie)
}
 ::std::string* DanShangPinShuXing::mutable_zhengquanleibie() {
  set_has_zhengquanleibie();
  // @@protoc_insertion_point(field_mutable:dzhyun.DanShangPinShuXing.zhengQuanLeiBie)
  return zhengquanleibie_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DanShangPinShuXing::release_zhengquanleibie() {
  // @@protoc_insertion_point(field_release:dzhyun.DanShangPinShuXing.zhengQuanLeiBie)
  clear_has_zhengquanleibie();
  return zhengquanleibie_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DanShangPinShuXing::set_allocated_zhengquanleibie(::std::string* zhengquanleibie) {
  if (zhengquanleibie != NULL) {
    set_has_zhengquanleibie();
  } else {
    clear_has_zhengquanleibie();
  }
  zhengquanleibie_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zhengquanleibie);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DanShangPinShuXing.zhengQuanLeiBie)
}

// optional int32 tingPai = 11;
bool DanShangPinShuXing::has_tingpai() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void DanShangPinShuXing::set_has_tingpai() {
  _has_bits_[0] |= 0x00000400u;
}
void DanShangPinShuXing::clear_has_tingpai() {
  _has_bits_[0] &= ~0x00000400u;
}
void DanShangPinShuXing::clear_tingpai() {
  tingpai_ = 0;
  clear_has_tingpai();
}
 ::google::protobuf::int32 DanShangPinShuXing::tingpai() const {
  // @@protoc_insertion_point(field_get:dzhyun.DanShangPinShuXing.tingPai)
  return tingpai_;
}
 void DanShangPinShuXing::set_tingpai(::google::protobuf::int32 value) {
  set_has_tingpai();
  tingpai_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DanShangPinShuXing.tingPai)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarketTradeDate::kMarketFieldNumber;
const int MarketTradeDate::kTradeDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarketTradeDate::MarketTradeDate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.MarketTradeDate)
}

void MarketTradeDate::InitAsDefaultInstance() {
}

MarketTradeDate::MarketTradeDate(const MarketTradeDate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.MarketTradeDate)
}

void MarketTradeDate::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  market_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MarketTradeDate::~MarketTradeDate() {
  // @@protoc_insertion_point(destructor:dzhyun.MarketTradeDate)
  SharedDtor();
}

void MarketTradeDate::SharedDtor() {
  market_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MarketTradeDate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarketTradeDate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MarketTradeDate_descriptor_;
}

const MarketTradeDate& MarketTradeDate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CldDanShangPinShuXing_2eproto();
  return *default_instance_;
}

MarketTradeDate* MarketTradeDate::default_instance_ = NULL;

MarketTradeDate* MarketTradeDate::New(::google::protobuf::Arena* arena) const {
  MarketTradeDate* n = new MarketTradeDate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarketTradeDate::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.MarketTradeDate)
  if (has_market()) {
    market_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  tradedate_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MarketTradeDate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.MarketTradeDate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Market = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_market()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->market().data(), this->market().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.MarketTradeDate.Market");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_TradeDate;
        break;
      }

      // repeated string TradeDate = 2;
      case 2: {
        if (tag == 18) {
         parse_TradeDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tradedate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tradedate(this->tradedate_size() - 1).data(),
            this->tradedate(this->tradedate_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.MarketTradeDate.TradeDate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_TradeDate;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.MarketTradeDate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.MarketTradeDate)
  return false;
#undef DO_
}

void MarketTradeDate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.MarketTradeDate)
  // required string Market = 1;
  if (has_market()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->market().data(), this->market().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.MarketTradeDate.Market");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->market(), output);
  }

  // repeated string TradeDate = 2;
  for (int i = 0; i < this->tradedate_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tradedate(i).data(), this->tradedate(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.MarketTradeDate.TradeDate");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->tradedate(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.MarketTradeDate)
}

::google::protobuf::uint8* MarketTradeDate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.MarketTradeDate)
  // required string Market = 1;
  if (has_market()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->market().data(), this->market().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.MarketTradeDate.Market");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->market(), target);
  }

  // repeated string TradeDate = 2;
  for (int i = 0; i < this->tradedate_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tradedate(i).data(), this->tradedate(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.MarketTradeDate.TradeDate");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->tradedate(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.MarketTradeDate)
  return target;
}

int MarketTradeDate::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.MarketTradeDate)
  int total_size = 0;

  // required string Market = 1;
  if (has_market()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->market());
  }
  // repeated string TradeDate = 2;
  total_size += 1 * this->tradedate_size();
  for (int i = 0; i < this->tradedate_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tradedate(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarketTradeDate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.MarketTradeDate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MarketTradeDate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MarketTradeDate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.MarketTradeDate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.MarketTradeDate)
    MergeFrom(*source);
  }
}

void MarketTradeDate::MergeFrom(const MarketTradeDate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.MarketTradeDate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  tradedate_.MergeFrom(from.tradedate_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_market()) {
      set_has_market();
      market_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MarketTradeDate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.MarketTradeDate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarketTradeDate::CopyFrom(const MarketTradeDate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.MarketTradeDate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarketTradeDate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MarketTradeDate::Swap(MarketTradeDate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarketTradeDate::InternalSwap(MarketTradeDate* other) {
  market_.Swap(&other->market_);
  tradedate_.UnsafeArenaSwap(&other->tradedate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarketTradeDate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MarketTradeDate_descriptor_;
  metadata.reflection = MarketTradeDate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MarketTradeDate

// required string Market = 1;
bool MarketTradeDate::has_market() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MarketTradeDate::set_has_market() {
  _has_bits_[0] |= 0x00000001u;
}
void MarketTradeDate::clear_has_market() {
  _has_bits_[0] &= ~0x00000001u;
}
void MarketTradeDate::clear_market() {
  market_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_market();
}
 const ::std::string& MarketTradeDate::market() const {
  // @@protoc_insertion_point(field_get:dzhyun.MarketTradeDate.Market)
  return market_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MarketTradeDate::set_market(const ::std::string& value) {
  set_has_market();
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.MarketTradeDate.Market)
}
 void MarketTradeDate::set_market(const char* value) {
  set_has_market();
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.MarketTradeDate.Market)
}
 void MarketTradeDate::set_market(const char* value, size_t size) {
  set_has_market();
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.MarketTradeDate.Market)
}
 ::std::string* MarketTradeDate::mutable_market() {
  set_has_market();
  // @@protoc_insertion_point(field_mutable:dzhyun.MarketTradeDate.Market)
  return market_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MarketTradeDate::release_market() {
  // @@protoc_insertion_point(field_release:dzhyun.MarketTradeDate.Market)
  clear_has_market();
  return market_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MarketTradeDate::set_allocated_market(::std::string* market) {
  if (market != NULL) {
    set_has_market();
  } else {
    clear_has_market();
  }
  market_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), market);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.MarketTradeDate.Market)
}

// repeated string TradeDate = 2;
int MarketTradeDate::tradedate_size() const {
  return tradedate_.size();
}
void MarketTradeDate::clear_tradedate() {
  tradedate_.Clear();
}
 const ::std::string& MarketTradeDate::tradedate(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.MarketTradeDate.TradeDate)
  return tradedate_.Get(index);
}
 ::std::string* MarketTradeDate::mutable_tradedate(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.MarketTradeDate.TradeDate)
  return tradedate_.Mutable(index);
}
 void MarketTradeDate::set_tradedate(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dzhyun.MarketTradeDate.TradeDate)
  tradedate_.Mutable(index)->assign(value);
}
 void MarketTradeDate::set_tradedate(int index, const char* value) {
  tradedate_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dzhyun.MarketTradeDate.TradeDate)
}
 void MarketTradeDate::set_tradedate(int index, const char* value, size_t size) {
  tradedate_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dzhyun.MarketTradeDate.TradeDate)
}
 ::std::string* MarketTradeDate::add_tradedate() {
  // @@protoc_insertion_point(field_add_mutable:dzhyun.MarketTradeDate.TradeDate)
  return tradedate_.Add();
}
 void MarketTradeDate::add_tradedate(const ::std::string& value) {
  tradedate_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dzhyun.MarketTradeDate.TradeDate)
}
 void MarketTradeDate::add_tradedate(const char* value) {
  tradedate_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dzhyun.MarketTradeDate.TradeDate)
}
 void MarketTradeDate::add_tradedate(const char* value, size_t size) {
  tradedate_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dzhyun.MarketTradeDate.TradeDate)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
MarketTradeDate::tradedate() const {
  // @@protoc_insertion_point(field_list:dzhyun.MarketTradeDate.TradeDate)
  return tradedate_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
MarketTradeDate::mutable_tradedate() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.MarketTradeDate.TradeDate)
  return &tradedate_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FutureInfo::kObjFieldNumber;
const int FutureInfo::kNameFieldNumber;
const int FutureInfo::kBeginDateFieldNumber;
const int FutureInfo::kEndDateFieldNumber;
const int FutureInfo::kDeliveryDayFieldNumber;
const int FutureInfo::kTradeUnitFieldNumber;
const int FutureInfo::kMarginRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FutureInfo::FutureInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.FutureInfo)
}

void FutureInfo::InitAsDefaultInstance() {
}

FutureInfo::FutureInfo(const FutureInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.FutureInfo)
}

void FutureInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  begindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliveryday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradeunit_ = 0;
  marginrate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FutureInfo::~FutureInfo() {
  // @@protoc_insertion_point(destructor:dzhyun.FutureInfo)
  SharedDtor();
}

void FutureInfo::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  begindate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enddate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliveryday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FutureInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FutureInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FutureInfo_descriptor_;
}

const FutureInfo& FutureInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CldDanShangPinShuXing_2eproto();
  return *default_instance_;
}

FutureInfo* FutureInfo::default_instance_ = NULL;

FutureInfo* FutureInfo::New(::google::protobuf::Arena* arena) const {
  FutureInfo* n = new FutureInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FutureInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.FutureInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FutureInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FutureInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(tradeunit_, marginrate_);
    if (has_obj()) {
      obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_begindate()) {
      begindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_enddate()) {
      enddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_deliveryday()) {
      deliveryday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FutureInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.FutureInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.FutureInfo.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.FutureInfo.Name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_BeginDate;
        break;
      }

      // optional string BeginDate = 3;
      case 3: {
        if (tag == 26) {
         parse_BeginDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_begindate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->begindate().data(), this->begindate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.FutureInfo.BeginDate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_EndDate;
        break;
      }

      // optional string EndDate = 4;
      case 4: {
        if (tag == 34) {
         parse_EndDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enddate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->enddate().data(), this->enddate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.FutureInfo.EndDate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_DeliveryDay;
        break;
      }

      // optional string DeliveryDay = 5;
      case 5: {
        if (tag == 42) {
         parse_DeliveryDay:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deliveryday()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->deliveryday().data(), this->deliveryday().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.FutureInfo.DeliveryDay");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_TradeUnit;
        break;
      }

      // optional double TradeUnit = 6;
      case 6: {
        if (tag == 49) {
         parse_TradeUnit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tradeunit_)));
          set_has_tradeunit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_MarginRate;
        break;
      }

      // optional double MarginRate = 7;
      case 7: {
        if (tag == 57) {
         parse_MarginRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &marginrate_)));
          set_has_marginrate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.FutureInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.FutureInfo)
  return false;
#undef DO_
}

void FutureInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.FutureInfo)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.FutureInfo.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // optional string Name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.FutureInfo.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string BeginDate = 3;
  if (has_begindate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->begindate().data(), this->begindate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.FutureInfo.BeginDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->begindate(), output);
  }

  // optional string EndDate = 4;
  if (has_enddate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->enddate().data(), this->enddate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.FutureInfo.EndDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->enddate(), output);
  }

  // optional string DeliveryDay = 5;
  if (has_deliveryday()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deliveryday().data(), this->deliveryday().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.FutureInfo.DeliveryDay");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->deliveryday(), output);
  }

  // optional double TradeUnit = 6;
  if (has_tradeunit()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->tradeunit(), output);
  }

  // optional double MarginRate = 7;
  if (has_marginrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->marginrate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.FutureInfo)
}

::google::protobuf::uint8* FutureInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.FutureInfo)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.FutureInfo.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // optional string Name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.FutureInfo.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string BeginDate = 3;
  if (has_begindate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->begindate().data(), this->begindate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.FutureInfo.BeginDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->begindate(), target);
  }

  // optional string EndDate = 4;
  if (has_enddate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->enddate().data(), this->enddate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.FutureInfo.EndDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->enddate(), target);
  }

  // optional string DeliveryDay = 5;
  if (has_deliveryday()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deliveryday().data(), this->deliveryday().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.FutureInfo.DeliveryDay");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->deliveryday(), target);
  }

  // optional double TradeUnit = 6;
  if (has_tradeunit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->tradeunit(), target);
  }

  // optional double MarginRate = 7;
  if (has_marginrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->marginrate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.FutureInfo)
  return target;
}

int FutureInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.FutureInfo)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  if (_has_bits_[1 / 32] & 126u) {
    // optional string Name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string BeginDate = 3;
    if (has_begindate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->begindate());
    }

    // optional string EndDate = 4;
    if (has_enddate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->enddate());
    }

    // optional string DeliveryDay = 5;
    if (has_deliveryday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->deliveryday());
    }

    // optional double TradeUnit = 6;
    if (has_tradeunit()) {
      total_size += 1 + 8;
    }

    // optional double MarginRate = 7;
    if (has_marginrate()) {
      total_size += 1 + 8;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FutureInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.FutureInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FutureInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FutureInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.FutureInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.FutureInfo)
    MergeFrom(*source);
  }
}

void FutureInfo::MergeFrom(const FutureInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.FutureInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_begindate()) {
      set_has_begindate();
      begindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.begindate_);
    }
    if (from.has_enddate()) {
      set_has_enddate();
      enddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.enddate_);
    }
    if (from.has_deliveryday()) {
      set_has_deliveryday();
      deliveryday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deliveryday_);
    }
    if (from.has_tradeunit()) {
      set_tradeunit(from.tradeunit());
    }
    if (from.has_marginrate()) {
      set_marginrate(from.marginrate());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void FutureInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.FutureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FutureInfo::CopyFrom(const FutureInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.FutureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FutureInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FutureInfo::Swap(FutureInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FutureInfo::InternalSwap(FutureInfo* other) {
  obj_.Swap(&other->obj_);
  name_.Swap(&other->name_);
  begindate_.Swap(&other->begindate_);
  enddate_.Swap(&other->enddate_);
  deliveryday_.Swap(&other->deliveryday_);
  std::swap(tradeunit_, other->tradeunit_);
  std::swap(marginrate_, other->marginrate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FutureInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FutureInfo_descriptor_;
  metadata.reflection = FutureInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FutureInfo

// required string Obj = 1;
bool FutureInfo::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FutureInfo::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void FutureInfo::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void FutureInfo::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& FutureInfo::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.FutureInfo.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FutureInfo::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.FutureInfo.Obj)
}
 void FutureInfo::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.FutureInfo.Obj)
}
 void FutureInfo::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.FutureInfo.Obj)
}
 ::std::string* FutureInfo::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.FutureInfo.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FutureInfo::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.FutureInfo.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FutureInfo::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.FutureInfo.Obj)
}

// optional string Name = 2;
bool FutureInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FutureInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void FutureInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void FutureInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& FutureInfo::name() const {
  // @@protoc_insertion_point(field_get:dzhyun.FutureInfo.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FutureInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.FutureInfo.Name)
}
 void FutureInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.FutureInfo.Name)
}
 void FutureInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.FutureInfo.Name)
}
 ::std::string* FutureInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:dzhyun.FutureInfo.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FutureInfo::release_name() {
  // @@protoc_insertion_point(field_release:dzhyun.FutureInfo.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FutureInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.FutureInfo.Name)
}

// optional string BeginDate = 3;
bool FutureInfo::has_begindate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FutureInfo::set_has_begindate() {
  _has_bits_[0] |= 0x00000004u;
}
void FutureInfo::clear_has_begindate() {
  _has_bits_[0] &= ~0x00000004u;
}
void FutureInfo::clear_begindate() {
  begindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_begindate();
}
 const ::std::string& FutureInfo::begindate() const {
  // @@protoc_insertion_point(field_get:dzhyun.FutureInfo.BeginDate)
  return begindate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FutureInfo::set_begindate(const ::std::string& value) {
  set_has_begindate();
  begindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.FutureInfo.BeginDate)
}
 void FutureInfo::set_begindate(const char* value) {
  set_has_begindate();
  begindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.FutureInfo.BeginDate)
}
 void FutureInfo::set_begindate(const char* value, size_t size) {
  set_has_begindate();
  begindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.FutureInfo.BeginDate)
}
 ::std::string* FutureInfo::mutable_begindate() {
  set_has_begindate();
  // @@protoc_insertion_point(field_mutable:dzhyun.FutureInfo.BeginDate)
  return begindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FutureInfo::release_begindate() {
  // @@protoc_insertion_point(field_release:dzhyun.FutureInfo.BeginDate)
  clear_has_begindate();
  return begindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FutureInfo::set_allocated_begindate(::std::string* begindate) {
  if (begindate != NULL) {
    set_has_begindate();
  } else {
    clear_has_begindate();
  }
  begindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), begindate);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.FutureInfo.BeginDate)
}

// optional string EndDate = 4;
bool FutureInfo::has_enddate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FutureInfo::set_has_enddate() {
  _has_bits_[0] |= 0x00000008u;
}
void FutureInfo::clear_has_enddate() {
  _has_bits_[0] &= ~0x00000008u;
}
void FutureInfo::clear_enddate() {
  enddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_enddate();
}
 const ::std::string& FutureInfo::enddate() const {
  // @@protoc_insertion_point(field_get:dzhyun.FutureInfo.EndDate)
  return enddate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FutureInfo::set_enddate(const ::std::string& value) {
  set_has_enddate();
  enddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.FutureInfo.EndDate)
}
 void FutureInfo::set_enddate(const char* value) {
  set_has_enddate();
  enddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.FutureInfo.EndDate)
}
 void FutureInfo::set_enddate(const char* value, size_t size) {
  set_has_enddate();
  enddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.FutureInfo.EndDate)
}
 ::std::string* FutureInfo::mutable_enddate() {
  set_has_enddate();
  // @@protoc_insertion_point(field_mutable:dzhyun.FutureInfo.EndDate)
  return enddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FutureInfo::release_enddate() {
  // @@protoc_insertion_point(field_release:dzhyun.FutureInfo.EndDate)
  clear_has_enddate();
  return enddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FutureInfo::set_allocated_enddate(::std::string* enddate) {
  if (enddate != NULL) {
    set_has_enddate();
  } else {
    clear_has_enddate();
  }
  enddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), enddate);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.FutureInfo.EndDate)
}

// optional string DeliveryDay = 5;
bool FutureInfo::has_deliveryday() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void FutureInfo::set_has_deliveryday() {
  _has_bits_[0] |= 0x00000010u;
}
void FutureInfo::clear_has_deliveryday() {
  _has_bits_[0] &= ~0x00000010u;
}
void FutureInfo::clear_deliveryday() {
  deliveryday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deliveryday();
}
 const ::std::string& FutureInfo::deliveryday() const {
  // @@protoc_insertion_point(field_get:dzhyun.FutureInfo.DeliveryDay)
  return deliveryday_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FutureInfo::set_deliveryday(const ::std::string& value) {
  set_has_deliveryday();
  deliveryday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.FutureInfo.DeliveryDay)
}
 void FutureInfo::set_deliveryday(const char* value) {
  set_has_deliveryday();
  deliveryday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.FutureInfo.DeliveryDay)
}
 void FutureInfo::set_deliveryday(const char* value, size_t size) {
  set_has_deliveryday();
  deliveryday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.FutureInfo.DeliveryDay)
}
 ::std::string* FutureInfo::mutable_deliveryday() {
  set_has_deliveryday();
  // @@protoc_insertion_point(field_mutable:dzhyun.FutureInfo.DeliveryDay)
  return deliveryday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FutureInfo::release_deliveryday() {
  // @@protoc_insertion_point(field_release:dzhyun.FutureInfo.DeliveryDay)
  clear_has_deliveryday();
  return deliveryday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FutureInfo::set_allocated_deliveryday(::std::string* deliveryday) {
  if (deliveryday != NULL) {
    set_has_deliveryday();
  } else {
    clear_has_deliveryday();
  }
  deliveryday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deliveryday);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.FutureInfo.DeliveryDay)
}

// optional double TradeUnit = 6;
bool FutureInfo::has_tradeunit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void FutureInfo::set_has_tradeunit() {
  _has_bits_[0] |= 0x00000020u;
}
void FutureInfo::clear_has_tradeunit() {
  _has_bits_[0] &= ~0x00000020u;
}
void FutureInfo::clear_tradeunit() {
  tradeunit_ = 0;
  clear_has_tradeunit();
}
 double FutureInfo::tradeunit() const {
  // @@protoc_insertion_point(field_get:dzhyun.FutureInfo.TradeUnit)
  return tradeunit_;
}
 void FutureInfo::set_tradeunit(double value) {
  set_has_tradeunit();
  tradeunit_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.FutureInfo.TradeUnit)
}

// optional double MarginRate = 7;
bool FutureInfo::has_marginrate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void FutureInfo::set_has_marginrate() {
  _has_bits_[0] |= 0x00000040u;
}
void FutureInfo::clear_has_marginrate() {
  _has_bits_[0] &= ~0x00000040u;
}
void FutureInfo::clear_marginrate() {
  marginrate_ = 0;
  clear_has_marginrate();
}
 double FutureInfo::marginrate() const {
  // @@protoc_insertion_point(field_get:dzhyun.FutureInfo.MarginRate)
  return marginrate_;
}
 void FutureInfo::set_marginrate(double value) {
  set_has_marginrate();
  marginrate_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.FutureInfo.MarginRate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewStockInfo::kStockCodeFieldNumber;
const int NewStockInfo::kStockNameFieldNumber;
const int NewStockInfo::kStockSummaryFieldNumber;
const int NewStockInfo::kBuyCodeFieldNumber;
const int NewStockInfo::kIssueTotalFieldNumber;
const int NewStockInfo::kOnlineTotalFieldNumber;
const int NewStockInfo::kBuyLimitFieldNumber;
const int NewStockInfo::kIssuePriceFieldNumber;
const int NewStockInfo::kFirstCloseFieldNumber;
const int NewStockInfo::kBuyDateFieldNumber;
const int NewStockInfo::kPubDateFieldNumber;
const int NewStockInfo::kPayDateFieldNumber;
const int NewStockInfo::kTradeDateFieldNumber;
const int NewStockInfo::kIssuePEFieldNumber;
const int NewStockInfo::kIndustryPEFieldNumber;
const int NewStockInfo::kSuccessRateFieldNumber;
const int NewStockInfo::kOfferTotalFieldNumber;
const int NewStockInfo::kOfferTimesFieldNumber;
const int NewStockInfo::kSeriesNumFieldNumber;
const int NewStockInfo::kIncreaseTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewStockInfo::NewStockInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.NewStockInfo)
}

void NewStockInfo::InitAsDefaultInstance() {
}

NewStockInfo::NewStockInfo(const NewStockInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.NewStockInfo)
}

void NewStockInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  stockcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stockname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stocksummary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issuetotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  onlinetotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buylimit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issueprice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firstclose_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buydate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paydate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issuepe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  industrype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  successrate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offertotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offertimes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seriesnum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  increasetotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewStockInfo::~NewStockInfo() {
  // @@protoc_insertion_point(destructor:dzhyun.NewStockInfo)
  SharedDtor();
}

void NewStockInfo::SharedDtor() {
  stockcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stockname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stocksummary_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buycode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issuetotal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  onlinetotal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buylimit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issueprice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firstclose_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buydate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paydate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issuepe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  industrype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  successrate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offertotal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offertimes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seriesnum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  increasetotal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NewStockInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewStockInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewStockInfo_descriptor_;
}

const NewStockInfo& NewStockInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CldDanShangPinShuXing_2eproto();
  return *default_instance_;
}

NewStockInfo* NewStockInfo::default_instance_ = NULL;

NewStockInfo* NewStockInfo::New(::google::protobuf::Arena* arena) const {
  NewStockInfo* n = new NewStockInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewStockInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.NewStockInfo)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_stockcode()) {
      stockcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_stockname()) {
      stockname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_stocksummary()) {
      stocksummary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_buycode()) {
      buycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_issuetotal()) {
      issuetotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_onlinetotal()) {
      onlinetotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_buylimit()) {
      buylimit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_issueprice()) {
      issueprice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_firstclose()) {
      firstclose_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_buydate()) {
      buydate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_pubdate()) {
      pubdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_paydate()) {
      paydate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_tradedate()) {
      tradedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_issuepe()) {
      issuepe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_industrype()) {
      industrype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_successrate()) {
      successrate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[16 / 32] & 983040u) {
    if (has_offertotal()) {
      offertotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_offertimes()) {
      offertimes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_seriesnum()) {
      seriesnum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_increasetotal()) {
      increasetotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NewStockInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.NewStockInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string StockCode = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stockcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stockcode().data(), this->stockcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.StockCode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_StockName;
        break;
      }

      // optional string StockName = 2;
      case 2: {
        if (tag == 18) {
         parse_StockName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stockname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stockname().data(), this->stockname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.StockName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_StockSummary;
        break;
      }

      // optional string StockSummary = 3;
      case 3: {
        if (tag == 26) {
         parse_StockSummary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stocksummary()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stocksummary().data(), this->stocksummary().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.StockSummary");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_BuyCode;
        break;
      }

      // optional string BuyCode = 4;
      case 4: {
        if (tag == 34) {
         parse_BuyCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buycode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->buycode().data(), this->buycode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.BuyCode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_IssueTotal;
        break;
      }

      // optional string IssueTotal = 5;
      case 5: {
        if (tag == 42) {
         parse_IssueTotal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuetotal()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->issuetotal().data(), this->issuetotal().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.IssueTotal");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_OnlineTotal;
        break;
      }

      // optional string OnlineTotal = 6;
      case 6: {
        if (tag == 50) {
         parse_OnlineTotal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_onlinetotal()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->onlinetotal().data(), this->onlinetotal().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.OnlineTotal");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_BuyLimit;
        break;
      }

      // optional string BuyLimit = 7;
      case 7: {
        if (tag == 58) {
         parse_BuyLimit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buylimit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->buylimit().data(), this->buylimit().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.BuyLimit");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_IssuePrice;
        break;
      }

      // optional string IssuePrice = 8;
      case 8: {
        if (tag == 66) {
         parse_IssuePrice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issueprice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->issueprice().data(), this->issueprice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.IssuePrice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_FirstClose;
        break;
      }

      // optional string FirstClose = 9;
      case 9: {
        if (tag == 74) {
         parse_FirstClose:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firstclose()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->firstclose().data(), this->firstclose().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.FirstClose");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_BuyDate;
        break;
      }

      // optional string BuyDate = 10;
      case 10: {
        if (tag == 82) {
         parse_BuyDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buydate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->buydate().data(), this->buydate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.BuyDate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_PubDate;
        break;
      }

      // optional string PubDate = 11;
      case 11: {
        if (tag == 90) {
         parse_PubDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pubdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pubdate().data(), this->pubdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.PubDate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_PayDate;
        break;
      }

      // optional string PayDate = 12;
      case 12: {
        if (tag == 98) {
         parse_PayDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_paydate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->paydate().data(), this->paydate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.PayDate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_TradeDate;
        break;
      }

      // optional string TradeDate = 13;
      case 13: {
        if (tag == 106) {
         parse_TradeDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradedate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tradedate().data(), this->tradedate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.TradeDate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_IssuePE;
        break;
      }

      // optional string IssuePE = 14;
      case 14: {
        if (tag == 114) {
         parse_IssuePE:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuepe()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->issuepe().data(), this->issuepe().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.IssuePE");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_IndustryPE;
        break;
      }

      // optional string IndustryPE = 15;
      case 15: {
        if (tag == 122) {
         parse_IndustryPE:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_industrype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->industrype().data(), this->industrype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.IndustryPE");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_SuccessRate;
        break;
      }

      // optional string SuccessRate = 16;
      case 16: {
        if (tag == 130) {
         parse_SuccessRate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_successrate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->successrate().data(), this->successrate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.SuccessRate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_OfferTotal;
        break;
      }

      // optional string OfferTotal = 17;
      case 17: {
        if (tag == 138) {
         parse_OfferTotal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_offertotal()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->offertotal().data(), this->offertotal().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.OfferTotal");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_OfferTimes;
        break;
      }

      // optional string OfferTimes = 18;
      case 18: {
        if (tag == 146) {
         parse_OfferTimes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_offertimes()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->offertimes().data(), this->offertimes().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.OfferTimes");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_SeriesNum;
        break;
      }

      // optional string SeriesNum = 19;
      case 19: {
        if (tag == 154) {
         parse_SeriesNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_seriesnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->seriesnum().data(), this->seriesnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.SeriesNum");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_IncreaseTotal;
        break;
      }

      // optional string IncreaseTotal = 20;
      case 20: {
        if (tag == 162) {
         parse_IncreaseTotal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_increasetotal()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->increasetotal().data(), this->increasetotal().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewStockInfo.IncreaseTotal");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.NewStockInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.NewStockInfo)
  return false;
#undef DO_
}

void NewStockInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.NewStockInfo)
  // required string StockCode = 1;
  if (has_stockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stockcode().data(), this->stockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.StockCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stockcode(), output);
  }

  // optional string StockName = 2;
  if (has_stockname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stockname().data(), this->stockname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.StockName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stockname(), output);
  }

  // optional string StockSummary = 3;
  if (has_stocksummary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stocksummary().data(), this->stocksummary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.StockSummary");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stocksummary(), output);
  }

  // optional string BuyCode = 4;
  if (has_buycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->buycode().data(), this->buycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.BuyCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->buycode(), output);
  }

  // optional string IssueTotal = 5;
  if (has_issuetotal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->issuetotal().data(), this->issuetotal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.IssueTotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->issuetotal(), output);
  }

  // optional string OnlineTotal = 6;
  if (has_onlinetotal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->onlinetotal().data(), this->onlinetotal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.OnlineTotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->onlinetotal(), output);
  }

  // optional string BuyLimit = 7;
  if (has_buylimit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->buylimit().data(), this->buylimit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.BuyLimit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->buylimit(), output);
  }

  // optional string IssuePrice = 8;
  if (has_issueprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->issueprice().data(), this->issueprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.IssuePrice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->issueprice(), output);
  }

  // optional string FirstClose = 9;
  if (has_firstclose()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->firstclose().data(), this->firstclose().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.FirstClose");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->firstclose(), output);
  }

  // optional string BuyDate = 10;
  if (has_buydate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->buydate().data(), this->buydate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.BuyDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->buydate(), output);
  }

  // optional string PubDate = 11;
  if (has_pubdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pubdate().data(), this->pubdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.PubDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->pubdate(), output);
  }

  // optional string PayDate = 12;
  if (has_paydate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->paydate().data(), this->paydate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.PayDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->paydate(), output);
  }

  // optional string TradeDate = 13;
  if (has_tradedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tradedate().data(), this->tradedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.TradeDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->tradedate(), output);
  }

  // optional string IssuePE = 14;
  if (has_issuepe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->issuepe().data(), this->issuepe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.IssuePE");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->issuepe(), output);
  }

  // optional string IndustryPE = 15;
  if (has_industrype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->industrype().data(), this->industrype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.IndustryPE");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->industrype(), output);
  }

  // optional string SuccessRate = 16;
  if (has_successrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->successrate().data(), this->successrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.SuccessRate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->successrate(), output);
  }

  // optional string OfferTotal = 17;
  if (has_offertotal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->offertotal().data(), this->offertotal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.OfferTotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->offertotal(), output);
  }

  // optional string OfferTimes = 18;
  if (has_offertimes()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->offertimes().data(), this->offertimes().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.OfferTimes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->offertimes(), output);
  }

  // optional string SeriesNum = 19;
  if (has_seriesnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->seriesnum().data(), this->seriesnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.SeriesNum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->seriesnum(), output);
  }

  // optional string IncreaseTotal = 20;
  if (has_increasetotal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->increasetotal().data(), this->increasetotal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.IncreaseTotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->increasetotal(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.NewStockInfo)
}

::google::protobuf::uint8* NewStockInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.NewStockInfo)
  // required string StockCode = 1;
  if (has_stockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stockcode().data(), this->stockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.StockCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->stockcode(), target);
  }

  // optional string StockName = 2;
  if (has_stockname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stockname().data(), this->stockname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.StockName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stockname(), target);
  }

  // optional string StockSummary = 3;
  if (has_stocksummary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stocksummary().data(), this->stocksummary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.StockSummary");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stocksummary(), target);
  }

  // optional string BuyCode = 4;
  if (has_buycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->buycode().data(), this->buycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.BuyCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->buycode(), target);
  }

  // optional string IssueTotal = 5;
  if (has_issuetotal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->issuetotal().data(), this->issuetotal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.IssueTotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->issuetotal(), target);
  }

  // optional string OnlineTotal = 6;
  if (has_onlinetotal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->onlinetotal().data(), this->onlinetotal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.OnlineTotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->onlinetotal(), target);
  }

  // optional string BuyLimit = 7;
  if (has_buylimit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->buylimit().data(), this->buylimit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.BuyLimit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->buylimit(), target);
  }

  // optional string IssuePrice = 8;
  if (has_issueprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->issueprice().data(), this->issueprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.IssuePrice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->issueprice(), target);
  }

  // optional string FirstClose = 9;
  if (has_firstclose()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->firstclose().data(), this->firstclose().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.FirstClose");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->firstclose(), target);
  }

  // optional string BuyDate = 10;
  if (has_buydate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->buydate().data(), this->buydate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.BuyDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->buydate(), target);
  }

  // optional string PubDate = 11;
  if (has_pubdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pubdate().data(), this->pubdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.PubDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->pubdate(), target);
  }

  // optional string PayDate = 12;
  if (has_paydate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->paydate().data(), this->paydate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.PayDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->paydate(), target);
  }

  // optional string TradeDate = 13;
  if (has_tradedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tradedate().data(), this->tradedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.TradeDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->tradedate(), target);
  }

  // optional string IssuePE = 14;
  if (has_issuepe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->issuepe().data(), this->issuepe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.IssuePE");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->issuepe(), target);
  }

  // optional string IndustryPE = 15;
  if (has_industrype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->industrype().data(), this->industrype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.IndustryPE");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->industrype(), target);
  }

  // optional string SuccessRate = 16;
  if (has_successrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->successrate().data(), this->successrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.SuccessRate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->successrate(), target);
  }

  // optional string OfferTotal = 17;
  if (has_offertotal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->offertotal().data(), this->offertotal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.OfferTotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->offertotal(), target);
  }

  // optional string OfferTimes = 18;
  if (has_offertimes()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->offertimes().data(), this->offertimes().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.OfferTimes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->offertimes(), target);
  }

  // optional string SeriesNum = 19;
  if (has_seriesnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->seriesnum().data(), this->seriesnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.SeriesNum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->seriesnum(), target);
  }

  // optional string IncreaseTotal = 20;
  if (has_increasetotal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->increasetotal().data(), this->increasetotal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewStockInfo.IncreaseTotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->increasetotal(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.NewStockInfo)
  return target;
}

int NewStockInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.NewStockInfo)
  int total_size = 0;

  // required string StockCode = 1;
  if (has_stockcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stockcode());
  }
  if (_has_bits_[1 / 32] & 254u) {
    // optional string StockName = 2;
    if (has_stockname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stockname());
    }

    // optional string StockSummary = 3;
    if (has_stocksummary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stocksummary());
    }

    // optional string BuyCode = 4;
    if (has_buycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->buycode());
    }

    // optional string IssueTotal = 5;
    if (has_issuetotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->issuetotal());
    }

    // optional string OnlineTotal = 6;
    if (has_onlinetotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->onlinetotal());
    }

    // optional string BuyLimit = 7;
    if (has_buylimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->buylimit());
    }

    // optional string IssuePrice = 8;
    if (has_issueprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->issueprice());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string FirstClose = 9;
    if (has_firstclose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->firstclose());
    }

    // optional string BuyDate = 10;
    if (has_buydate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->buydate());
    }

    // optional string PubDate = 11;
    if (has_pubdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pubdate());
    }

    // optional string PayDate = 12;
    if (has_paydate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->paydate());
    }

    // optional string TradeDate = 13;
    if (has_tradedate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tradedate());
    }

    // optional string IssuePE = 14;
    if (has_issuepe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->issuepe());
    }

    // optional string IndustryPE = 15;
    if (has_industrype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->industrype());
    }

    // optional string SuccessRate = 16;
    if (has_successrate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->successrate());
    }

  }
  if (_has_bits_[16 / 32] & 983040u) {
    // optional string OfferTotal = 17;
    if (has_offertotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->offertotal());
    }

    // optional string OfferTimes = 18;
    if (has_offertimes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->offertimes());
    }

    // optional string SeriesNum = 19;
    if (has_seriesnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->seriesnum());
    }

    // optional string IncreaseTotal = 20;
    if (has_increasetotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->increasetotal());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewStockInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.NewStockInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NewStockInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NewStockInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.NewStockInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.NewStockInfo)
    MergeFrom(*source);
  }
}

void NewStockInfo::MergeFrom(const NewStockInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.NewStockInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stockcode()) {
      set_has_stockcode();
      stockcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stockcode_);
    }
    if (from.has_stockname()) {
      set_has_stockname();
      stockname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stockname_);
    }
    if (from.has_stocksummary()) {
      set_has_stocksummary();
      stocksummary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stocksummary_);
    }
    if (from.has_buycode()) {
      set_has_buycode();
      buycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buycode_);
    }
    if (from.has_issuetotal()) {
      set_has_issuetotal();
      issuetotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuetotal_);
    }
    if (from.has_onlinetotal()) {
      set_has_onlinetotal();
      onlinetotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.onlinetotal_);
    }
    if (from.has_buylimit()) {
      set_has_buylimit();
      buylimit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buylimit_);
    }
    if (from.has_issueprice()) {
      set_has_issueprice();
      issueprice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issueprice_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_firstclose()) {
      set_has_firstclose();
      firstclose_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firstclose_);
    }
    if (from.has_buydate()) {
      set_has_buydate();
      buydate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buydate_);
    }
    if (from.has_pubdate()) {
      set_has_pubdate();
      pubdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubdate_);
    }
    if (from.has_paydate()) {
      set_has_paydate();
      paydate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paydate_);
    }
    if (from.has_tradedate()) {
      set_has_tradedate();
      tradedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradedate_);
    }
    if (from.has_issuepe()) {
      set_has_issuepe();
      issuepe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuepe_);
    }
    if (from.has_industrype()) {
      set_has_industrype();
      industrype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.industrype_);
    }
    if (from.has_successrate()) {
      set_has_successrate();
      successrate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.successrate_);
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_offertotal()) {
      set_has_offertotal();
      offertotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offertotal_);
    }
    if (from.has_offertimes()) {
      set_has_offertimes();
      offertimes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offertimes_);
    }
    if (from.has_seriesnum()) {
      set_has_seriesnum();
      seriesnum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seriesnum_);
    }
    if (from.has_increasetotal()) {
      set_has_increasetotal();
      increasetotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.increasetotal_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NewStockInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.NewStockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewStockInfo::CopyFrom(const NewStockInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.NewStockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewStockInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void NewStockInfo::Swap(NewStockInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewStockInfo::InternalSwap(NewStockInfo* other) {
  stockcode_.Swap(&other->stockcode_);
  stockname_.Swap(&other->stockname_);
  stocksummary_.Swap(&other->stocksummary_);
  buycode_.Swap(&other->buycode_);
  issuetotal_.Swap(&other->issuetotal_);
  onlinetotal_.Swap(&other->onlinetotal_);
  buylimit_.Swap(&other->buylimit_);
  issueprice_.Swap(&other->issueprice_);
  firstclose_.Swap(&other->firstclose_);
  buydate_.Swap(&other->buydate_);
  pubdate_.Swap(&other->pubdate_);
  paydate_.Swap(&other->paydate_);
  tradedate_.Swap(&other->tradedate_);
  issuepe_.Swap(&other->issuepe_);
  industrype_.Swap(&other->industrype_);
  successrate_.Swap(&other->successrate_);
  offertotal_.Swap(&other->offertotal_);
  offertimes_.Swap(&other->offertimes_);
  seriesnum_.Swap(&other->seriesnum_);
  increasetotal_.Swap(&other->increasetotal_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewStockInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewStockInfo_descriptor_;
  metadata.reflection = NewStockInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewStockInfo

// required string StockCode = 1;
bool NewStockInfo::has_stockcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NewStockInfo::set_has_stockcode() {
  _has_bits_[0] |= 0x00000001u;
}
void NewStockInfo::clear_has_stockcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void NewStockInfo::clear_stockcode() {
  stockcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stockcode();
}
 const ::std::string& NewStockInfo::stockcode() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.StockCode)
  return stockcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_stockcode(const ::std::string& value) {
  set_has_stockcode();
  stockcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.StockCode)
}
 void NewStockInfo::set_stockcode(const char* value) {
  set_has_stockcode();
  stockcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.StockCode)
}
 void NewStockInfo::set_stockcode(const char* value, size_t size) {
  set_has_stockcode();
  stockcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.StockCode)
}
 ::std::string* NewStockInfo::mutable_stockcode() {
  set_has_stockcode();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.StockCode)
  return stockcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_stockcode() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.StockCode)
  clear_has_stockcode();
  return stockcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_stockcode(::std::string* stockcode) {
  if (stockcode != NULL) {
    set_has_stockcode();
  } else {
    clear_has_stockcode();
  }
  stockcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stockcode);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.StockCode)
}

// optional string StockName = 2;
bool NewStockInfo::has_stockname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NewStockInfo::set_has_stockname() {
  _has_bits_[0] |= 0x00000002u;
}
void NewStockInfo::clear_has_stockname() {
  _has_bits_[0] &= ~0x00000002u;
}
void NewStockInfo::clear_stockname() {
  stockname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stockname();
}
 const ::std::string& NewStockInfo::stockname() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.StockName)
  return stockname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_stockname(const ::std::string& value) {
  set_has_stockname();
  stockname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.StockName)
}
 void NewStockInfo::set_stockname(const char* value) {
  set_has_stockname();
  stockname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.StockName)
}
 void NewStockInfo::set_stockname(const char* value, size_t size) {
  set_has_stockname();
  stockname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.StockName)
}
 ::std::string* NewStockInfo::mutable_stockname() {
  set_has_stockname();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.StockName)
  return stockname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_stockname() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.StockName)
  clear_has_stockname();
  return stockname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_stockname(::std::string* stockname) {
  if (stockname != NULL) {
    set_has_stockname();
  } else {
    clear_has_stockname();
  }
  stockname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stockname);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.StockName)
}

// optional string StockSummary = 3;
bool NewStockInfo::has_stocksummary() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NewStockInfo::set_has_stocksummary() {
  _has_bits_[0] |= 0x00000004u;
}
void NewStockInfo::clear_has_stocksummary() {
  _has_bits_[0] &= ~0x00000004u;
}
void NewStockInfo::clear_stocksummary() {
  stocksummary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stocksummary();
}
 const ::std::string& NewStockInfo::stocksummary() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.StockSummary)
  return stocksummary_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_stocksummary(const ::std::string& value) {
  set_has_stocksummary();
  stocksummary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.StockSummary)
}
 void NewStockInfo::set_stocksummary(const char* value) {
  set_has_stocksummary();
  stocksummary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.StockSummary)
}
 void NewStockInfo::set_stocksummary(const char* value, size_t size) {
  set_has_stocksummary();
  stocksummary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.StockSummary)
}
 ::std::string* NewStockInfo::mutable_stocksummary() {
  set_has_stocksummary();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.StockSummary)
  return stocksummary_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_stocksummary() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.StockSummary)
  clear_has_stocksummary();
  return stocksummary_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_stocksummary(::std::string* stocksummary) {
  if (stocksummary != NULL) {
    set_has_stocksummary();
  } else {
    clear_has_stocksummary();
  }
  stocksummary_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stocksummary);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.StockSummary)
}

// optional string BuyCode = 4;
bool NewStockInfo::has_buycode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void NewStockInfo::set_has_buycode() {
  _has_bits_[0] |= 0x00000008u;
}
void NewStockInfo::clear_has_buycode() {
  _has_bits_[0] &= ~0x00000008u;
}
void NewStockInfo::clear_buycode() {
  buycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buycode();
}
 const ::std::string& NewStockInfo::buycode() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.BuyCode)
  return buycode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_buycode(const ::std::string& value) {
  set_has_buycode();
  buycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.BuyCode)
}
 void NewStockInfo::set_buycode(const char* value) {
  set_has_buycode();
  buycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.BuyCode)
}
 void NewStockInfo::set_buycode(const char* value, size_t size) {
  set_has_buycode();
  buycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.BuyCode)
}
 ::std::string* NewStockInfo::mutable_buycode() {
  set_has_buycode();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.BuyCode)
  return buycode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_buycode() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.BuyCode)
  clear_has_buycode();
  return buycode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_buycode(::std::string* buycode) {
  if (buycode != NULL) {
    set_has_buycode();
  } else {
    clear_has_buycode();
  }
  buycode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buycode);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.BuyCode)
}

// optional string IssueTotal = 5;
bool NewStockInfo::has_issuetotal() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void NewStockInfo::set_has_issuetotal() {
  _has_bits_[0] |= 0x00000010u;
}
void NewStockInfo::clear_has_issuetotal() {
  _has_bits_[0] &= ~0x00000010u;
}
void NewStockInfo::clear_issuetotal() {
  issuetotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_issuetotal();
}
 const ::std::string& NewStockInfo::issuetotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.IssueTotal)
  return issuetotal_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_issuetotal(const ::std::string& value) {
  set_has_issuetotal();
  issuetotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.IssueTotal)
}
 void NewStockInfo::set_issuetotal(const char* value) {
  set_has_issuetotal();
  issuetotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.IssueTotal)
}
 void NewStockInfo::set_issuetotal(const char* value, size_t size) {
  set_has_issuetotal();
  issuetotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.IssueTotal)
}
 ::std::string* NewStockInfo::mutable_issuetotal() {
  set_has_issuetotal();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.IssueTotal)
  return issuetotal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_issuetotal() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.IssueTotal)
  clear_has_issuetotal();
  return issuetotal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_issuetotal(::std::string* issuetotal) {
  if (issuetotal != NULL) {
    set_has_issuetotal();
  } else {
    clear_has_issuetotal();
  }
  issuetotal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), issuetotal);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.IssueTotal)
}

// optional string OnlineTotal = 6;
bool NewStockInfo::has_onlinetotal() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void NewStockInfo::set_has_onlinetotal() {
  _has_bits_[0] |= 0x00000020u;
}
void NewStockInfo::clear_has_onlinetotal() {
  _has_bits_[0] &= ~0x00000020u;
}
void NewStockInfo::clear_onlinetotal() {
  onlinetotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_onlinetotal();
}
 const ::std::string& NewStockInfo::onlinetotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.OnlineTotal)
  return onlinetotal_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_onlinetotal(const ::std::string& value) {
  set_has_onlinetotal();
  onlinetotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.OnlineTotal)
}
 void NewStockInfo::set_onlinetotal(const char* value) {
  set_has_onlinetotal();
  onlinetotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.OnlineTotal)
}
 void NewStockInfo::set_onlinetotal(const char* value, size_t size) {
  set_has_onlinetotal();
  onlinetotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.OnlineTotal)
}
 ::std::string* NewStockInfo::mutable_onlinetotal() {
  set_has_onlinetotal();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.OnlineTotal)
  return onlinetotal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_onlinetotal() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.OnlineTotal)
  clear_has_onlinetotal();
  return onlinetotal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_onlinetotal(::std::string* onlinetotal) {
  if (onlinetotal != NULL) {
    set_has_onlinetotal();
  } else {
    clear_has_onlinetotal();
  }
  onlinetotal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), onlinetotal);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.OnlineTotal)
}

// optional string BuyLimit = 7;
bool NewStockInfo::has_buylimit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void NewStockInfo::set_has_buylimit() {
  _has_bits_[0] |= 0x00000040u;
}
void NewStockInfo::clear_has_buylimit() {
  _has_bits_[0] &= ~0x00000040u;
}
void NewStockInfo::clear_buylimit() {
  buylimit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buylimit();
}
 const ::std::string& NewStockInfo::buylimit() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.BuyLimit)
  return buylimit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_buylimit(const ::std::string& value) {
  set_has_buylimit();
  buylimit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.BuyLimit)
}
 void NewStockInfo::set_buylimit(const char* value) {
  set_has_buylimit();
  buylimit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.BuyLimit)
}
 void NewStockInfo::set_buylimit(const char* value, size_t size) {
  set_has_buylimit();
  buylimit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.BuyLimit)
}
 ::std::string* NewStockInfo::mutable_buylimit() {
  set_has_buylimit();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.BuyLimit)
  return buylimit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_buylimit() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.BuyLimit)
  clear_has_buylimit();
  return buylimit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_buylimit(::std::string* buylimit) {
  if (buylimit != NULL) {
    set_has_buylimit();
  } else {
    clear_has_buylimit();
  }
  buylimit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buylimit);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.BuyLimit)
}

// optional string IssuePrice = 8;
bool NewStockInfo::has_issueprice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void NewStockInfo::set_has_issueprice() {
  _has_bits_[0] |= 0x00000080u;
}
void NewStockInfo::clear_has_issueprice() {
  _has_bits_[0] &= ~0x00000080u;
}
void NewStockInfo::clear_issueprice() {
  issueprice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_issueprice();
}
 const ::std::string& NewStockInfo::issueprice() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.IssuePrice)
  return issueprice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_issueprice(const ::std::string& value) {
  set_has_issueprice();
  issueprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.IssuePrice)
}
 void NewStockInfo::set_issueprice(const char* value) {
  set_has_issueprice();
  issueprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.IssuePrice)
}
 void NewStockInfo::set_issueprice(const char* value, size_t size) {
  set_has_issueprice();
  issueprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.IssuePrice)
}
 ::std::string* NewStockInfo::mutable_issueprice() {
  set_has_issueprice();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.IssuePrice)
  return issueprice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_issueprice() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.IssuePrice)
  clear_has_issueprice();
  return issueprice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_issueprice(::std::string* issueprice) {
  if (issueprice != NULL) {
    set_has_issueprice();
  } else {
    clear_has_issueprice();
  }
  issueprice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), issueprice);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.IssuePrice)
}

// optional string FirstClose = 9;
bool NewStockInfo::has_firstclose() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void NewStockInfo::set_has_firstclose() {
  _has_bits_[0] |= 0x00000100u;
}
void NewStockInfo::clear_has_firstclose() {
  _has_bits_[0] &= ~0x00000100u;
}
void NewStockInfo::clear_firstclose() {
  firstclose_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_firstclose();
}
 const ::std::string& NewStockInfo::firstclose() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.FirstClose)
  return firstclose_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_firstclose(const ::std::string& value) {
  set_has_firstclose();
  firstclose_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.FirstClose)
}
 void NewStockInfo::set_firstclose(const char* value) {
  set_has_firstclose();
  firstclose_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.FirstClose)
}
 void NewStockInfo::set_firstclose(const char* value, size_t size) {
  set_has_firstclose();
  firstclose_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.FirstClose)
}
 ::std::string* NewStockInfo::mutable_firstclose() {
  set_has_firstclose();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.FirstClose)
  return firstclose_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_firstclose() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.FirstClose)
  clear_has_firstclose();
  return firstclose_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_firstclose(::std::string* firstclose) {
  if (firstclose != NULL) {
    set_has_firstclose();
  } else {
    clear_has_firstclose();
  }
  firstclose_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firstclose);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.FirstClose)
}

// optional string BuyDate = 10;
bool NewStockInfo::has_buydate() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void NewStockInfo::set_has_buydate() {
  _has_bits_[0] |= 0x00000200u;
}
void NewStockInfo::clear_has_buydate() {
  _has_bits_[0] &= ~0x00000200u;
}
void NewStockInfo::clear_buydate() {
  buydate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buydate();
}
 const ::std::string& NewStockInfo::buydate() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.BuyDate)
  return buydate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_buydate(const ::std::string& value) {
  set_has_buydate();
  buydate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.BuyDate)
}
 void NewStockInfo::set_buydate(const char* value) {
  set_has_buydate();
  buydate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.BuyDate)
}
 void NewStockInfo::set_buydate(const char* value, size_t size) {
  set_has_buydate();
  buydate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.BuyDate)
}
 ::std::string* NewStockInfo::mutable_buydate() {
  set_has_buydate();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.BuyDate)
  return buydate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_buydate() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.BuyDate)
  clear_has_buydate();
  return buydate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_buydate(::std::string* buydate) {
  if (buydate != NULL) {
    set_has_buydate();
  } else {
    clear_has_buydate();
  }
  buydate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buydate);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.BuyDate)
}

// optional string PubDate = 11;
bool NewStockInfo::has_pubdate() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void NewStockInfo::set_has_pubdate() {
  _has_bits_[0] |= 0x00000400u;
}
void NewStockInfo::clear_has_pubdate() {
  _has_bits_[0] &= ~0x00000400u;
}
void NewStockInfo::clear_pubdate() {
  pubdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pubdate();
}
 const ::std::string& NewStockInfo::pubdate() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.PubDate)
  return pubdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_pubdate(const ::std::string& value) {
  set_has_pubdate();
  pubdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.PubDate)
}
 void NewStockInfo::set_pubdate(const char* value) {
  set_has_pubdate();
  pubdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.PubDate)
}
 void NewStockInfo::set_pubdate(const char* value, size_t size) {
  set_has_pubdate();
  pubdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.PubDate)
}
 ::std::string* NewStockInfo::mutable_pubdate() {
  set_has_pubdate();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.PubDate)
  return pubdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_pubdate() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.PubDate)
  clear_has_pubdate();
  return pubdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_pubdate(::std::string* pubdate) {
  if (pubdate != NULL) {
    set_has_pubdate();
  } else {
    clear_has_pubdate();
  }
  pubdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubdate);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.PubDate)
}

// optional string PayDate = 12;
bool NewStockInfo::has_paydate() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void NewStockInfo::set_has_paydate() {
  _has_bits_[0] |= 0x00000800u;
}
void NewStockInfo::clear_has_paydate() {
  _has_bits_[0] &= ~0x00000800u;
}
void NewStockInfo::clear_paydate() {
  paydate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_paydate();
}
 const ::std::string& NewStockInfo::paydate() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.PayDate)
  return paydate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_paydate(const ::std::string& value) {
  set_has_paydate();
  paydate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.PayDate)
}
 void NewStockInfo::set_paydate(const char* value) {
  set_has_paydate();
  paydate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.PayDate)
}
 void NewStockInfo::set_paydate(const char* value, size_t size) {
  set_has_paydate();
  paydate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.PayDate)
}
 ::std::string* NewStockInfo::mutable_paydate() {
  set_has_paydate();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.PayDate)
  return paydate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_paydate() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.PayDate)
  clear_has_paydate();
  return paydate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_paydate(::std::string* paydate) {
  if (paydate != NULL) {
    set_has_paydate();
  } else {
    clear_has_paydate();
  }
  paydate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), paydate);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.PayDate)
}

// optional string TradeDate = 13;
bool NewStockInfo::has_tradedate() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void NewStockInfo::set_has_tradedate() {
  _has_bits_[0] |= 0x00001000u;
}
void NewStockInfo::clear_has_tradedate() {
  _has_bits_[0] &= ~0x00001000u;
}
void NewStockInfo::clear_tradedate() {
  tradedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tradedate();
}
 const ::std::string& NewStockInfo::tradedate() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.TradeDate)
  return tradedate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_tradedate(const ::std::string& value) {
  set_has_tradedate();
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.TradeDate)
}
 void NewStockInfo::set_tradedate(const char* value) {
  set_has_tradedate();
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.TradeDate)
}
 void NewStockInfo::set_tradedate(const char* value, size_t size) {
  set_has_tradedate();
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.TradeDate)
}
 ::std::string* NewStockInfo::mutable_tradedate() {
  set_has_tradedate();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.TradeDate)
  return tradedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_tradedate() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.TradeDate)
  clear_has_tradedate();
  return tradedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_tradedate(::std::string* tradedate) {
  if (tradedate != NULL) {
    set_has_tradedate();
  } else {
    clear_has_tradedate();
  }
  tradedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradedate);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.TradeDate)
}

// optional string IssuePE = 14;
bool NewStockInfo::has_issuepe() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void NewStockInfo::set_has_issuepe() {
  _has_bits_[0] |= 0x00002000u;
}
void NewStockInfo::clear_has_issuepe() {
  _has_bits_[0] &= ~0x00002000u;
}
void NewStockInfo::clear_issuepe() {
  issuepe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_issuepe();
}
 const ::std::string& NewStockInfo::issuepe() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.IssuePE)
  return issuepe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_issuepe(const ::std::string& value) {
  set_has_issuepe();
  issuepe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.IssuePE)
}
 void NewStockInfo::set_issuepe(const char* value) {
  set_has_issuepe();
  issuepe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.IssuePE)
}
 void NewStockInfo::set_issuepe(const char* value, size_t size) {
  set_has_issuepe();
  issuepe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.IssuePE)
}
 ::std::string* NewStockInfo::mutable_issuepe() {
  set_has_issuepe();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.IssuePE)
  return issuepe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_issuepe() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.IssuePE)
  clear_has_issuepe();
  return issuepe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_issuepe(::std::string* issuepe) {
  if (issuepe != NULL) {
    set_has_issuepe();
  } else {
    clear_has_issuepe();
  }
  issuepe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), issuepe);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.IssuePE)
}

// optional string IndustryPE = 15;
bool NewStockInfo::has_industrype() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void NewStockInfo::set_has_industrype() {
  _has_bits_[0] |= 0x00004000u;
}
void NewStockInfo::clear_has_industrype() {
  _has_bits_[0] &= ~0x00004000u;
}
void NewStockInfo::clear_industrype() {
  industrype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_industrype();
}
 const ::std::string& NewStockInfo::industrype() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.IndustryPE)
  return industrype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_industrype(const ::std::string& value) {
  set_has_industrype();
  industrype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.IndustryPE)
}
 void NewStockInfo::set_industrype(const char* value) {
  set_has_industrype();
  industrype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.IndustryPE)
}
 void NewStockInfo::set_industrype(const char* value, size_t size) {
  set_has_industrype();
  industrype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.IndustryPE)
}
 ::std::string* NewStockInfo::mutable_industrype() {
  set_has_industrype();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.IndustryPE)
  return industrype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_industrype() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.IndustryPE)
  clear_has_industrype();
  return industrype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_industrype(::std::string* industrype) {
  if (industrype != NULL) {
    set_has_industrype();
  } else {
    clear_has_industrype();
  }
  industrype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), industrype);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.IndustryPE)
}

// optional string SuccessRate = 16;
bool NewStockInfo::has_successrate() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void NewStockInfo::set_has_successrate() {
  _has_bits_[0] |= 0x00008000u;
}
void NewStockInfo::clear_has_successrate() {
  _has_bits_[0] &= ~0x00008000u;
}
void NewStockInfo::clear_successrate() {
  successrate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_successrate();
}
 const ::std::string& NewStockInfo::successrate() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.SuccessRate)
  return successrate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_successrate(const ::std::string& value) {
  set_has_successrate();
  successrate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.SuccessRate)
}
 void NewStockInfo::set_successrate(const char* value) {
  set_has_successrate();
  successrate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.SuccessRate)
}
 void NewStockInfo::set_successrate(const char* value, size_t size) {
  set_has_successrate();
  successrate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.SuccessRate)
}
 ::std::string* NewStockInfo::mutable_successrate() {
  set_has_successrate();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.SuccessRate)
  return successrate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_successrate() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.SuccessRate)
  clear_has_successrate();
  return successrate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_successrate(::std::string* successrate) {
  if (successrate != NULL) {
    set_has_successrate();
  } else {
    clear_has_successrate();
  }
  successrate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), successrate);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.SuccessRate)
}

// optional string OfferTotal = 17;
bool NewStockInfo::has_offertotal() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void NewStockInfo::set_has_offertotal() {
  _has_bits_[0] |= 0x00010000u;
}
void NewStockInfo::clear_has_offertotal() {
  _has_bits_[0] &= ~0x00010000u;
}
void NewStockInfo::clear_offertotal() {
  offertotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_offertotal();
}
 const ::std::string& NewStockInfo::offertotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.OfferTotal)
  return offertotal_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_offertotal(const ::std::string& value) {
  set_has_offertotal();
  offertotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.OfferTotal)
}
 void NewStockInfo::set_offertotal(const char* value) {
  set_has_offertotal();
  offertotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.OfferTotal)
}
 void NewStockInfo::set_offertotal(const char* value, size_t size) {
  set_has_offertotal();
  offertotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.OfferTotal)
}
 ::std::string* NewStockInfo::mutable_offertotal() {
  set_has_offertotal();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.OfferTotal)
  return offertotal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_offertotal() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.OfferTotal)
  clear_has_offertotal();
  return offertotal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_offertotal(::std::string* offertotal) {
  if (offertotal != NULL) {
    set_has_offertotal();
  } else {
    clear_has_offertotal();
  }
  offertotal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), offertotal);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.OfferTotal)
}

// optional string OfferTimes = 18;
bool NewStockInfo::has_offertimes() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void NewStockInfo::set_has_offertimes() {
  _has_bits_[0] |= 0x00020000u;
}
void NewStockInfo::clear_has_offertimes() {
  _has_bits_[0] &= ~0x00020000u;
}
void NewStockInfo::clear_offertimes() {
  offertimes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_offertimes();
}
 const ::std::string& NewStockInfo::offertimes() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.OfferTimes)
  return offertimes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_offertimes(const ::std::string& value) {
  set_has_offertimes();
  offertimes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.OfferTimes)
}
 void NewStockInfo::set_offertimes(const char* value) {
  set_has_offertimes();
  offertimes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.OfferTimes)
}
 void NewStockInfo::set_offertimes(const char* value, size_t size) {
  set_has_offertimes();
  offertimes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.OfferTimes)
}
 ::std::string* NewStockInfo::mutable_offertimes() {
  set_has_offertimes();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.OfferTimes)
  return offertimes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_offertimes() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.OfferTimes)
  clear_has_offertimes();
  return offertimes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_offertimes(::std::string* offertimes) {
  if (offertimes != NULL) {
    set_has_offertimes();
  } else {
    clear_has_offertimes();
  }
  offertimes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), offertimes);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.OfferTimes)
}

// optional string SeriesNum = 19;
bool NewStockInfo::has_seriesnum() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void NewStockInfo::set_has_seriesnum() {
  _has_bits_[0] |= 0x00040000u;
}
void NewStockInfo::clear_has_seriesnum() {
  _has_bits_[0] &= ~0x00040000u;
}
void NewStockInfo::clear_seriesnum() {
  seriesnum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_seriesnum();
}
 const ::std::string& NewStockInfo::seriesnum() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.SeriesNum)
  return seriesnum_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_seriesnum(const ::std::string& value) {
  set_has_seriesnum();
  seriesnum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.SeriesNum)
}
 void NewStockInfo::set_seriesnum(const char* value) {
  set_has_seriesnum();
  seriesnum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.SeriesNum)
}
 void NewStockInfo::set_seriesnum(const char* value, size_t size) {
  set_has_seriesnum();
  seriesnum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.SeriesNum)
}
 ::std::string* NewStockInfo::mutable_seriesnum() {
  set_has_seriesnum();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.SeriesNum)
  return seriesnum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_seriesnum() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.SeriesNum)
  clear_has_seriesnum();
  return seriesnum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_seriesnum(::std::string* seriesnum) {
  if (seriesnum != NULL) {
    set_has_seriesnum();
  } else {
    clear_has_seriesnum();
  }
  seriesnum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seriesnum);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.SeriesNum)
}

// optional string IncreaseTotal = 20;
bool NewStockInfo::has_increasetotal() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void NewStockInfo::set_has_increasetotal() {
  _has_bits_[0] |= 0x00080000u;
}
void NewStockInfo::clear_has_increasetotal() {
  _has_bits_[0] &= ~0x00080000u;
}
void NewStockInfo::clear_increasetotal() {
  increasetotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_increasetotal();
}
 const ::std::string& NewStockInfo::increasetotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewStockInfo.IncreaseTotal)
  return increasetotal_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_increasetotal(const ::std::string& value) {
  set_has_increasetotal();
  increasetotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewStockInfo.IncreaseTotal)
}
 void NewStockInfo::set_increasetotal(const char* value) {
  set_has_increasetotal();
  increasetotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewStockInfo.IncreaseTotal)
}
 void NewStockInfo::set_increasetotal(const char* value, size_t size) {
  set_has_increasetotal();
  increasetotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewStockInfo.IncreaseTotal)
}
 ::std::string* NewStockInfo::mutable_increasetotal() {
  set_has_increasetotal();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewStockInfo.IncreaseTotal)
  return increasetotal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewStockInfo::release_increasetotal() {
  // @@protoc_insertion_point(field_release:dzhyun.NewStockInfo.IncreaseTotal)
  clear_has_increasetotal();
  return increasetotal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewStockInfo::set_allocated_increasetotal(::std::string* increasetotal) {
  if (increasetotal != NULL) {
    set_has_increasetotal();
  } else {
    clear_has_increasetotal();
  }
  increasetotal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), increasetotal);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewStockInfo.IncreaseTotal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dzhyun

// @@protoc_insertion_point(global_scope)
