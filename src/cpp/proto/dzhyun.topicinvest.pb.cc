// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dzhyun.topicinvest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dzhyun.topicinvest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dzhyun {

namespace {

const ::google::protobuf::Descriptor* LingZhangGuShuJu_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LingZhangGuShuJu_reflection_ = NULL;
const ::google::protobuf::Descriptor* TopicInvestRank_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TopicInvestRank_reflection_ = NULL;
const ::google::protobuf::Descriptor* TopicInvest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TopicInvest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LiShiHangQing_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LiShiHangQing_reflection_ = NULL;
const ::google::protobuf::Descriptor* LiShiZouShi_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LiShiZouShi_reflection_ = NULL;
const ::google::protobuf::Descriptor* TopicInvestHistory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TopicInvestHistory_reflection_ = NULL;
const ::google::protobuf::Descriptor* TopicInvestInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TopicInvestInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dzhyun_2etopicinvest_2eproto() {
  protobuf_AddDesc_dzhyun_2etopicinvest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dzhyun.topicinvest.proto");
  GOOGLE_CHECK(file != NULL);
  LingZhangGuShuJu_descriptor_ = file->message_type(0);
  static const int LingZhangGuShuJu_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingZhangGuShuJu, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingZhangGuShuJu, zhongwenjiancheng_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingZhangGuShuJu, zuixinjia_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingZhangGuShuJu, zhangfu_),
  };
  LingZhangGuShuJu_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LingZhangGuShuJu_descriptor_,
      LingZhangGuShuJu::default_instance_,
      LingZhangGuShuJu_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingZhangGuShuJu, _has_bits_[0]),
      -1,
      -1,
      sizeof(LingZhangGuShuJu),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingZhangGuShuJu, _internal_metadata_),
      -1);
  TopicInvestRank_descriptor_ = file->message_type(1);
  static const int TopicInvestRank_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestRank, bianhao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestRank, shifouremenzhuti_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestRank, ripingjunzhangfupaiming14_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestRank, ripingjunzhangfupaiming30_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestRank, rireduzhi14_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestRank, rireduzhi30_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestRank, rireduzhi10_),
  };
  TopicInvestRank_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TopicInvestRank_descriptor_,
      TopicInvestRank::default_instance_,
      TopicInvestRank_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestRank, _has_bits_[0]),
      -1,
      -1,
      sizeof(TopicInvestRank),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestRank, _internal_metadata_),
      -1);
  TopicInvest_descriptor_ = file->message_type(2);
  static const int TopicInvest_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, bianhao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, mingcheng_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, shijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, zhangfu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, liangbi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, huanshou_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, shangzhangjiashu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, pingpanjiashu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, xiadiejiashu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, lingzhanggu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, shifouremenzhuti_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, ripingjunzhangfupaiming14_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, ripingjunzhangfupaiming30_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, rireduzhi14_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, rireduzhi30_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, rireduzhi10_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, gegushu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, dangyuezhangfu_),
  };
  TopicInvest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TopicInvest_descriptor_,
      TopicInvest::default_instance_,
      TopicInvest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, _has_bits_[0]),
      -1,
      -1,
      sizeof(TopicInvest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvest, _internal_metadata_),
      -1);
  LiShiHangQing_descriptor_ = file->message_type(3);
  static const int LiShiHangQing_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiShiHangQing, shijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiShiHangQing, zhangfu_),
  };
  LiShiHangQing_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LiShiHangQing_descriptor_,
      LiShiHangQing::default_instance_,
      LiShiHangQing_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiShiHangQing, _has_bits_[0]),
      -1,
      -1,
      sizeof(LiShiHangQing),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiShiHangQing, _internal_metadata_),
      -1);
  LiShiZouShi_descriptor_ = file->message_type(4);
  static const int LiShiZouShi_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiShiZouShi, hangqing_),
  };
  LiShiZouShi_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LiShiZouShi_descriptor_,
      LiShiZouShi::default_instance_,
      LiShiZouShi_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiShiZouShi, _has_bits_[0]),
      -1,
      -1,
      sizeof(LiShiZouShi),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiShiZouShi, _internal_metadata_),
      -1);
  TopicInvestHistory_descriptor_ = file->message_type(5);
  static const int TopicInvestHistory_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestHistory, bianhao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestHistory, mingcheng_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestHistory, shijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestHistory, lishi_),
  };
  TopicInvestHistory_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TopicInvestHistory_descriptor_,
      TopicInvestHistory::default_instance_,
      TopicInvestHistory_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestHistory, _has_bits_[0]),
      -1,
      -1,
      sizeof(TopicInvestHistory),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestHistory, _internal_metadata_),
      -1);
  TopicInvestInfo_descriptor_ = file->message_type(6);
  static const int TopicInvestInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestInfo, bianhao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestInfo, mingcheng_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestInfo, chengfengu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestInfo, leibie_),
  };
  TopicInvestInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TopicInvestInfo_descriptor_,
      TopicInvestInfo::default_instance_,
      TopicInvestInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(TopicInvestInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInvestInfo, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dzhyun_2etopicinvest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LingZhangGuShuJu_descriptor_, &LingZhangGuShuJu::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TopicInvestRank_descriptor_, &TopicInvestRank::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TopicInvest_descriptor_, &TopicInvest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LiShiHangQing_descriptor_, &LiShiHangQing::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LiShiZouShi_descriptor_, &LiShiZouShi::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TopicInvestHistory_descriptor_, &TopicInvestHistory::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TopicInvestInfo_descriptor_, &TopicInvestInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dzhyun_2etopicinvest_2eproto() {
  delete LingZhangGuShuJu::default_instance_;
  delete LingZhangGuShuJu_reflection_;
  delete TopicInvestRank::default_instance_;
  delete TopicInvestRank_reflection_;
  delete TopicInvest::default_instance_;
  delete TopicInvest_reflection_;
  delete LiShiHangQing::default_instance_;
  delete LiShiHangQing_reflection_;
  delete LiShiZouShi::default_instance_;
  delete LiShiZouShi_reflection_;
  delete TopicInvestHistory::default_instance_;
  delete TopicInvestHistory_reflection_;
  delete TopicInvestInfo::default_instance_;
  delete TopicInvestInfo_reflection_;
}

void protobuf_AddDesc_dzhyun_2etopicinvest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030dzhyun.topicinvest.proto\022\006dzhyun\"^\n\020Li"
    "ngZhangGuShuJu\022\013\n\003Obj\030\001 \002(\t\022\031\n\021ZhongWenJ"
    "ianCheng\030\002 \001(\t\022\021\n\tZuiXinJia\030\003 \001(\003\022\017\n\007Zha"
    "ngFu\030\004 \001(\003\"\301\001\n\017TopicInvestRank\022\017\n\007BianHa"
    "o\030\001 \002(\003\022\030\n\020ShiFouReMenZhuTi\030\002 \001(\003\022!\n\031RiP"
    "ingJunZhangFuPaiMing14\030\003 \001(\003\022!\n\031RiPingJu"
    "nZhangFuPaiMing30\030\004 \001(\003\022\023\n\013RiReDuZhi14\030\005"
    " \001(\003\022\023\n\013RiReDuZhi30\030\006 \001(\003\022\023\n\013RiReDuZhi10"
    "\030\007 \001(\003\"\264\003\n\013TopicInvest\022\017\n\007BianHao\030\001 \002(\003\022"
    "\021\n\tMingCheng\030\002 \001(\t\022\017\n\007ShiJian\030\003 \001(\003\022\017\n\007Z"
    "hangFu\030\004 \001(\003\022\017\n\007LiangBi\030\005 \001(\003\022\020\n\010HuanSho"
    "u\030\006 \001(\003\022\030\n\020ShangZhangJiaShu\030\007 \001(\003\022\025\n\rPin"
    "gPanJiaShu\030\010 \001(\003\022\024\n\014XiaDieJiaShu\030\t \001(\003\022-"
    "\n\013LingZhangGu\030\n \001(\0132\030.dzhyun.LingZhangGu"
    "ShuJu\022\030\n\020ShiFouReMenZhuTi\030\013 \001(\003\022!\n\031RiPin"
    "gJunZhangFuPaiMing14\030\014 \001(\003\022!\n\031RiPingJunZ"
    "hangFuPaiMing30\030\r \001(\003\022\023\n\013RiReDuZhi14\030\016 \001"
    "(\003\022\023\n\013RiReDuZhi30\030\017 \001(\003\022\023\n\013RiReDuZhi10\030\020"
    " \001(\003\022\017\n\007GeGuShu\030\021 \001(\003\022\026\n\016DangYueZhangFu\030"
    "\022 \001(\003\"1\n\rLiShiHangQing\022\017\n\007ShiJian\030\001 \002(\003\022"
    "\017\n\007ZhangFu\030\002 \002(\003\"6\n\013LiShiZouShi\022\'\n\010HangQ"
    "ing\030\001 \003(\0132\025.dzhyun.LiShiHangQing\"m\n\022Topi"
    "cInvestHistory\022\017\n\007BianHao\030\001 \002(\003\022\021\n\tMingC"
    "heng\030\002 \001(\t\022\017\n\007ShiJian\030\003 \001(\003\022\"\n\005LiShi\030\004 \001"
    "(\0132\023.dzhyun.LiShiZouShi\"Y\n\017TopicInvestIn"
    "fo\022\017\n\007BianHao\030\001 \002(\003\022\021\n\tMingCheng\030\002 \002(\t\022\022"
    "\n\nChengFenGu\030\003 \003(\t\022\016\n\006LeiBie\030\004 \001(\003B\022\n\020co"
    "m.dzhyun.proto", 1094);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dzhyun.topicinvest.proto", &protobuf_RegisterTypes);
  LingZhangGuShuJu::default_instance_ = new LingZhangGuShuJu();
  TopicInvestRank::default_instance_ = new TopicInvestRank();
  TopicInvest::default_instance_ = new TopicInvest();
  LiShiHangQing::default_instance_ = new LiShiHangQing();
  LiShiZouShi::default_instance_ = new LiShiZouShi();
  TopicInvestHistory::default_instance_ = new TopicInvestHistory();
  TopicInvestInfo::default_instance_ = new TopicInvestInfo();
  LingZhangGuShuJu::default_instance_->InitAsDefaultInstance();
  TopicInvestRank::default_instance_->InitAsDefaultInstance();
  TopicInvest::default_instance_->InitAsDefaultInstance();
  LiShiHangQing::default_instance_->InitAsDefaultInstance();
  LiShiZouShi::default_instance_->InitAsDefaultInstance();
  TopicInvestHistory::default_instance_->InitAsDefaultInstance();
  TopicInvestInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dzhyun_2etopicinvest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dzhyun_2etopicinvest_2eproto {
  StaticDescriptorInitializer_dzhyun_2etopicinvest_2eproto() {
    protobuf_AddDesc_dzhyun_2etopicinvest_2eproto();
  }
} static_descriptor_initializer_dzhyun_2etopicinvest_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LingZhangGuShuJu::kObjFieldNumber;
const int LingZhangGuShuJu::kZhongWenJianChengFieldNumber;
const int LingZhangGuShuJu::kZuiXinJiaFieldNumber;
const int LingZhangGuShuJu::kZhangFuFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LingZhangGuShuJu::LingZhangGuShuJu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.LingZhangGuShuJu)
}

void LingZhangGuShuJu::InitAsDefaultInstance() {
}

LingZhangGuShuJu::LingZhangGuShuJu(const LingZhangGuShuJu& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.LingZhangGuShuJu)
}

void LingZhangGuShuJu::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zhongwenjiancheng_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zuixinjia_ = GOOGLE_LONGLONG(0);
  zhangfu_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LingZhangGuShuJu::~LingZhangGuShuJu() {
  // @@protoc_insertion_point(destructor:dzhyun.LingZhangGuShuJu)
  SharedDtor();
}

void LingZhangGuShuJu::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zhongwenjiancheng_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LingZhangGuShuJu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LingZhangGuShuJu::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LingZhangGuShuJu_descriptor_;
}

const LingZhangGuShuJu& LingZhangGuShuJu::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2etopicinvest_2eproto();
  return *default_instance_;
}

LingZhangGuShuJu* LingZhangGuShuJu::default_instance_ = NULL;

LingZhangGuShuJu* LingZhangGuShuJu::New(::google::protobuf::Arena* arena) const {
  LingZhangGuShuJu* n = new LingZhangGuShuJu;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LingZhangGuShuJu::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.LingZhangGuShuJu)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LingZhangGuShuJu, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LingZhangGuShuJu*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(zuixinjia_, zhangfu_);
    if (has_obj()) {
      obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_zhongwenjiancheng()) {
      zhongwenjiancheng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LingZhangGuShuJu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.LingZhangGuShuJu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.LingZhangGuShuJu.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ZhongWenJianCheng;
        break;
      }

      // optional string ZhongWenJianCheng = 2;
      case 2: {
        if (tag == 18) {
         parse_ZhongWenJianCheng:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zhongwenjiancheng()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->zhongwenjiancheng().data(), this->zhongwenjiancheng().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.LingZhangGuShuJu.ZhongWenJianCheng");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ZuiXinJia;
        break;
      }

      // optional int64 ZuiXinJia = 3;
      case 3: {
        if (tag == 24) {
         parse_ZuiXinJia:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &zuixinjia_)));
          set_has_zuixinjia();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ZhangFu;
        break;
      }

      // optional int64 ZhangFu = 4;
      case 4: {
        if (tag == 32) {
         parse_ZhangFu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &zhangfu_)));
          set_has_zhangfu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.LingZhangGuShuJu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.LingZhangGuShuJu)
  return false;
#undef DO_
}

void LingZhangGuShuJu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.LingZhangGuShuJu)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.LingZhangGuShuJu.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // optional string ZhongWenJianCheng = 2;
  if (has_zhongwenjiancheng()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zhongwenjiancheng().data(), this->zhongwenjiancheng().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.LingZhangGuShuJu.ZhongWenJianCheng");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zhongwenjiancheng(), output);
  }

  // optional int64 ZuiXinJia = 3;
  if (has_zuixinjia()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->zuixinjia(), output);
  }

  // optional int64 ZhangFu = 4;
  if (has_zhangfu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->zhangfu(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.LingZhangGuShuJu)
}

::google::protobuf::uint8* LingZhangGuShuJu::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.LingZhangGuShuJu)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.LingZhangGuShuJu.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // optional string ZhongWenJianCheng = 2;
  if (has_zhongwenjiancheng()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zhongwenjiancheng().data(), this->zhongwenjiancheng().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.LingZhangGuShuJu.ZhongWenJianCheng");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zhongwenjiancheng(), target);
  }

  // optional int64 ZuiXinJia = 3;
  if (has_zuixinjia()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->zuixinjia(), target);
  }

  // optional int64 ZhangFu = 4;
  if (has_zhangfu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->zhangfu(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.LingZhangGuShuJu)
  return target;
}

int LingZhangGuShuJu::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.LingZhangGuShuJu)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  if (_has_bits_[1 / 32] & 14u) {
    // optional string ZhongWenJianCheng = 2;
    if (has_zhongwenjiancheng()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->zhongwenjiancheng());
    }

    // optional int64 ZuiXinJia = 3;
    if (has_zuixinjia()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->zuixinjia());
    }

    // optional int64 ZhangFu = 4;
    if (has_zhangfu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->zhangfu());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LingZhangGuShuJu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.LingZhangGuShuJu)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LingZhangGuShuJu* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LingZhangGuShuJu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.LingZhangGuShuJu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.LingZhangGuShuJu)
    MergeFrom(*source);
  }
}

void LingZhangGuShuJu::MergeFrom(const LingZhangGuShuJu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.LingZhangGuShuJu)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
    if (from.has_zhongwenjiancheng()) {
      set_has_zhongwenjiancheng();
      zhongwenjiancheng_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zhongwenjiancheng_);
    }
    if (from.has_zuixinjia()) {
      set_zuixinjia(from.zuixinjia());
    }
    if (from.has_zhangfu()) {
      set_zhangfu(from.zhangfu());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LingZhangGuShuJu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.LingZhangGuShuJu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LingZhangGuShuJu::CopyFrom(const LingZhangGuShuJu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.LingZhangGuShuJu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LingZhangGuShuJu::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LingZhangGuShuJu::Swap(LingZhangGuShuJu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LingZhangGuShuJu::InternalSwap(LingZhangGuShuJu* other) {
  obj_.Swap(&other->obj_);
  zhongwenjiancheng_.Swap(&other->zhongwenjiancheng_);
  std::swap(zuixinjia_, other->zuixinjia_);
  std::swap(zhangfu_, other->zhangfu_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LingZhangGuShuJu::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LingZhangGuShuJu_descriptor_;
  metadata.reflection = LingZhangGuShuJu_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LingZhangGuShuJu

// required string Obj = 1;
bool LingZhangGuShuJu::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LingZhangGuShuJu::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void LingZhangGuShuJu::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void LingZhangGuShuJu::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& LingZhangGuShuJu::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.LingZhangGuShuJu.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LingZhangGuShuJu::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.LingZhangGuShuJu.Obj)
}
 void LingZhangGuShuJu::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.LingZhangGuShuJu.Obj)
}
 void LingZhangGuShuJu::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.LingZhangGuShuJu.Obj)
}
 ::std::string* LingZhangGuShuJu::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.LingZhangGuShuJu.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LingZhangGuShuJu::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.LingZhangGuShuJu.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LingZhangGuShuJu::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.LingZhangGuShuJu.Obj)
}

// optional string ZhongWenJianCheng = 2;
bool LingZhangGuShuJu::has_zhongwenjiancheng() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LingZhangGuShuJu::set_has_zhongwenjiancheng() {
  _has_bits_[0] |= 0x00000002u;
}
void LingZhangGuShuJu::clear_has_zhongwenjiancheng() {
  _has_bits_[0] &= ~0x00000002u;
}
void LingZhangGuShuJu::clear_zhongwenjiancheng() {
  zhongwenjiancheng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_zhongwenjiancheng();
}
 const ::std::string& LingZhangGuShuJu::zhongwenjiancheng() const {
  // @@protoc_insertion_point(field_get:dzhyun.LingZhangGuShuJu.ZhongWenJianCheng)
  return zhongwenjiancheng_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LingZhangGuShuJu::set_zhongwenjiancheng(const ::std::string& value) {
  set_has_zhongwenjiancheng();
  zhongwenjiancheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.LingZhangGuShuJu.ZhongWenJianCheng)
}
 void LingZhangGuShuJu::set_zhongwenjiancheng(const char* value) {
  set_has_zhongwenjiancheng();
  zhongwenjiancheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.LingZhangGuShuJu.ZhongWenJianCheng)
}
 void LingZhangGuShuJu::set_zhongwenjiancheng(const char* value, size_t size) {
  set_has_zhongwenjiancheng();
  zhongwenjiancheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.LingZhangGuShuJu.ZhongWenJianCheng)
}
 ::std::string* LingZhangGuShuJu::mutable_zhongwenjiancheng() {
  set_has_zhongwenjiancheng();
  // @@protoc_insertion_point(field_mutable:dzhyun.LingZhangGuShuJu.ZhongWenJianCheng)
  return zhongwenjiancheng_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LingZhangGuShuJu::release_zhongwenjiancheng() {
  // @@protoc_insertion_point(field_release:dzhyun.LingZhangGuShuJu.ZhongWenJianCheng)
  clear_has_zhongwenjiancheng();
  return zhongwenjiancheng_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LingZhangGuShuJu::set_allocated_zhongwenjiancheng(::std::string* zhongwenjiancheng) {
  if (zhongwenjiancheng != NULL) {
    set_has_zhongwenjiancheng();
  } else {
    clear_has_zhongwenjiancheng();
  }
  zhongwenjiancheng_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zhongwenjiancheng);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.LingZhangGuShuJu.ZhongWenJianCheng)
}

// optional int64 ZuiXinJia = 3;
bool LingZhangGuShuJu::has_zuixinjia() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LingZhangGuShuJu::set_has_zuixinjia() {
  _has_bits_[0] |= 0x00000004u;
}
void LingZhangGuShuJu::clear_has_zuixinjia() {
  _has_bits_[0] &= ~0x00000004u;
}
void LingZhangGuShuJu::clear_zuixinjia() {
  zuixinjia_ = GOOGLE_LONGLONG(0);
  clear_has_zuixinjia();
}
 ::google::protobuf::int64 LingZhangGuShuJu::zuixinjia() const {
  // @@protoc_insertion_point(field_get:dzhyun.LingZhangGuShuJu.ZuiXinJia)
  return zuixinjia_;
}
 void LingZhangGuShuJu::set_zuixinjia(::google::protobuf::int64 value) {
  set_has_zuixinjia();
  zuixinjia_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.LingZhangGuShuJu.ZuiXinJia)
}

// optional int64 ZhangFu = 4;
bool LingZhangGuShuJu::has_zhangfu() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LingZhangGuShuJu::set_has_zhangfu() {
  _has_bits_[0] |= 0x00000008u;
}
void LingZhangGuShuJu::clear_has_zhangfu() {
  _has_bits_[0] &= ~0x00000008u;
}
void LingZhangGuShuJu::clear_zhangfu() {
  zhangfu_ = GOOGLE_LONGLONG(0);
  clear_has_zhangfu();
}
 ::google::protobuf::int64 LingZhangGuShuJu::zhangfu() const {
  // @@protoc_insertion_point(field_get:dzhyun.LingZhangGuShuJu.ZhangFu)
  return zhangfu_;
}
 void LingZhangGuShuJu::set_zhangfu(::google::protobuf::int64 value) {
  set_has_zhangfu();
  zhangfu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.LingZhangGuShuJu.ZhangFu)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicInvestRank::kBianHaoFieldNumber;
const int TopicInvestRank::kShiFouReMenZhuTiFieldNumber;
const int TopicInvestRank::kRiPingJunZhangFuPaiMing14FieldNumber;
const int TopicInvestRank::kRiPingJunZhangFuPaiMing30FieldNumber;
const int TopicInvestRank::kRiReDuZhi14FieldNumber;
const int TopicInvestRank::kRiReDuZhi30FieldNumber;
const int TopicInvestRank::kRiReDuZhi10FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicInvestRank::TopicInvestRank()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.TopicInvestRank)
}

void TopicInvestRank::InitAsDefaultInstance() {
}

TopicInvestRank::TopicInvestRank(const TopicInvestRank& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.TopicInvestRank)
}

void TopicInvestRank::SharedCtor() {
  _cached_size_ = 0;
  bianhao_ = GOOGLE_LONGLONG(0);
  shifouremenzhuti_ = GOOGLE_LONGLONG(0);
  ripingjunzhangfupaiming14_ = GOOGLE_LONGLONG(0);
  ripingjunzhangfupaiming30_ = GOOGLE_LONGLONG(0);
  rireduzhi14_ = GOOGLE_LONGLONG(0);
  rireduzhi30_ = GOOGLE_LONGLONG(0);
  rireduzhi10_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TopicInvestRank::~TopicInvestRank() {
  // @@protoc_insertion_point(destructor:dzhyun.TopicInvestRank)
  SharedDtor();
}

void TopicInvestRank::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TopicInvestRank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopicInvestRank::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TopicInvestRank_descriptor_;
}

const TopicInvestRank& TopicInvestRank::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2etopicinvest_2eproto();
  return *default_instance_;
}

TopicInvestRank* TopicInvestRank::default_instance_ = NULL;

TopicInvestRank* TopicInvestRank::New(::google::protobuf::Arena* arena) const {
  TopicInvestRank* n = new TopicInvestRank;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopicInvestRank::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.TopicInvestRank)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TopicInvestRank, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TopicInvestRank*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(bianhao_, rireduzhi10_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TopicInvestRank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.TopicInvestRank)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 BianHao = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bianhao_)));
          set_has_bianhao();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ShiFouReMenZhuTi;
        break;
      }

      // optional int64 ShiFouReMenZhuTi = 2;
      case 2: {
        if (tag == 16) {
         parse_ShiFouReMenZhuTi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shifouremenzhuti_)));
          set_has_shifouremenzhuti();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RiPingJunZhangFuPaiMing14;
        break;
      }

      // optional int64 RiPingJunZhangFuPaiMing14 = 3;
      case 3: {
        if (tag == 24) {
         parse_RiPingJunZhangFuPaiMing14:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ripingjunzhangfupaiming14_)));
          set_has_ripingjunzhangfupaiming14();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_RiPingJunZhangFuPaiMing30;
        break;
      }

      // optional int64 RiPingJunZhangFuPaiMing30 = 4;
      case 4: {
        if (tag == 32) {
         parse_RiPingJunZhangFuPaiMing30:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ripingjunzhangfupaiming30_)));
          set_has_ripingjunzhangfupaiming30();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_RiReDuZhi14;
        break;
      }

      // optional int64 RiReDuZhi14 = 5;
      case 5: {
        if (tag == 40) {
         parse_RiReDuZhi14:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rireduzhi14_)));
          set_has_rireduzhi14();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_RiReDuZhi30;
        break;
      }

      // optional int64 RiReDuZhi30 = 6;
      case 6: {
        if (tag == 48) {
         parse_RiReDuZhi30:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rireduzhi30_)));
          set_has_rireduzhi30();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_RiReDuZhi10;
        break;
      }

      // optional int64 RiReDuZhi10 = 7;
      case 7: {
        if (tag == 56) {
         parse_RiReDuZhi10:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rireduzhi10_)));
          set_has_rireduzhi10();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.TopicInvestRank)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.TopicInvestRank)
  return false;
#undef DO_
}

void TopicInvestRank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.TopicInvestRank)
  // required int64 BianHao = 1;
  if (has_bianhao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->bianhao(), output);
  }

  // optional int64 ShiFouReMenZhuTi = 2;
  if (has_shifouremenzhuti()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->shifouremenzhuti(), output);
  }

  // optional int64 RiPingJunZhangFuPaiMing14 = 3;
  if (has_ripingjunzhangfupaiming14()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->ripingjunzhangfupaiming14(), output);
  }

  // optional int64 RiPingJunZhangFuPaiMing30 = 4;
  if (has_ripingjunzhangfupaiming30()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->ripingjunzhangfupaiming30(), output);
  }

  // optional int64 RiReDuZhi14 = 5;
  if (has_rireduzhi14()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->rireduzhi14(), output);
  }

  // optional int64 RiReDuZhi30 = 6;
  if (has_rireduzhi30()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->rireduzhi30(), output);
  }

  // optional int64 RiReDuZhi10 = 7;
  if (has_rireduzhi10()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->rireduzhi10(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.TopicInvestRank)
}

::google::protobuf::uint8* TopicInvestRank::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.TopicInvestRank)
  // required int64 BianHao = 1;
  if (has_bianhao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->bianhao(), target);
  }

  // optional int64 ShiFouReMenZhuTi = 2;
  if (has_shifouremenzhuti()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->shifouremenzhuti(), target);
  }

  // optional int64 RiPingJunZhangFuPaiMing14 = 3;
  if (has_ripingjunzhangfupaiming14()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->ripingjunzhangfupaiming14(), target);
  }

  // optional int64 RiPingJunZhangFuPaiMing30 = 4;
  if (has_ripingjunzhangfupaiming30()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->ripingjunzhangfupaiming30(), target);
  }

  // optional int64 RiReDuZhi14 = 5;
  if (has_rireduzhi14()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->rireduzhi14(), target);
  }

  // optional int64 RiReDuZhi30 = 6;
  if (has_rireduzhi30()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->rireduzhi30(), target);
  }

  // optional int64 RiReDuZhi10 = 7;
  if (has_rireduzhi10()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->rireduzhi10(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.TopicInvestRank)
  return target;
}

int TopicInvestRank::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.TopicInvestRank)
  int total_size = 0;

  // required int64 BianHao = 1;
  if (has_bianhao()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bianhao());
  }
  if (_has_bits_[1 / 32] & 126u) {
    // optional int64 ShiFouReMenZhuTi = 2;
    if (has_shifouremenzhuti()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shifouremenzhuti());
    }

    // optional int64 RiPingJunZhangFuPaiMing14 = 3;
    if (has_ripingjunzhangfupaiming14()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ripingjunzhangfupaiming14());
    }

    // optional int64 RiPingJunZhangFuPaiMing30 = 4;
    if (has_ripingjunzhangfupaiming30()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ripingjunzhangfupaiming30());
    }

    // optional int64 RiReDuZhi14 = 5;
    if (has_rireduzhi14()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rireduzhi14());
    }

    // optional int64 RiReDuZhi30 = 6;
    if (has_rireduzhi30()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rireduzhi30());
    }

    // optional int64 RiReDuZhi10 = 7;
    if (has_rireduzhi10()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rireduzhi10());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TopicInvestRank::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.TopicInvestRank)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TopicInvestRank* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicInvestRank>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.TopicInvestRank)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.TopicInvestRank)
    MergeFrom(*source);
  }
}

void TopicInvestRank::MergeFrom(const TopicInvestRank& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.TopicInvestRank)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bianhao()) {
      set_bianhao(from.bianhao());
    }
    if (from.has_shifouremenzhuti()) {
      set_shifouremenzhuti(from.shifouremenzhuti());
    }
    if (from.has_ripingjunzhangfupaiming14()) {
      set_ripingjunzhangfupaiming14(from.ripingjunzhangfupaiming14());
    }
    if (from.has_ripingjunzhangfupaiming30()) {
      set_ripingjunzhangfupaiming30(from.ripingjunzhangfupaiming30());
    }
    if (from.has_rireduzhi14()) {
      set_rireduzhi14(from.rireduzhi14());
    }
    if (from.has_rireduzhi30()) {
      set_rireduzhi30(from.rireduzhi30());
    }
    if (from.has_rireduzhi10()) {
      set_rireduzhi10(from.rireduzhi10());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TopicInvestRank::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.TopicInvestRank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicInvestRank::CopyFrom(const TopicInvestRank& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.TopicInvestRank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicInvestRank::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TopicInvestRank::Swap(TopicInvestRank* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicInvestRank::InternalSwap(TopicInvestRank* other) {
  std::swap(bianhao_, other->bianhao_);
  std::swap(shifouremenzhuti_, other->shifouremenzhuti_);
  std::swap(ripingjunzhangfupaiming14_, other->ripingjunzhangfupaiming14_);
  std::swap(ripingjunzhangfupaiming30_, other->ripingjunzhangfupaiming30_);
  std::swap(rireduzhi14_, other->rireduzhi14_);
  std::swap(rireduzhi30_, other->rireduzhi30_);
  std::swap(rireduzhi10_, other->rireduzhi10_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TopicInvestRank::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TopicInvestRank_descriptor_;
  metadata.reflection = TopicInvestRank_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TopicInvestRank

// required int64 BianHao = 1;
bool TopicInvestRank::has_bianhao() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TopicInvestRank::set_has_bianhao() {
  _has_bits_[0] |= 0x00000001u;
}
void TopicInvestRank::clear_has_bianhao() {
  _has_bits_[0] &= ~0x00000001u;
}
void TopicInvestRank::clear_bianhao() {
  bianhao_ = GOOGLE_LONGLONG(0);
  clear_has_bianhao();
}
 ::google::protobuf::int64 TopicInvestRank::bianhao() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvestRank.BianHao)
  return bianhao_;
}
 void TopicInvestRank::set_bianhao(::google::protobuf::int64 value) {
  set_has_bianhao();
  bianhao_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvestRank.BianHao)
}

// optional int64 ShiFouReMenZhuTi = 2;
bool TopicInvestRank::has_shifouremenzhuti() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TopicInvestRank::set_has_shifouremenzhuti() {
  _has_bits_[0] |= 0x00000002u;
}
void TopicInvestRank::clear_has_shifouremenzhuti() {
  _has_bits_[0] &= ~0x00000002u;
}
void TopicInvestRank::clear_shifouremenzhuti() {
  shifouremenzhuti_ = GOOGLE_LONGLONG(0);
  clear_has_shifouremenzhuti();
}
 ::google::protobuf::int64 TopicInvestRank::shifouremenzhuti() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvestRank.ShiFouReMenZhuTi)
  return shifouremenzhuti_;
}
 void TopicInvestRank::set_shifouremenzhuti(::google::protobuf::int64 value) {
  set_has_shifouremenzhuti();
  shifouremenzhuti_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvestRank.ShiFouReMenZhuTi)
}

// optional int64 RiPingJunZhangFuPaiMing14 = 3;
bool TopicInvestRank::has_ripingjunzhangfupaiming14() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TopicInvestRank::set_has_ripingjunzhangfupaiming14() {
  _has_bits_[0] |= 0x00000004u;
}
void TopicInvestRank::clear_has_ripingjunzhangfupaiming14() {
  _has_bits_[0] &= ~0x00000004u;
}
void TopicInvestRank::clear_ripingjunzhangfupaiming14() {
  ripingjunzhangfupaiming14_ = GOOGLE_LONGLONG(0);
  clear_has_ripingjunzhangfupaiming14();
}
 ::google::protobuf::int64 TopicInvestRank::ripingjunzhangfupaiming14() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvestRank.RiPingJunZhangFuPaiMing14)
  return ripingjunzhangfupaiming14_;
}
 void TopicInvestRank::set_ripingjunzhangfupaiming14(::google::protobuf::int64 value) {
  set_has_ripingjunzhangfupaiming14();
  ripingjunzhangfupaiming14_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvestRank.RiPingJunZhangFuPaiMing14)
}

// optional int64 RiPingJunZhangFuPaiMing30 = 4;
bool TopicInvestRank::has_ripingjunzhangfupaiming30() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TopicInvestRank::set_has_ripingjunzhangfupaiming30() {
  _has_bits_[0] |= 0x00000008u;
}
void TopicInvestRank::clear_has_ripingjunzhangfupaiming30() {
  _has_bits_[0] &= ~0x00000008u;
}
void TopicInvestRank::clear_ripingjunzhangfupaiming30() {
  ripingjunzhangfupaiming30_ = GOOGLE_LONGLONG(0);
  clear_has_ripingjunzhangfupaiming30();
}
 ::google::protobuf::int64 TopicInvestRank::ripingjunzhangfupaiming30() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvestRank.RiPingJunZhangFuPaiMing30)
  return ripingjunzhangfupaiming30_;
}
 void TopicInvestRank::set_ripingjunzhangfupaiming30(::google::protobuf::int64 value) {
  set_has_ripingjunzhangfupaiming30();
  ripingjunzhangfupaiming30_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvestRank.RiPingJunZhangFuPaiMing30)
}

// optional int64 RiReDuZhi14 = 5;
bool TopicInvestRank::has_rireduzhi14() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TopicInvestRank::set_has_rireduzhi14() {
  _has_bits_[0] |= 0x00000010u;
}
void TopicInvestRank::clear_has_rireduzhi14() {
  _has_bits_[0] &= ~0x00000010u;
}
void TopicInvestRank::clear_rireduzhi14() {
  rireduzhi14_ = GOOGLE_LONGLONG(0);
  clear_has_rireduzhi14();
}
 ::google::protobuf::int64 TopicInvestRank::rireduzhi14() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvestRank.RiReDuZhi14)
  return rireduzhi14_;
}
 void TopicInvestRank::set_rireduzhi14(::google::protobuf::int64 value) {
  set_has_rireduzhi14();
  rireduzhi14_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvestRank.RiReDuZhi14)
}

// optional int64 RiReDuZhi30 = 6;
bool TopicInvestRank::has_rireduzhi30() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TopicInvestRank::set_has_rireduzhi30() {
  _has_bits_[0] |= 0x00000020u;
}
void TopicInvestRank::clear_has_rireduzhi30() {
  _has_bits_[0] &= ~0x00000020u;
}
void TopicInvestRank::clear_rireduzhi30() {
  rireduzhi30_ = GOOGLE_LONGLONG(0);
  clear_has_rireduzhi30();
}
 ::google::protobuf::int64 TopicInvestRank::rireduzhi30() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvestRank.RiReDuZhi30)
  return rireduzhi30_;
}
 void TopicInvestRank::set_rireduzhi30(::google::protobuf::int64 value) {
  set_has_rireduzhi30();
  rireduzhi30_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvestRank.RiReDuZhi30)
}

// optional int64 RiReDuZhi10 = 7;
bool TopicInvestRank::has_rireduzhi10() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TopicInvestRank::set_has_rireduzhi10() {
  _has_bits_[0] |= 0x00000040u;
}
void TopicInvestRank::clear_has_rireduzhi10() {
  _has_bits_[0] &= ~0x00000040u;
}
void TopicInvestRank::clear_rireduzhi10() {
  rireduzhi10_ = GOOGLE_LONGLONG(0);
  clear_has_rireduzhi10();
}
 ::google::protobuf::int64 TopicInvestRank::rireduzhi10() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvestRank.RiReDuZhi10)
  return rireduzhi10_;
}
 void TopicInvestRank::set_rireduzhi10(::google::protobuf::int64 value) {
  set_has_rireduzhi10();
  rireduzhi10_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvestRank.RiReDuZhi10)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicInvest::kBianHaoFieldNumber;
const int TopicInvest::kMingChengFieldNumber;
const int TopicInvest::kShiJianFieldNumber;
const int TopicInvest::kZhangFuFieldNumber;
const int TopicInvest::kLiangBiFieldNumber;
const int TopicInvest::kHuanShouFieldNumber;
const int TopicInvest::kShangZhangJiaShuFieldNumber;
const int TopicInvest::kPingPanJiaShuFieldNumber;
const int TopicInvest::kXiaDieJiaShuFieldNumber;
const int TopicInvest::kLingZhangGuFieldNumber;
const int TopicInvest::kShiFouReMenZhuTiFieldNumber;
const int TopicInvest::kRiPingJunZhangFuPaiMing14FieldNumber;
const int TopicInvest::kRiPingJunZhangFuPaiMing30FieldNumber;
const int TopicInvest::kRiReDuZhi14FieldNumber;
const int TopicInvest::kRiReDuZhi30FieldNumber;
const int TopicInvest::kRiReDuZhi10FieldNumber;
const int TopicInvest::kGeGuShuFieldNumber;
const int TopicInvest::kDangYueZhangFuFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicInvest::TopicInvest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.TopicInvest)
}

void TopicInvest::InitAsDefaultInstance() {
  lingzhanggu_ = const_cast< ::dzhyun::LingZhangGuShuJu*>(&::dzhyun::LingZhangGuShuJu::default_instance());
}

TopicInvest::TopicInvest(const TopicInvest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.TopicInvest)
}

void TopicInvest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bianhao_ = GOOGLE_LONGLONG(0);
  mingcheng_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shijian_ = GOOGLE_LONGLONG(0);
  zhangfu_ = GOOGLE_LONGLONG(0);
  liangbi_ = GOOGLE_LONGLONG(0);
  huanshou_ = GOOGLE_LONGLONG(0);
  shangzhangjiashu_ = GOOGLE_LONGLONG(0);
  pingpanjiashu_ = GOOGLE_LONGLONG(0);
  xiadiejiashu_ = GOOGLE_LONGLONG(0);
  lingzhanggu_ = NULL;
  shifouremenzhuti_ = GOOGLE_LONGLONG(0);
  ripingjunzhangfupaiming14_ = GOOGLE_LONGLONG(0);
  ripingjunzhangfupaiming30_ = GOOGLE_LONGLONG(0);
  rireduzhi14_ = GOOGLE_LONGLONG(0);
  rireduzhi30_ = GOOGLE_LONGLONG(0);
  rireduzhi10_ = GOOGLE_LONGLONG(0);
  gegushu_ = GOOGLE_LONGLONG(0);
  dangyuezhangfu_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TopicInvest::~TopicInvest() {
  // @@protoc_insertion_point(destructor:dzhyun.TopicInvest)
  SharedDtor();
}

void TopicInvest::SharedDtor() {
  mingcheng_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete lingzhanggu_;
  }
}

void TopicInvest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopicInvest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TopicInvest_descriptor_;
}

const TopicInvest& TopicInvest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2etopicinvest_2eproto();
  return *default_instance_;
}

TopicInvest* TopicInvest::default_instance_ = NULL;

TopicInvest* TopicInvest::New(::google::protobuf::Arena* arena) const {
  TopicInvest* n = new TopicInvest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopicInvest::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.TopicInvest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TopicInvest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TopicInvest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(shijian_, pingpanjiashu_);
    bianhao_ = GOOGLE_LONGLONG(0);
    if (has_mingcheng()) {
      mingcheng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(shifouremenzhuti_, rireduzhi10_);
    xiadiejiashu_ = GOOGLE_LONGLONG(0);
    if (has_lingzhanggu()) {
      if (lingzhanggu_ != NULL) lingzhanggu_->::dzhyun::LingZhangGuShuJu::Clear();
    }
  }
  ZR_(gegushu_, dangyuezhangfu_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TopicInvest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.TopicInvest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 BianHao = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bianhao_)));
          set_has_bianhao();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_MingCheng;
        break;
      }

      // optional string MingCheng = 2;
      case 2: {
        if (tag == 18) {
         parse_MingCheng:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mingcheng()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mingcheng().data(), this->mingcheng().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.TopicInvest.MingCheng");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ShiJian;
        break;
      }

      // optional int64 ShiJian = 3;
      case 3: {
        if (tag == 24) {
         parse_ShiJian:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shijian_)));
          set_has_shijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ZhangFu;
        break;
      }

      // optional int64 ZhangFu = 4;
      case 4: {
        if (tag == 32) {
         parse_ZhangFu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &zhangfu_)));
          set_has_zhangfu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_LiangBi;
        break;
      }

      // optional int64 LiangBi = 5;
      case 5: {
        if (tag == 40) {
         parse_LiangBi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &liangbi_)));
          set_has_liangbi();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_HuanShou;
        break;
      }

      // optional int64 HuanShou = 6;
      case 6: {
        if (tag == 48) {
         parse_HuanShou:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &huanshou_)));
          set_has_huanshou();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_ShangZhangJiaShu;
        break;
      }

      // optional int64 ShangZhangJiaShu = 7;
      case 7: {
        if (tag == 56) {
         parse_ShangZhangJiaShu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shangzhangjiashu_)));
          set_has_shangzhangjiashu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_PingPanJiaShu;
        break;
      }

      // optional int64 PingPanJiaShu = 8;
      case 8: {
        if (tag == 64) {
         parse_PingPanJiaShu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pingpanjiashu_)));
          set_has_pingpanjiashu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_XiaDieJiaShu;
        break;
      }

      // optional int64 XiaDieJiaShu = 9;
      case 9: {
        if (tag == 72) {
         parse_XiaDieJiaShu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &xiadiejiashu_)));
          set_has_xiadiejiashu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_LingZhangGu;
        break;
      }

      // optional .dzhyun.LingZhangGuShuJu LingZhangGu = 10;
      case 10: {
        if (tag == 82) {
         parse_LingZhangGu:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lingzhanggu()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_ShiFouReMenZhuTi;
        break;
      }

      // optional int64 ShiFouReMenZhuTi = 11;
      case 11: {
        if (tag == 88) {
         parse_ShiFouReMenZhuTi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shifouremenzhuti_)));
          set_has_shifouremenzhuti();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_RiPingJunZhangFuPaiMing14;
        break;
      }

      // optional int64 RiPingJunZhangFuPaiMing14 = 12;
      case 12: {
        if (tag == 96) {
         parse_RiPingJunZhangFuPaiMing14:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ripingjunzhangfupaiming14_)));
          set_has_ripingjunzhangfupaiming14();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_RiPingJunZhangFuPaiMing30;
        break;
      }

      // optional int64 RiPingJunZhangFuPaiMing30 = 13;
      case 13: {
        if (tag == 104) {
         parse_RiPingJunZhangFuPaiMing30:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ripingjunzhangfupaiming30_)));
          set_has_ripingjunzhangfupaiming30();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_RiReDuZhi14;
        break;
      }

      // optional int64 RiReDuZhi14 = 14;
      case 14: {
        if (tag == 112) {
         parse_RiReDuZhi14:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rireduzhi14_)));
          set_has_rireduzhi14();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_RiReDuZhi30;
        break;
      }

      // optional int64 RiReDuZhi30 = 15;
      case 15: {
        if (tag == 120) {
         parse_RiReDuZhi30:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rireduzhi30_)));
          set_has_rireduzhi30();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_RiReDuZhi10;
        break;
      }

      // optional int64 RiReDuZhi10 = 16;
      case 16: {
        if (tag == 128) {
         parse_RiReDuZhi10:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rireduzhi10_)));
          set_has_rireduzhi10();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_GeGuShu;
        break;
      }

      // optional int64 GeGuShu = 17;
      case 17: {
        if (tag == 136) {
         parse_GeGuShu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gegushu_)));
          set_has_gegushu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_DangYueZhangFu;
        break;
      }

      // optional int64 DangYueZhangFu = 18;
      case 18: {
        if (tag == 144) {
         parse_DangYueZhangFu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dangyuezhangfu_)));
          set_has_dangyuezhangfu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.TopicInvest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.TopicInvest)
  return false;
#undef DO_
}

void TopicInvest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.TopicInvest)
  // required int64 BianHao = 1;
  if (has_bianhao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->bianhao(), output);
  }

  // optional string MingCheng = 2;
  if (has_mingcheng()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mingcheng().data(), this->mingcheng().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.TopicInvest.MingCheng");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mingcheng(), output);
  }

  // optional int64 ShiJian = 3;
  if (has_shijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->shijian(), output);
  }

  // optional int64 ZhangFu = 4;
  if (has_zhangfu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->zhangfu(), output);
  }

  // optional int64 LiangBi = 5;
  if (has_liangbi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->liangbi(), output);
  }

  // optional int64 HuanShou = 6;
  if (has_huanshou()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->huanshou(), output);
  }

  // optional int64 ShangZhangJiaShu = 7;
  if (has_shangzhangjiashu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->shangzhangjiashu(), output);
  }

  // optional int64 PingPanJiaShu = 8;
  if (has_pingpanjiashu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->pingpanjiashu(), output);
  }

  // optional int64 XiaDieJiaShu = 9;
  if (has_xiadiejiashu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->xiadiejiashu(), output);
  }

  // optional .dzhyun.LingZhangGuShuJu LingZhangGu = 10;
  if (has_lingzhanggu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->lingzhanggu_, output);
  }

  // optional int64 ShiFouReMenZhuTi = 11;
  if (has_shifouremenzhuti()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->shifouremenzhuti(), output);
  }

  // optional int64 RiPingJunZhangFuPaiMing14 = 12;
  if (has_ripingjunzhangfupaiming14()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->ripingjunzhangfupaiming14(), output);
  }

  // optional int64 RiPingJunZhangFuPaiMing30 = 13;
  if (has_ripingjunzhangfupaiming30()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->ripingjunzhangfupaiming30(), output);
  }

  // optional int64 RiReDuZhi14 = 14;
  if (has_rireduzhi14()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->rireduzhi14(), output);
  }

  // optional int64 RiReDuZhi30 = 15;
  if (has_rireduzhi30()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->rireduzhi30(), output);
  }

  // optional int64 RiReDuZhi10 = 16;
  if (has_rireduzhi10()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->rireduzhi10(), output);
  }

  // optional int64 GeGuShu = 17;
  if (has_gegushu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->gegushu(), output);
  }

  // optional int64 DangYueZhangFu = 18;
  if (has_dangyuezhangfu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->dangyuezhangfu(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.TopicInvest)
}

::google::protobuf::uint8* TopicInvest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.TopicInvest)
  // required int64 BianHao = 1;
  if (has_bianhao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->bianhao(), target);
  }

  // optional string MingCheng = 2;
  if (has_mingcheng()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mingcheng().data(), this->mingcheng().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.TopicInvest.MingCheng");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mingcheng(), target);
  }

  // optional int64 ShiJian = 3;
  if (has_shijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->shijian(), target);
  }

  // optional int64 ZhangFu = 4;
  if (has_zhangfu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->zhangfu(), target);
  }

  // optional int64 LiangBi = 5;
  if (has_liangbi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->liangbi(), target);
  }

  // optional int64 HuanShou = 6;
  if (has_huanshou()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->huanshou(), target);
  }

  // optional int64 ShangZhangJiaShu = 7;
  if (has_shangzhangjiashu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->shangzhangjiashu(), target);
  }

  // optional int64 PingPanJiaShu = 8;
  if (has_pingpanjiashu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->pingpanjiashu(), target);
  }

  // optional int64 XiaDieJiaShu = 9;
  if (has_xiadiejiashu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->xiadiejiashu(), target);
  }

  // optional .dzhyun.LingZhangGuShuJu LingZhangGu = 10;
  if (has_lingzhanggu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, *this->lingzhanggu_, target);
  }

  // optional int64 ShiFouReMenZhuTi = 11;
  if (has_shifouremenzhuti()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->shifouremenzhuti(), target);
  }

  // optional int64 RiPingJunZhangFuPaiMing14 = 12;
  if (has_ripingjunzhangfupaiming14()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->ripingjunzhangfupaiming14(), target);
  }

  // optional int64 RiPingJunZhangFuPaiMing30 = 13;
  if (has_ripingjunzhangfupaiming30()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->ripingjunzhangfupaiming30(), target);
  }

  // optional int64 RiReDuZhi14 = 14;
  if (has_rireduzhi14()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->rireduzhi14(), target);
  }

  // optional int64 RiReDuZhi30 = 15;
  if (has_rireduzhi30()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->rireduzhi30(), target);
  }

  // optional int64 RiReDuZhi10 = 16;
  if (has_rireduzhi10()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->rireduzhi10(), target);
  }

  // optional int64 GeGuShu = 17;
  if (has_gegushu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->gegushu(), target);
  }

  // optional int64 DangYueZhangFu = 18;
  if (has_dangyuezhangfu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->dangyuezhangfu(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.TopicInvest)
  return target;
}

int TopicInvest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.TopicInvest)
  int total_size = 0;

  // required int64 BianHao = 1;
  if (has_bianhao()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bianhao());
  }
  if (_has_bits_[1 / 32] & 254u) {
    // optional string MingCheng = 2;
    if (has_mingcheng()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mingcheng());
    }

    // optional int64 ShiJian = 3;
    if (has_shijian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shijian());
    }

    // optional int64 ZhangFu = 4;
    if (has_zhangfu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->zhangfu());
    }

    // optional int64 LiangBi = 5;
    if (has_liangbi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->liangbi());
    }

    // optional int64 HuanShou = 6;
    if (has_huanshou()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->huanshou());
    }

    // optional int64 ShangZhangJiaShu = 7;
    if (has_shangzhangjiashu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shangzhangjiashu());
    }

    // optional int64 PingPanJiaShu = 8;
    if (has_pingpanjiashu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pingpanjiashu());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int64 XiaDieJiaShu = 9;
    if (has_xiadiejiashu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->xiadiejiashu());
    }

    // optional .dzhyun.LingZhangGuShuJu LingZhangGu = 10;
    if (has_lingzhanggu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->lingzhanggu_);
    }

    // optional int64 ShiFouReMenZhuTi = 11;
    if (has_shifouremenzhuti()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shifouremenzhuti());
    }

    // optional int64 RiPingJunZhangFuPaiMing14 = 12;
    if (has_ripingjunzhangfupaiming14()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ripingjunzhangfupaiming14());
    }

    // optional int64 RiPingJunZhangFuPaiMing30 = 13;
    if (has_ripingjunzhangfupaiming30()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ripingjunzhangfupaiming30());
    }

    // optional int64 RiReDuZhi14 = 14;
    if (has_rireduzhi14()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rireduzhi14());
    }

    // optional int64 RiReDuZhi30 = 15;
    if (has_rireduzhi30()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rireduzhi30());
    }

    // optional int64 RiReDuZhi10 = 16;
    if (has_rireduzhi10()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rireduzhi10());
    }

  }
  if (_has_bits_[16 / 32] & 196608u) {
    // optional int64 GeGuShu = 17;
    if (has_gegushu()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gegushu());
    }

    // optional int64 DangYueZhangFu = 18;
    if (has_dangyuezhangfu()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dangyuezhangfu());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TopicInvest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.TopicInvest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TopicInvest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicInvest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.TopicInvest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.TopicInvest)
    MergeFrom(*source);
  }
}

void TopicInvest::MergeFrom(const TopicInvest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.TopicInvest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bianhao()) {
      set_bianhao(from.bianhao());
    }
    if (from.has_mingcheng()) {
      set_has_mingcheng();
      mingcheng_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mingcheng_);
    }
    if (from.has_shijian()) {
      set_shijian(from.shijian());
    }
    if (from.has_zhangfu()) {
      set_zhangfu(from.zhangfu());
    }
    if (from.has_liangbi()) {
      set_liangbi(from.liangbi());
    }
    if (from.has_huanshou()) {
      set_huanshou(from.huanshou());
    }
    if (from.has_shangzhangjiashu()) {
      set_shangzhangjiashu(from.shangzhangjiashu());
    }
    if (from.has_pingpanjiashu()) {
      set_pingpanjiashu(from.pingpanjiashu());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_xiadiejiashu()) {
      set_xiadiejiashu(from.xiadiejiashu());
    }
    if (from.has_lingzhanggu()) {
      mutable_lingzhanggu()->::dzhyun::LingZhangGuShuJu::MergeFrom(from.lingzhanggu());
    }
    if (from.has_shifouremenzhuti()) {
      set_shifouremenzhuti(from.shifouremenzhuti());
    }
    if (from.has_ripingjunzhangfupaiming14()) {
      set_ripingjunzhangfupaiming14(from.ripingjunzhangfupaiming14());
    }
    if (from.has_ripingjunzhangfupaiming30()) {
      set_ripingjunzhangfupaiming30(from.ripingjunzhangfupaiming30());
    }
    if (from.has_rireduzhi14()) {
      set_rireduzhi14(from.rireduzhi14());
    }
    if (from.has_rireduzhi30()) {
      set_rireduzhi30(from.rireduzhi30());
    }
    if (from.has_rireduzhi10()) {
      set_rireduzhi10(from.rireduzhi10());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_gegushu()) {
      set_gegushu(from.gegushu());
    }
    if (from.has_dangyuezhangfu()) {
      set_dangyuezhangfu(from.dangyuezhangfu());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TopicInvest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.TopicInvest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicInvest::CopyFrom(const TopicInvest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.TopicInvest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicInvest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_lingzhanggu()) {
    if (!this->lingzhanggu_->IsInitialized()) return false;
  }
  return true;
}

void TopicInvest::Swap(TopicInvest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicInvest::InternalSwap(TopicInvest* other) {
  std::swap(bianhao_, other->bianhao_);
  mingcheng_.Swap(&other->mingcheng_);
  std::swap(shijian_, other->shijian_);
  std::swap(zhangfu_, other->zhangfu_);
  std::swap(liangbi_, other->liangbi_);
  std::swap(huanshou_, other->huanshou_);
  std::swap(shangzhangjiashu_, other->shangzhangjiashu_);
  std::swap(pingpanjiashu_, other->pingpanjiashu_);
  std::swap(xiadiejiashu_, other->xiadiejiashu_);
  std::swap(lingzhanggu_, other->lingzhanggu_);
  std::swap(shifouremenzhuti_, other->shifouremenzhuti_);
  std::swap(ripingjunzhangfupaiming14_, other->ripingjunzhangfupaiming14_);
  std::swap(ripingjunzhangfupaiming30_, other->ripingjunzhangfupaiming30_);
  std::swap(rireduzhi14_, other->rireduzhi14_);
  std::swap(rireduzhi30_, other->rireduzhi30_);
  std::swap(rireduzhi10_, other->rireduzhi10_);
  std::swap(gegushu_, other->gegushu_);
  std::swap(dangyuezhangfu_, other->dangyuezhangfu_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TopicInvest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TopicInvest_descriptor_;
  metadata.reflection = TopicInvest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TopicInvest

// required int64 BianHao = 1;
bool TopicInvest::has_bianhao() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TopicInvest::set_has_bianhao() {
  _has_bits_[0] |= 0x00000001u;
}
void TopicInvest::clear_has_bianhao() {
  _has_bits_[0] &= ~0x00000001u;
}
void TopicInvest::clear_bianhao() {
  bianhao_ = GOOGLE_LONGLONG(0);
  clear_has_bianhao();
}
 ::google::protobuf::int64 TopicInvest::bianhao() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.BianHao)
  return bianhao_;
}
 void TopicInvest::set_bianhao(::google::protobuf::int64 value) {
  set_has_bianhao();
  bianhao_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.BianHao)
}

// optional string MingCheng = 2;
bool TopicInvest::has_mingcheng() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TopicInvest::set_has_mingcheng() {
  _has_bits_[0] |= 0x00000002u;
}
void TopicInvest::clear_has_mingcheng() {
  _has_bits_[0] &= ~0x00000002u;
}
void TopicInvest::clear_mingcheng() {
  mingcheng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mingcheng();
}
 const ::std::string& TopicInvest::mingcheng() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.MingCheng)
  return mingcheng_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TopicInvest::set_mingcheng(const ::std::string& value) {
  set_has_mingcheng();
  mingcheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.MingCheng)
}
 void TopicInvest::set_mingcheng(const char* value) {
  set_has_mingcheng();
  mingcheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.TopicInvest.MingCheng)
}
 void TopicInvest::set_mingcheng(const char* value, size_t size) {
  set_has_mingcheng();
  mingcheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.TopicInvest.MingCheng)
}
 ::std::string* TopicInvest::mutable_mingcheng() {
  set_has_mingcheng();
  // @@protoc_insertion_point(field_mutable:dzhyun.TopicInvest.MingCheng)
  return mingcheng_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TopicInvest::release_mingcheng() {
  // @@protoc_insertion_point(field_release:dzhyun.TopicInvest.MingCheng)
  clear_has_mingcheng();
  return mingcheng_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TopicInvest::set_allocated_mingcheng(::std::string* mingcheng) {
  if (mingcheng != NULL) {
    set_has_mingcheng();
  } else {
    clear_has_mingcheng();
  }
  mingcheng_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mingcheng);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.TopicInvest.MingCheng)
}

// optional int64 ShiJian = 3;
bool TopicInvest::has_shijian() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TopicInvest::set_has_shijian() {
  _has_bits_[0] |= 0x00000004u;
}
void TopicInvest::clear_has_shijian() {
  _has_bits_[0] &= ~0x00000004u;
}
void TopicInvest::clear_shijian() {
  shijian_ = GOOGLE_LONGLONG(0);
  clear_has_shijian();
}
 ::google::protobuf::int64 TopicInvest::shijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.ShiJian)
  return shijian_;
}
 void TopicInvest::set_shijian(::google::protobuf::int64 value) {
  set_has_shijian();
  shijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.ShiJian)
}

// optional int64 ZhangFu = 4;
bool TopicInvest::has_zhangfu() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TopicInvest::set_has_zhangfu() {
  _has_bits_[0] |= 0x00000008u;
}
void TopicInvest::clear_has_zhangfu() {
  _has_bits_[0] &= ~0x00000008u;
}
void TopicInvest::clear_zhangfu() {
  zhangfu_ = GOOGLE_LONGLONG(0);
  clear_has_zhangfu();
}
 ::google::protobuf::int64 TopicInvest::zhangfu() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.ZhangFu)
  return zhangfu_;
}
 void TopicInvest::set_zhangfu(::google::protobuf::int64 value) {
  set_has_zhangfu();
  zhangfu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.ZhangFu)
}

// optional int64 LiangBi = 5;
bool TopicInvest::has_liangbi() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TopicInvest::set_has_liangbi() {
  _has_bits_[0] |= 0x00000010u;
}
void TopicInvest::clear_has_liangbi() {
  _has_bits_[0] &= ~0x00000010u;
}
void TopicInvest::clear_liangbi() {
  liangbi_ = GOOGLE_LONGLONG(0);
  clear_has_liangbi();
}
 ::google::protobuf::int64 TopicInvest::liangbi() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.LiangBi)
  return liangbi_;
}
 void TopicInvest::set_liangbi(::google::protobuf::int64 value) {
  set_has_liangbi();
  liangbi_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.LiangBi)
}

// optional int64 HuanShou = 6;
bool TopicInvest::has_huanshou() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TopicInvest::set_has_huanshou() {
  _has_bits_[0] |= 0x00000020u;
}
void TopicInvest::clear_has_huanshou() {
  _has_bits_[0] &= ~0x00000020u;
}
void TopicInvest::clear_huanshou() {
  huanshou_ = GOOGLE_LONGLONG(0);
  clear_has_huanshou();
}
 ::google::protobuf::int64 TopicInvest::huanshou() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.HuanShou)
  return huanshou_;
}
 void TopicInvest::set_huanshou(::google::protobuf::int64 value) {
  set_has_huanshou();
  huanshou_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.HuanShou)
}

// optional int64 ShangZhangJiaShu = 7;
bool TopicInvest::has_shangzhangjiashu() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TopicInvest::set_has_shangzhangjiashu() {
  _has_bits_[0] |= 0x00000040u;
}
void TopicInvest::clear_has_shangzhangjiashu() {
  _has_bits_[0] &= ~0x00000040u;
}
void TopicInvest::clear_shangzhangjiashu() {
  shangzhangjiashu_ = GOOGLE_LONGLONG(0);
  clear_has_shangzhangjiashu();
}
 ::google::protobuf::int64 TopicInvest::shangzhangjiashu() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.ShangZhangJiaShu)
  return shangzhangjiashu_;
}
 void TopicInvest::set_shangzhangjiashu(::google::protobuf::int64 value) {
  set_has_shangzhangjiashu();
  shangzhangjiashu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.ShangZhangJiaShu)
}

// optional int64 PingPanJiaShu = 8;
bool TopicInvest::has_pingpanjiashu() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TopicInvest::set_has_pingpanjiashu() {
  _has_bits_[0] |= 0x00000080u;
}
void TopicInvest::clear_has_pingpanjiashu() {
  _has_bits_[0] &= ~0x00000080u;
}
void TopicInvest::clear_pingpanjiashu() {
  pingpanjiashu_ = GOOGLE_LONGLONG(0);
  clear_has_pingpanjiashu();
}
 ::google::protobuf::int64 TopicInvest::pingpanjiashu() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.PingPanJiaShu)
  return pingpanjiashu_;
}
 void TopicInvest::set_pingpanjiashu(::google::protobuf::int64 value) {
  set_has_pingpanjiashu();
  pingpanjiashu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.PingPanJiaShu)
}

// optional int64 XiaDieJiaShu = 9;
bool TopicInvest::has_xiadiejiashu() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void TopicInvest::set_has_xiadiejiashu() {
  _has_bits_[0] |= 0x00000100u;
}
void TopicInvest::clear_has_xiadiejiashu() {
  _has_bits_[0] &= ~0x00000100u;
}
void TopicInvest::clear_xiadiejiashu() {
  xiadiejiashu_ = GOOGLE_LONGLONG(0);
  clear_has_xiadiejiashu();
}
 ::google::protobuf::int64 TopicInvest::xiadiejiashu() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.XiaDieJiaShu)
  return xiadiejiashu_;
}
 void TopicInvest::set_xiadiejiashu(::google::protobuf::int64 value) {
  set_has_xiadiejiashu();
  xiadiejiashu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.XiaDieJiaShu)
}

// optional .dzhyun.LingZhangGuShuJu LingZhangGu = 10;
bool TopicInvest::has_lingzhanggu() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void TopicInvest::set_has_lingzhanggu() {
  _has_bits_[0] |= 0x00000200u;
}
void TopicInvest::clear_has_lingzhanggu() {
  _has_bits_[0] &= ~0x00000200u;
}
void TopicInvest::clear_lingzhanggu() {
  if (lingzhanggu_ != NULL) lingzhanggu_->::dzhyun::LingZhangGuShuJu::Clear();
  clear_has_lingzhanggu();
}
const ::dzhyun::LingZhangGuShuJu& TopicInvest::lingzhanggu() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.LingZhangGu)
  return lingzhanggu_ != NULL ? *lingzhanggu_ : *default_instance_->lingzhanggu_;
}
::dzhyun::LingZhangGuShuJu* TopicInvest::mutable_lingzhanggu() {
  set_has_lingzhanggu();
  if (lingzhanggu_ == NULL) {
    lingzhanggu_ = new ::dzhyun::LingZhangGuShuJu;
  }
  // @@protoc_insertion_point(field_mutable:dzhyun.TopicInvest.LingZhangGu)
  return lingzhanggu_;
}
::dzhyun::LingZhangGuShuJu* TopicInvest::release_lingzhanggu() {
  // @@protoc_insertion_point(field_release:dzhyun.TopicInvest.LingZhangGu)
  clear_has_lingzhanggu();
  ::dzhyun::LingZhangGuShuJu* temp = lingzhanggu_;
  lingzhanggu_ = NULL;
  return temp;
}
void TopicInvest::set_allocated_lingzhanggu(::dzhyun::LingZhangGuShuJu* lingzhanggu) {
  delete lingzhanggu_;
  lingzhanggu_ = lingzhanggu;
  if (lingzhanggu) {
    set_has_lingzhanggu();
  } else {
    clear_has_lingzhanggu();
  }
  // @@protoc_insertion_point(field_set_allocated:dzhyun.TopicInvest.LingZhangGu)
}

// optional int64 ShiFouReMenZhuTi = 11;
bool TopicInvest::has_shifouremenzhuti() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void TopicInvest::set_has_shifouremenzhuti() {
  _has_bits_[0] |= 0x00000400u;
}
void TopicInvest::clear_has_shifouremenzhuti() {
  _has_bits_[0] &= ~0x00000400u;
}
void TopicInvest::clear_shifouremenzhuti() {
  shifouremenzhuti_ = GOOGLE_LONGLONG(0);
  clear_has_shifouremenzhuti();
}
 ::google::protobuf::int64 TopicInvest::shifouremenzhuti() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.ShiFouReMenZhuTi)
  return shifouremenzhuti_;
}
 void TopicInvest::set_shifouremenzhuti(::google::protobuf::int64 value) {
  set_has_shifouremenzhuti();
  shifouremenzhuti_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.ShiFouReMenZhuTi)
}

// optional int64 RiPingJunZhangFuPaiMing14 = 12;
bool TopicInvest::has_ripingjunzhangfupaiming14() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void TopicInvest::set_has_ripingjunzhangfupaiming14() {
  _has_bits_[0] |= 0x00000800u;
}
void TopicInvest::clear_has_ripingjunzhangfupaiming14() {
  _has_bits_[0] &= ~0x00000800u;
}
void TopicInvest::clear_ripingjunzhangfupaiming14() {
  ripingjunzhangfupaiming14_ = GOOGLE_LONGLONG(0);
  clear_has_ripingjunzhangfupaiming14();
}
 ::google::protobuf::int64 TopicInvest::ripingjunzhangfupaiming14() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.RiPingJunZhangFuPaiMing14)
  return ripingjunzhangfupaiming14_;
}
 void TopicInvest::set_ripingjunzhangfupaiming14(::google::protobuf::int64 value) {
  set_has_ripingjunzhangfupaiming14();
  ripingjunzhangfupaiming14_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.RiPingJunZhangFuPaiMing14)
}

// optional int64 RiPingJunZhangFuPaiMing30 = 13;
bool TopicInvest::has_ripingjunzhangfupaiming30() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void TopicInvest::set_has_ripingjunzhangfupaiming30() {
  _has_bits_[0] |= 0x00001000u;
}
void TopicInvest::clear_has_ripingjunzhangfupaiming30() {
  _has_bits_[0] &= ~0x00001000u;
}
void TopicInvest::clear_ripingjunzhangfupaiming30() {
  ripingjunzhangfupaiming30_ = GOOGLE_LONGLONG(0);
  clear_has_ripingjunzhangfupaiming30();
}
 ::google::protobuf::int64 TopicInvest::ripingjunzhangfupaiming30() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.RiPingJunZhangFuPaiMing30)
  return ripingjunzhangfupaiming30_;
}
 void TopicInvest::set_ripingjunzhangfupaiming30(::google::protobuf::int64 value) {
  set_has_ripingjunzhangfupaiming30();
  ripingjunzhangfupaiming30_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.RiPingJunZhangFuPaiMing30)
}

// optional int64 RiReDuZhi14 = 14;
bool TopicInvest::has_rireduzhi14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void TopicInvest::set_has_rireduzhi14() {
  _has_bits_[0] |= 0x00002000u;
}
void TopicInvest::clear_has_rireduzhi14() {
  _has_bits_[0] &= ~0x00002000u;
}
void TopicInvest::clear_rireduzhi14() {
  rireduzhi14_ = GOOGLE_LONGLONG(0);
  clear_has_rireduzhi14();
}
 ::google::protobuf::int64 TopicInvest::rireduzhi14() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.RiReDuZhi14)
  return rireduzhi14_;
}
 void TopicInvest::set_rireduzhi14(::google::protobuf::int64 value) {
  set_has_rireduzhi14();
  rireduzhi14_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.RiReDuZhi14)
}

// optional int64 RiReDuZhi30 = 15;
bool TopicInvest::has_rireduzhi30() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void TopicInvest::set_has_rireduzhi30() {
  _has_bits_[0] |= 0x00004000u;
}
void TopicInvest::clear_has_rireduzhi30() {
  _has_bits_[0] &= ~0x00004000u;
}
void TopicInvest::clear_rireduzhi30() {
  rireduzhi30_ = GOOGLE_LONGLONG(0);
  clear_has_rireduzhi30();
}
 ::google::protobuf::int64 TopicInvest::rireduzhi30() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.RiReDuZhi30)
  return rireduzhi30_;
}
 void TopicInvest::set_rireduzhi30(::google::protobuf::int64 value) {
  set_has_rireduzhi30();
  rireduzhi30_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.RiReDuZhi30)
}

// optional int64 RiReDuZhi10 = 16;
bool TopicInvest::has_rireduzhi10() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void TopicInvest::set_has_rireduzhi10() {
  _has_bits_[0] |= 0x00008000u;
}
void TopicInvest::clear_has_rireduzhi10() {
  _has_bits_[0] &= ~0x00008000u;
}
void TopicInvest::clear_rireduzhi10() {
  rireduzhi10_ = GOOGLE_LONGLONG(0);
  clear_has_rireduzhi10();
}
 ::google::protobuf::int64 TopicInvest::rireduzhi10() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.RiReDuZhi10)
  return rireduzhi10_;
}
 void TopicInvest::set_rireduzhi10(::google::protobuf::int64 value) {
  set_has_rireduzhi10();
  rireduzhi10_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.RiReDuZhi10)
}

// optional int64 GeGuShu = 17;
bool TopicInvest::has_gegushu() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void TopicInvest::set_has_gegushu() {
  _has_bits_[0] |= 0x00010000u;
}
void TopicInvest::clear_has_gegushu() {
  _has_bits_[0] &= ~0x00010000u;
}
void TopicInvest::clear_gegushu() {
  gegushu_ = GOOGLE_LONGLONG(0);
  clear_has_gegushu();
}
 ::google::protobuf::int64 TopicInvest::gegushu() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.GeGuShu)
  return gegushu_;
}
 void TopicInvest::set_gegushu(::google::protobuf::int64 value) {
  set_has_gegushu();
  gegushu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.GeGuShu)
}

// optional int64 DangYueZhangFu = 18;
bool TopicInvest::has_dangyuezhangfu() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void TopicInvest::set_has_dangyuezhangfu() {
  _has_bits_[0] |= 0x00020000u;
}
void TopicInvest::clear_has_dangyuezhangfu() {
  _has_bits_[0] &= ~0x00020000u;
}
void TopicInvest::clear_dangyuezhangfu() {
  dangyuezhangfu_ = GOOGLE_LONGLONG(0);
  clear_has_dangyuezhangfu();
}
 ::google::protobuf::int64 TopicInvest::dangyuezhangfu() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvest.DangYueZhangFu)
  return dangyuezhangfu_;
}
 void TopicInvest::set_dangyuezhangfu(::google::protobuf::int64 value) {
  set_has_dangyuezhangfu();
  dangyuezhangfu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvest.DangYueZhangFu)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LiShiHangQing::kShiJianFieldNumber;
const int LiShiHangQing::kZhangFuFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LiShiHangQing::LiShiHangQing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.LiShiHangQing)
}

void LiShiHangQing::InitAsDefaultInstance() {
}

LiShiHangQing::LiShiHangQing(const LiShiHangQing& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.LiShiHangQing)
}

void LiShiHangQing::SharedCtor() {
  _cached_size_ = 0;
  shijian_ = GOOGLE_LONGLONG(0);
  zhangfu_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LiShiHangQing::~LiShiHangQing() {
  // @@protoc_insertion_point(destructor:dzhyun.LiShiHangQing)
  SharedDtor();
}

void LiShiHangQing::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LiShiHangQing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LiShiHangQing::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LiShiHangQing_descriptor_;
}

const LiShiHangQing& LiShiHangQing::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2etopicinvest_2eproto();
  return *default_instance_;
}

LiShiHangQing* LiShiHangQing::default_instance_ = NULL;

LiShiHangQing* LiShiHangQing::New(::google::protobuf::Arena* arena) const {
  LiShiHangQing* n = new LiShiHangQing;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LiShiHangQing::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.LiShiHangQing)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LiShiHangQing, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LiShiHangQing*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(shijian_, zhangfu_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LiShiHangQing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.LiShiHangQing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 ShiJian = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shijian_)));
          set_has_shijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ZhangFu;
        break;
      }

      // required int64 ZhangFu = 2;
      case 2: {
        if (tag == 16) {
         parse_ZhangFu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &zhangfu_)));
          set_has_zhangfu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.LiShiHangQing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.LiShiHangQing)
  return false;
#undef DO_
}

void LiShiHangQing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.LiShiHangQing)
  // required int64 ShiJian = 1;
  if (has_shijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shijian(), output);
  }

  // required int64 ZhangFu = 2;
  if (has_zhangfu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->zhangfu(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.LiShiHangQing)
}

::google::protobuf::uint8* LiShiHangQing::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.LiShiHangQing)
  // required int64 ShiJian = 1;
  if (has_shijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shijian(), target);
  }

  // required int64 ZhangFu = 2;
  if (has_zhangfu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->zhangfu(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.LiShiHangQing)
  return target;
}

int LiShiHangQing::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:dzhyun.LiShiHangQing)
  int total_size = 0;

  if (has_shijian()) {
    // required int64 ShiJian = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shijian());
  }

  if (has_zhangfu()) {
    // required int64 ZhangFu = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->zhangfu());
  }

  return total_size;
}
int LiShiHangQing::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.LiShiHangQing)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 ShiJian = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shijian());

    // required int64 ZhangFu = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->zhangfu());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LiShiHangQing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.LiShiHangQing)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LiShiHangQing* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LiShiHangQing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.LiShiHangQing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.LiShiHangQing)
    MergeFrom(*source);
  }
}

void LiShiHangQing::MergeFrom(const LiShiHangQing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.LiShiHangQing)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shijian()) {
      set_shijian(from.shijian());
    }
    if (from.has_zhangfu()) {
      set_zhangfu(from.zhangfu());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LiShiHangQing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.LiShiHangQing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LiShiHangQing::CopyFrom(const LiShiHangQing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.LiShiHangQing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LiShiHangQing::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void LiShiHangQing::Swap(LiShiHangQing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LiShiHangQing::InternalSwap(LiShiHangQing* other) {
  std::swap(shijian_, other->shijian_);
  std::swap(zhangfu_, other->zhangfu_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LiShiHangQing::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LiShiHangQing_descriptor_;
  metadata.reflection = LiShiHangQing_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LiShiHangQing

// required int64 ShiJian = 1;
bool LiShiHangQing::has_shijian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LiShiHangQing::set_has_shijian() {
  _has_bits_[0] |= 0x00000001u;
}
void LiShiHangQing::clear_has_shijian() {
  _has_bits_[0] &= ~0x00000001u;
}
void LiShiHangQing::clear_shijian() {
  shijian_ = GOOGLE_LONGLONG(0);
  clear_has_shijian();
}
 ::google::protobuf::int64 LiShiHangQing::shijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.LiShiHangQing.ShiJian)
  return shijian_;
}
 void LiShiHangQing::set_shijian(::google::protobuf::int64 value) {
  set_has_shijian();
  shijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.LiShiHangQing.ShiJian)
}

// required int64 ZhangFu = 2;
bool LiShiHangQing::has_zhangfu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LiShiHangQing::set_has_zhangfu() {
  _has_bits_[0] |= 0x00000002u;
}
void LiShiHangQing::clear_has_zhangfu() {
  _has_bits_[0] &= ~0x00000002u;
}
void LiShiHangQing::clear_zhangfu() {
  zhangfu_ = GOOGLE_LONGLONG(0);
  clear_has_zhangfu();
}
 ::google::protobuf::int64 LiShiHangQing::zhangfu() const {
  // @@protoc_insertion_point(field_get:dzhyun.LiShiHangQing.ZhangFu)
  return zhangfu_;
}
 void LiShiHangQing::set_zhangfu(::google::protobuf::int64 value) {
  set_has_zhangfu();
  zhangfu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.LiShiHangQing.ZhangFu)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LiShiZouShi::kHangQingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LiShiZouShi::LiShiZouShi()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.LiShiZouShi)
}

void LiShiZouShi::InitAsDefaultInstance() {
}

LiShiZouShi::LiShiZouShi(const LiShiZouShi& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.LiShiZouShi)
}

void LiShiZouShi::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LiShiZouShi::~LiShiZouShi() {
  // @@protoc_insertion_point(destructor:dzhyun.LiShiZouShi)
  SharedDtor();
}

void LiShiZouShi::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LiShiZouShi::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LiShiZouShi::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LiShiZouShi_descriptor_;
}

const LiShiZouShi& LiShiZouShi::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2etopicinvest_2eproto();
  return *default_instance_;
}

LiShiZouShi* LiShiZouShi::default_instance_ = NULL;

LiShiZouShi* LiShiZouShi::New(::google::protobuf::Arena* arena) const {
  LiShiZouShi* n = new LiShiZouShi;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LiShiZouShi::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.LiShiZouShi)
  hangqing_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LiShiZouShi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.LiShiZouShi)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dzhyun.LiShiHangQing HangQing = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_HangQing:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_hangqing()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_HangQing;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.LiShiZouShi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.LiShiZouShi)
  return false;
#undef DO_
}

void LiShiZouShi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.LiShiZouShi)
  // repeated .dzhyun.LiShiHangQing HangQing = 1;
  for (unsigned int i = 0, n = this->hangqing_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hangqing(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.LiShiZouShi)
}

::google::protobuf::uint8* LiShiZouShi::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.LiShiZouShi)
  // repeated .dzhyun.LiShiHangQing HangQing = 1;
  for (unsigned int i = 0, n = this->hangqing_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hangqing(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.LiShiZouShi)
  return target;
}

int LiShiZouShi::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.LiShiZouShi)
  int total_size = 0;

  // repeated .dzhyun.LiShiHangQing HangQing = 1;
  total_size += 1 * this->hangqing_size();
  for (int i = 0; i < this->hangqing_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hangqing(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LiShiZouShi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.LiShiZouShi)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LiShiZouShi* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LiShiZouShi>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.LiShiZouShi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.LiShiZouShi)
    MergeFrom(*source);
  }
}

void LiShiZouShi::MergeFrom(const LiShiZouShi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.LiShiZouShi)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  hangqing_.MergeFrom(from.hangqing_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LiShiZouShi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.LiShiZouShi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LiShiZouShi::CopyFrom(const LiShiZouShi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.LiShiZouShi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LiShiZouShi::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->hangqing())) return false;
  return true;
}

void LiShiZouShi::Swap(LiShiZouShi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LiShiZouShi::InternalSwap(LiShiZouShi* other) {
  hangqing_.UnsafeArenaSwap(&other->hangqing_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LiShiZouShi::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LiShiZouShi_descriptor_;
  metadata.reflection = LiShiZouShi_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LiShiZouShi

// repeated .dzhyun.LiShiHangQing HangQing = 1;
int LiShiZouShi::hangqing_size() const {
  return hangqing_.size();
}
void LiShiZouShi::clear_hangqing() {
  hangqing_.Clear();
}
const ::dzhyun::LiShiHangQing& LiShiZouShi::hangqing(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.LiShiZouShi.HangQing)
  return hangqing_.Get(index);
}
::dzhyun::LiShiHangQing* LiShiZouShi::mutable_hangqing(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.LiShiZouShi.HangQing)
  return hangqing_.Mutable(index);
}
::dzhyun::LiShiHangQing* LiShiZouShi::add_hangqing() {
  // @@protoc_insertion_point(field_add:dzhyun.LiShiZouShi.HangQing)
  return hangqing_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::LiShiHangQing >*
LiShiZouShi::mutable_hangqing() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.LiShiZouShi.HangQing)
  return &hangqing_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::LiShiHangQing >&
LiShiZouShi::hangqing() const {
  // @@protoc_insertion_point(field_list:dzhyun.LiShiZouShi.HangQing)
  return hangqing_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicInvestHistory::kBianHaoFieldNumber;
const int TopicInvestHistory::kMingChengFieldNumber;
const int TopicInvestHistory::kShiJianFieldNumber;
const int TopicInvestHistory::kLiShiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicInvestHistory::TopicInvestHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.TopicInvestHistory)
}

void TopicInvestHistory::InitAsDefaultInstance() {
  lishi_ = const_cast< ::dzhyun::LiShiZouShi*>(&::dzhyun::LiShiZouShi::default_instance());
}

TopicInvestHistory::TopicInvestHistory(const TopicInvestHistory& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.TopicInvestHistory)
}

void TopicInvestHistory::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bianhao_ = GOOGLE_LONGLONG(0);
  mingcheng_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shijian_ = GOOGLE_LONGLONG(0);
  lishi_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TopicInvestHistory::~TopicInvestHistory() {
  // @@protoc_insertion_point(destructor:dzhyun.TopicInvestHistory)
  SharedDtor();
}

void TopicInvestHistory::SharedDtor() {
  mingcheng_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete lishi_;
  }
}

void TopicInvestHistory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopicInvestHistory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TopicInvestHistory_descriptor_;
}

const TopicInvestHistory& TopicInvestHistory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2etopicinvest_2eproto();
  return *default_instance_;
}

TopicInvestHistory* TopicInvestHistory::default_instance_ = NULL;

TopicInvestHistory* TopicInvestHistory::New(::google::protobuf::Arena* arena) const {
  TopicInvestHistory* n = new TopicInvestHistory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopicInvestHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.TopicInvestHistory)
  if (_has_bits_[0 / 32] & 15u) {
    bianhao_ = GOOGLE_LONGLONG(0);
    if (has_mingcheng()) {
      mingcheng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    shijian_ = GOOGLE_LONGLONG(0);
    if (has_lishi()) {
      if (lishi_ != NULL) lishi_->::dzhyun::LiShiZouShi::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TopicInvestHistory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.TopicInvestHistory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 BianHao = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bianhao_)));
          set_has_bianhao();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_MingCheng;
        break;
      }

      // optional string MingCheng = 2;
      case 2: {
        if (tag == 18) {
         parse_MingCheng:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mingcheng()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mingcheng().data(), this->mingcheng().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.TopicInvestHistory.MingCheng");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ShiJian;
        break;
      }

      // optional int64 ShiJian = 3;
      case 3: {
        if (tag == 24) {
         parse_ShiJian:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shijian_)));
          set_has_shijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_LiShi;
        break;
      }

      // optional .dzhyun.LiShiZouShi LiShi = 4;
      case 4: {
        if (tag == 34) {
         parse_LiShi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lishi()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.TopicInvestHistory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.TopicInvestHistory)
  return false;
#undef DO_
}

void TopicInvestHistory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.TopicInvestHistory)
  // required int64 BianHao = 1;
  if (has_bianhao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->bianhao(), output);
  }

  // optional string MingCheng = 2;
  if (has_mingcheng()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mingcheng().data(), this->mingcheng().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.TopicInvestHistory.MingCheng");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mingcheng(), output);
  }

  // optional int64 ShiJian = 3;
  if (has_shijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->shijian(), output);
  }

  // optional .dzhyun.LiShiZouShi LiShi = 4;
  if (has_lishi()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->lishi_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.TopicInvestHistory)
}

::google::protobuf::uint8* TopicInvestHistory::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.TopicInvestHistory)
  // required int64 BianHao = 1;
  if (has_bianhao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->bianhao(), target);
  }

  // optional string MingCheng = 2;
  if (has_mingcheng()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mingcheng().data(), this->mingcheng().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.TopicInvestHistory.MingCheng");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mingcheng(), target);
  }

  // optional int64 ShiJian = 3;
  if (has_shijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->shijian(), target);
  }

  // optional .dzhyun.LiShiZouShi LiShi = 4;
  if (has_lishi()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->lishi_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.TopicInvestHistory)
  return target;
}

int TopicInvestHistory::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.TopicInvestHistory)
  int total_size = 0;

  // required int64 BianHao = 1;
  if (has_bianhao()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bianhao());
  }
  if (_has_bits_[1 / 32] & 14u) {
    // optional string MingCheng = 2;
    if (has_mingcheng()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mingcheng());
    }

    // optional int64 ShiJian = 3;
    if (has_shijian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shijian());
    }

    // optional .dzhyun.LiShiZouShi LiShi = 4;
    if (has_lishi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->lishi_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TopicInvestHistory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.TopicInvestHistory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TopicInvestHistory* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicInvestHistory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.TopicInvestHistory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.TopicInvestHistory)
    MergeFrom(*source);
  }
}

void TopicInvestHistory::MergeFrom(const TopicInvestHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.TopicInvestHistory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bianhao()) {
      set_bianhao(from.bianhao());
    }
    if (from.has_mingcheng()) {
      set_has_mingcheng();
      mingcheng_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mingcheng_);
    }
    if (from.has_shijian()) {
      set_shijian(from.shijian());
    }
    if (from.has_lishi()) {
      mutable_lishi()->::dzhyun::LiShiZouShi::MergeFrom(from.lishi());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TopicInvestHistory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.TopicInvestHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicInvestHistory::CopyFrom(const TopicInvestHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.TopicInvestHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicInvestHistory::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_lishi()) {
    if (!this->lishi_->IsInitialized()) return false;
  }
  return true;
}

void TopicInvestHistory::Swap(TopicInvestHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicInvestHistory::InternalSwap(TopicInvestHistory* other) {
  std::swap(bianhao_, other->bianhao_);
  mingcheng_.Swap(&other->mingcheng_);
  std::swap(shijian_, other->shijian_);
  std::swap(lishi_, other->lishi_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TopicInvestHistory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TopicInvestHistory_descriptor_;
  metadata.reflection = TopicInvestHistory_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TopicInvestHistory

// required int64 BianHao = 1;
bool TopicInvestHistory::has_bianhao() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TopicInvestHistory::set_has_bianhao() {
  _has_bits_[0] |= 0x00000001u;
}
void TopicInvestHistory::clear_has_bianhao() {
  _has_bits_[0] &= ~0x00000001u;
}
void TopicInvestHistory::clear_bianhao() {
  bianhao_ = GOOGLE_LONGLONG(0);
  clear_has_bianhao();
}
 ::google::protobuf::int64 TopicInvestHistory::bianhao() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvestHistory.BianHao)
  return bianhao_;
}
 void TopicInvestHistory::set_bianhao(::google::protobuf::int64 value) {
  set_has_bianhao();
  bianhao_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvestHistory.BianHao)
}

// optional string MingCheng = 2;
bool TopicInvestHistory::has_mingcheng() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TopicInvestHistory::set_has_mingcheng() {
  _has_bits_[0] |= 0x00000002u;
}
void TopicInvestHistory::clear_has_mingcheng() {
  _has_bits_[0] &= ~0x00000002u;
}
void TopicInvestHistory::clear_mingcheng() {
  mingcheng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mingcheng();
}
 const ::std::string& TopicInvestHistory::mingcheng() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvestHistory.MingCheng)
  return mingcheng_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TopicInvestHistory::set_mingcheng(const ::std::string& value) {
  set_has_mingcheng();
  mingcheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvestHistory.MingCheng)
}
 void TopicInvestHistory::set_mingcheng(const char* value) {
  set_has_mingcheng();
  mingcheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.TopicInvestHistory.MingCheng)
}
 void TopicInvestHistory::set_mingcheng(const char* value, size_t size) {
  set_has_mingcheng();
  mingcheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.TopicInvestHistory.MingCheng)
}
 ::std::string* TopicInvestHistory::mutable_mingcheng() {
  set_has_mingcheng();
  // @@protoc_insertion_point(field_mutable:dzhyun.TopicInvestHistory.MingCheng)
  return mingcheng_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TopicInvestHistory::release_mingcheng() {
  // @@protoc_insertion_point(field_release:dzhyun.TopicInvestHistory.MingCheng)
  clear_has_mingcheng();
  return mingcheng_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TopicInvestHistory::set_allocated_mingcheng(::std::string* mingcheng) {
  if (mingcheng != NULL) {
    set_has_mingcheng();
  } else {
    clear_has_mingcheng();
  }
  mingcheng_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mingcheng);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.TopicInvestHistory.MingCheng)
}

// optional int64 ShiJian = 3;
bool TopicInvestHistory::has_shijian() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TopicInvestHistory::set_has_shijian() {
  _has_bits_[0] |= 0x00000004u;
}
void TopicInvestHistory::clear_has_shijian() {
  _has_bits_[0] &= ~0x00000004u;
}
void TopicInvestHistory::clear_shijian() {
  shijian_ = GOOGLE_LONGLONG(0);
  clear_has_shijian();
}
 ::google::protobuf::int64 TopicInvestHistory::shijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvestHistory.ShiJian)
  return shijian_;
}
 void TopicInvestHistory::set_shijian(::google::protobuf::int64 value) {
  set_has_shijian();
  shijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvestHistory.ShiJian)
}

// optional .dzhyun.LiShiZouShi LiShi = 4;
bool TopicInvestHistory::has_lishi() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TopicInvestHistory::set_has_lishi() {
  _has_bits_[0] |= 0x00000008u;
}
void TopicInvestHistory::clear_has_lishi() {
  _has_bits_[0] &= ~0x00000008u;
}
void TopicInvestHistory::clear_lishi() {
  if (lishi_ != NULL) lishi_->::dzhyun::LiShiZouShi::Clear();
  clear_has_lishi();
}
const ::dzhyun::LiShiZouShi& TopicInvestHistory::lishi() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvestHistory.LiShi)
  return lishi_ != NULL ? *lishi_ : *default_instance_->lishi_;
}
::dzhyun::LiShiZouShi* TopicInvestHistory::mutable_lishi() {
  set_has_lishi();
  if (lishi_ == NULL) {
    lishi_ = new ::dzhyun::LiShiZouShi;
  }
  // @@protoc_insertion_point(field_mutable:dzhyun.TopicInvestHistory.LiShi)
  return lishi_;
}
::dzhyun::LiShiZouShi* TopicInvestHistory::release_lishi() {
  // @@protoc_insertion_point(field_release:dzhyun.TopicInvestHistory.LiShi)
  clear_has_lishi();
  ::dzhyun::LiShiZouShi* temp = lishi_;
  lishi_ = NULL;
  return temp;
}
void TopicInvestHistory::set_allocated_lishi(::dzhyun::LiShiZouShi* lishi) {
  delete lishi_;
  lishi_ = lishi;
  if (lishi) {
    set_has_lishi();
  } else {
    clear_has_lishi();
  }
  // @@protoc_insertion_point(field_set_allocated:dzhyun.TopicInvestHistory.LiShi)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicInvestInfo::kBianHaoFieldNumber;
const int TopicInvestInfo::kMingChengFieldNumber;
const int TopicInvestInfo::kChengFenGuFieldNumber;
const int TopicInvestInfo::kLeiBieFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicInvestInfo::TopicInvestInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.TopicInvestInfo)
}

void TopicInvestInfo::InitAsDefaultInstance() {
}

TopicInvestInfo::TopicInvestInfo(const TopicInvestInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.TopicInvestInfo)
}

void TopicInvestInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bianhao_ = GOOGLE_LONGLONG(0);
  mingcheng_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leibie_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TopicInvestInfo::~TopicInvestInfo() {
  // @@protoc_insertion_point(destructor:dzhyun.TopicInvestInfo)
  SharedDtor();
}

void TopicInvestInfo::SharedDtor() {
  mingcheng_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TopicInvestInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopicInvestInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TopicInvestInfo_descriptor_;
}

const TopicInvestInfo& TopicInvestInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2etopicinvest_2eproto();
  return *default_instance_;
}

TopicInvestInfo* TopicInvestInfo::default_instance_ = NULL;

TopicInvestInfo* TopicInvestInfo::New(::google::protobuf::Arena* arena) const {
  TopicInvestInfo* n = new TopicInvestInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopicInvestInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.TopicInvestInfo)
  if (_has_bits_[0 / 32] & 11u) {
    bianhao_ = GOOGLE_LONGLONG(0);
    if (has_mingcheng()) {
      mingcheng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    leibie_ = GOOGLE_LONGLONG(0);
  }
  chengfengu_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TopicInvestInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.TopicInvestInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 BianHao = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bianhao_)));
          set_has_bianhao();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_MingCheng;
        break;
      }

      // required string MingCheng = 2;
      case 2: {
        if (tag == 18) {
         parse_MingCheng:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mingcheng()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mingcheng().data(), this->mingcheng().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.TopicInvestInfo.MingCheng");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ChengFenGu;
        break;
      }

      // repeated string ChengFenGu = 3;
      case 3: {
        if (tag == 26) {
         parse_ChengFenGu:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_chengfengu()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chengfengu(this->chengfengu_size() - 1).data(),
            this->chengfengu(this->chengfengu_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.TopicInvestInfo.ChengFenGu");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ChengFenGu;
        if (input->ExpectTag(32)) goto parse_LeiBie;
        break;
      }

      // optional int64 LeiBie = 4;
      case 4: {
        if (tag == 32) {
         parse_LeiBie:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leibie_)));
          set_has_leibie();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.TopicInvestInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.TopicInvestInfo)
  return false;
#undef DO_
}

void TopicInvestInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.TopicInvestInfo)
  // required int64 BianHao = 1;
  if (has_bianhao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->bianhao(), output);
  }

  // required string MingCheng = 2;
  if (has_mingcheng()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mingcheng().data(), this->mingcheng().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.TopicInvestInfo.MingCheng");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mingcheng(), output);
  }

  // repeated string ChengFenGu = 3;
  for (int i = 0; i < this->chengfengu_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chengfengu(i).data(), this->chengfengu(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.TopicInvestInfo.ChengFenGu");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->chengfengu(i), output);
  }

  // optional int64 LeiBie = 4;
  if (has_leibie()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->leibie(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.TopicInvestInfo)
}

::google::protobuf::uint8* TopicInvestInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.TopicInvestInfo)
  // required int64 BianHao = 1;
  if (has_bianhao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->bianhao(), target);
  }

  // required string MingCheng = 2;
  if (has_mingcheng()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mingcheng().data(), this->mingcheng().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.TopicInvestInfo.MingCheng");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mingcheng(), target);
  }

  // repeated string ChengFenGu = 3;
  for (int i = 0; i < this->chengfengu_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chengfengu(i).data(), this->chengfengu(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.TopicInvestInfo.ChengFenGu");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->chengfengu(i), target);
  }

  // optional int64 LeiBie = 4;
  if (has_leibie()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->leibie(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.TopicInvestInfo)
  return target;
}

int TopicInvestInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:dzhyun.TopicInvestInfo)
  int total_size = 0;

  if (has_bianhao()) {
    // required int64 BianHao = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bianhao());
  }

  if (has_mingcheng()) {
    // required string MingCheng = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mingcheng());
  }

  return total_size;
}
int TopicInvestInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.TopicInvestInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 BianHao = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bianhao());

    // required string MingCheng = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mingcheng());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int64 LeiBie = 4;
  if (has_leibie()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->leibie());
  }

  // repeated string ChengFenGu = 3;
  total_size += 1 * this->chengfengu_size();
  for (int i = 0; i < this->chengfengu_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->chengfengu(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TopicInvestInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.TopicInvestInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TopicInvestInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicInvestInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.TopicInvestInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.TopicInvestInfo)
    MergeFrom(*source);
  }
}

void TopicInvestInfo::MergeFrom(const TopicInvestInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.TopicInvestInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  chengfengu_.MergeFrom(from.chengfengu_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bianhao()) {
      set_bianhao(from.bianhao());
    }
    if (from.has_mingcheng()) {
      set_has_mingcheng();
      mingcheng_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mingcheng_);
    }
    if (from.has_leibie()) {
      set_leibie(from.leibie());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TopicInvestInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.TopicInvestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicInvestInfo::CopyFrom(const TopicInvestInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.TopicInvestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicInvestInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void TopicInvestInfo::Swap(TopicInvestInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicInvestInfo::InternalSwap(TopicInvestInfo* other) {
  std::swap(bianhao_, other->bianhao_);
  mingcheng_.Swap(&other->mingcheng_);
  chengfengu_.UnsafeArenaSwap(&other->chengfengu_);
  std::swap(leibie_, other->leibie_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TopicInvestInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TopicInvestInfo_descriptor_;
  metadata.reflection = TopicInvestInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TopicInvestInfo

// required int64 BianHao = 1;
bool TopicInvestInfo::has_bianhao() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TopicInvestInfo::set_has_bianhao() {
  _has_bits_[0] |= 0x00000001u;
}
void TopicInvestInfo::clear_has_bianhao() {
  _has_bits_[0] &= ~0x00000001u;
}
void TopicInvestInfo::clear_bianhao() {
  bianhao_ = GOOGLE_LONGLONG(0);
  clear_has_bianhao();
}
 ::google::protobuf::int64 TopicInvestInfo::bianhao() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvestInfo.BianHao)
  return bianhao_;
}
 void TopicInvestInfo::set_bianhao(::google::protobuf::int64 value) {
  set_has_bianhao();
  bianhao_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvestInfo.BianHao)
}

// required string MingCheng = 2;
bool TopicInvestInfo::has_mingcheng() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TopicInvestInfo::set_has_mingcheng() {
  _has_bits_[0] |= 0x00000002u;
}
void TopicInvestInfo::clear_has_mingcheng() {
  _has_bits_[0] &= ~0x00000002u;
}
void TopicInvestInfo::clear_mingcheng() {
  mingcheng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mingcheng();
}
 const ::std::string& TopicInvestInfo::mingcheng() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvestInfo.MingCheng)
  return mingcheng_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TopicInvestInfo::set_mingcheng(const ::std::string& value) {
  set_has_mingcheng();
  mingcheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvestInfo.MingCheng)
}
 void TopicInvestInfo::set_mingcheng(const char* value) {
  set_has_mingcheng();
  mingcheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.TopicInvestInfo.MingCheng)
}
 void TopicInvestInfo::set_mingcheng(const char* value, size_t size) {
  set_has_mingcheng();
  mingcheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.TopicInvestInfo.MingCheng)
}
 ::std::string* TopicInvestInfo::mutable_mingcheng() {
  set_has_mingcheng();
  // @@protoc_insertion_point(field_mutable:dzhyun.TopicInvestInfo.MingCheng)
  return mingcheng_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TopicInvestInfo::release_mingcheng() {
  // @@protoc_insertion_point(field_release:dzhyun.TopicInvestInfo.MingCheng)
  clear_has_mingcheng();
  return mingcheng_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TopicInvestInfo::set_allocated_mingcheng(::std::string* mingcheng) {
  if (mingcheng != NULL) {
    set_has_mingcheng();
  } else {
    clear_has_mingcheng();
  }
  mingcheng_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mingcheng);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.TopicInvestInfo.MingCheng)
}

// repeated string ChengFenGu = 3;
int TopicInvestInfo::chengfengu_size() const {
  return chengfengu_.size();
}
void TopicInvestInfo::clear_chengfengu() {
  chengfengu_.Clear();
}
 const ::std::string& TopicInvestInfo::chengfengu(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvestInfo.ChengFenGu)
  return chengfengu_.Get(index);
}
 ::std::string* TopicInvestInfo::mutable_chengfengu(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.TopicInvestInfo.ChengFenGu)
  return chengfengu_.Mutable(index);
}
 void TopicInvestInfo::set_chengfengu(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvestInfo.ChengFenGu)
  chengfengu_.Mutable(index)->assign(value);
}
 void TopicInvestInfo::set_chengfengu(int index, const char* value) {
  chengfengu_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dzhyun.TopicInvestInfo.ChengFenGu)
}
 void TopicInvestInfo::set_chengfengu(int index, const char* value, size_t size) {
  chengfengu_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dzhyun.TopicInvestInfo.ChengFenGu)
}
 ::std::string* TopicInvestInfo::add_chengfengu() {
  // @@protoc_insertion_point(field_add_mutable:dzhyun.TopicInvestInfo.ChengFenGu)
  return chengfengu_.Add();
}
 void TopicInvestInfo::add_chengfengu(const ::std::string& value) {
  chengfengu_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dzhyun.TopicInvestInfo.ChengFenGu)
}
 void TopicInvestInfo::add_chengfengu(const char* value) {
  chengfengu_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dzhyun.TopicInvestInfo.ChengFenGu)
}
 void TopicInvestInfo::add_chengfengu(const char* value, size_t size) {
  chengfengu_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dzhyun.TopicInvestInfo.ChengFenGu)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
TopicInvestInfo::chengfengu() const {
  // @@protoc_insertion_point(field_list:dzhyun.TopicInvestInfo.ChengFenGu)
  return chengfengu_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
TopicInvestInfo::mutable_chengfengu() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.TopicInvestInfo.ChengFenGu)
  return &chengfengu_;
}

// optional int64 LeiBie = 4;
bool TopicInvestInfo::has_leibie() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TopicInvestInfo::set_has_leibie() {
  _has_bits_[0] |= 0x00000008u;
}
void TopicInvestInfo::clear_has_leibie() {
  _has_bits_[0] &= ~0x00000008u;
}
void TopicInvestInfo::clear_leibie() {
  leibie_ = GOOGLE_LONGLONG(0);
  clear_has_leibie();
}
 ::google::protobuf::int64 TopicInvestInfo::leibie() const {
  // @@protoc_insertion_point(field_get:dzhyun.TopicInvestInfo.LeiBie)
  return leibie_;
}
 void TopicInvestInfo::set_leibie(::google::protobuf::int64 value) {
  set_has_leibie();
  leibie_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TopicInvestInfo.LeiBie)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dzhyun

// @@protoc_insertion_point(global_scope)
