// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dzhNewsInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dzhNewsInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dzhyun {

namespace {

const ::google::protobuf::Descriptor* NewsInfoValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewsInfoValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* XinWenXinXiEx_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  XinWenXinXiEx_reflection_ = NULL;
const ::google::protobuf::Descriptor* XinWenXinXiOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  XinWenXinXiOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* XinWenXinXiZhongXin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  XinWenXinXiZhongXin_reflection_ = NULL;
const ::google::protobuf::Descriptor* XinWenXinXiZhongXinOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  XinWenXinXiZhongXinOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* GongGaoXinXi_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GongGaoXinXi_reflection_ = NULL;
const ::google::protobuf::Descriptor* GongGaoXinXiOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GongGaoXinXiOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* GongGaoXinXiZhongXin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GongGaoXinXiZhongXin_reflection_ = NULL;
const ::google::protobuf::Descriptor* GongGaoXinXiZhongXinOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GongGaoXinXiZhongXinOutput_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dzhNewsInfo_2eproto() {
  protobuf_AddDesc_dzhNewsInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dzhNewsInfo.proto");
  GOOGLE_CHECK(file != NULL);
  NewsInfoValue_descriptor_ = file->message_type(0);
  static const int NewsInfoValue_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewsInfoValue, ver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewsInfoValue, act_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewsInfoValue, newsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewsInfoValue, newstitle_),
  };
  NewsInfoValue_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NewsInfoValue_descriptor_,
      NewsInfoValue::default_instance_,
      NewsInfoValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewsInfoValue, _has_bits_[0]),
      -1,
      -1,
      sizeof(NewsInfoValue),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewsInfoValue, _internal_metadata_),
      -1);
  XinWenXinXiEx_descriptor_ = file->message_type(1);
  static const int XinWenXinXiEx_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiEx, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiEx, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiEx, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiEx, context_),
  };
  XinWenXinXiEx_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      XinWenXinXiEx_descriptor_,
      XinWenXinXiEx::default_instance_,
      XinWenXinXiEx_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiEx, _has_bits_[0]),
      -1,
      -1,
      sizeof(XinWenXinXiEx),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiEx, _internal_metadata_),
      -1);
  XinWenXinXiOutput_descriptor_ = file->message_type(2);
  static const int XinWenXinXiOutput_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiOutput, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiOutput, totalcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiOutput, data_),
  };
  XinWenXinXiOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      XinWenXinXiOutput_descriptor_,
      XinWenXinXiOutput::default_instance_,
      XinWenXinXiOutput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiOutput, _has_bits_[0]),
      -1,
      -1,
      sizeof(XinWenXinXiOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiOutput, _internal_metadata_),
      -1);
  XinWenXinXiZhongXin_descriptor_ = file->message_type(3);
  static const int XinWenXinXiZhongXin_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiZhongXin, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiZhongXin, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiZhongXin, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiZhongXin, source_),
  };
  XinWenXinXiZhongXin_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      XinWenXinXiZhongXin_descriptor_,
      XinWenXinXiZhongXin::default_instance_,
      XinWenXinXiZhongXin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiZhongXin, _has_bits_[0]),
      -1,
      -1,
      sizeof(XinWenXinXiZhongXin),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiZhongXin, _internal_metadata_),
      -1);
  XinWenXinXiZhongXinOutput_descriptor_ = file->message_type(4);
  static const int XinWenXinXiZhongXinOutput_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiZhongXinOutput, totalcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiZhongXinOutput, data_),
  };
  XinWenXinXiZhongXinOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      XinWenXinXiZhongXinOutput_descriptor_,
      XinWenXinXiZhongXinOutput::default_instance_,
      XinWenXinXiZhongXinOutput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiZhongXinOutput, _has_bits_[0]),
      -1,
      -1,
      sizeof(XinWenXinXiZhongXinOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XinWenXinXiZhongXinOutput, _internal_metadata_),
      -1);
  GongGaoXinXi_descriptor_ = file->message_type(5);
  static const int GongGaoXinXi_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXi, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXi, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXi, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXi, context_),
  };
  GongGaoXinXi_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GongGaoXinXi_descriptor_,
      GongGaoXinXi::default_instance_,
      GongGaoXinXi_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXi, _has_bits_[0]),
      -1,
      -1,
      sizeof(GongGaoXinXi),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXi, _internal_metadata_),
      -1);
  GongGaoXinXiOutput_descriptor_ = file->message_type(6);
  static const int GongGaoXinXiOutput_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXiOutput, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXiOutput, totalcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXiOutput, data_),
  };
  GongGaoXinXiOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GongGaoXinXiOutput_descriptor_,
      GongGaoXinXiOutput::default_instance_,
      GongGaoXinXiOutput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXiOutput, _has_bits_[0]),
      -1,
      -1,
      sizeof(GongGaoXinXiOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXiOutput, _internal_metadata_),
      -1);
  GongGaoXinXiZhongXin_descriptor_ = file->message_type(7);
  static const int GongGaoXinXiZhongXin_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXiZhongXin, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXiZhongXin, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXiZhongXin, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXiZhongXin, source_),
  };
  GongGaoXinXiZhongXin_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GongGaoXinXiZhongXin_descriptor_,
      GongGaoXinXiZhongXin::default_instance_,
      GongGaoXinXiZhongXin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXiZhongXin, _has_bits_[0]),
      -1,
      -1,
      sizeof(GongGaoXinXiZhongXin),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXiZhongXin, _internal_metadata_),
      -1);
  GongGaoXinXiZhongXinOutput_descriptor_ = file->message_type(8);
  static const int GongGaoXinXiZhongXinOutput_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXiZhongXinOutput, totalcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXiZhongXinOutput, data_),
  };
  GongGaoXinXiZhongXinOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GongGaoXinXiZhongXinOutput_descriptor_,
      GongGaoXinXiZhongXinOutput::default_instance_,
      GongGaoXinXiZhongXinOutput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXiZhongXinOutput, _has_bits_[0]),
      -1,
      -1,
      sizeof(GongGaoXinXiZhongXinOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GongGaoXinXiZhongXinOutput, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dzhNewsInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NewsInfoValue_descriptor_, &NewsInfoValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      XinWenXinXiEx_descriptor_, &XinWenXinXiEx::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      XinWenXinXiOutput_descriptor_, &XinWenXinXiOutput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      XinWenXinXiZhongXin_descriptor_, &XinWenXinXiZhongXin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      XinWenXinXiZhongXinOutput_descriptor_, &XinWenXinXiZhongXinOutput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GongGaoXinXi_descriptor_, &GongGaoXinXi::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GongGaoXinXiOutput_descriptor_, &GongGaoXinXiOutput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GongGaoXinXiZhongXin_descriptor_, &GongGaoXinXiZhongXin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GongGaoXinXiZhongXinOutput_descriptor_, &GongGaoXinXiZhongXinOutput::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dzhNewsInfo_2eproto() {
  delete NewsInfoValue::default_instance_;
  delete NewsInfoValue_reflection_;
  delete XinWenXinXiEx::default_instance_;
  delete XinWenXinXiEx_reflection_;
  delete XinWenXinXiOutput::default_instance_;
  delete XinWenXinXiOutput_reflection_;
  delete XinWenXinXiZhongXin::default_instance_;
  delete XinWenXinXiZhongXin_reflection_;
  delete XinWenXinXiZhongXinOutput::default_instance_;
  delete XinWenXinXiZhongXinOutput_reflection_;
  delete GongGaoXinXi::default_instance_;
  delete GongGaoXinXi_reflection_;
  delete GongGaoXinXiOutput::default_instance_;
  delete GongGaoXinXiOutput_reflection_;
  delete GongGaoXinXiZhongXin::default_instance_;
  delete GongGaoXinXiZhongXin_reflection_;
  delete GongGaoXinXiZhongXinOutput::default_instance_;
  delete GongGaoXinXiZhongXinOutput_reflection_;
}

void protobuf_AddDesc_dzhNewsInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021dzhNewsInfo.proto\022\006dzhyun\"L\n\rNewsInfoV"
    "alue\022\013\n\003ver\030\001 \002(\t\022\013\n\003act\030\002 \002(\r\022\016\n\006newsID"
    "\030\003 \002(\004\022\021\n\tnewsTitle\030\004 \001(\t\"M\n\rXinWenXinXi"
    "Ex\022\016\n\006source\030\001 \001(\t\022\014\n\004date\030\002 \001(\t\022\r\n\005titl"
    "e\030\003 \001(\t\022\017\n\007context\030\004 \001(\t\"Y\n\021XinWenXinXiO"
    "utput\022\013\n\003Obj\030\001 \002(\t\022\022\n\nTotalCount\030\002 \002(\003\022#"
    "\n\004Data\030\003 \003(\0132\025.dzhyun.XinWenXinXiEx\"S\n\023X"
    "inWenXinXiZhongXin\022\014\n\004date\030\001 \001(\t\022\r\n\005titl"
    "e\030\002 \001(\t\022\017\n\007context\030\003 \001(\t\022\016\n\006source\030\004 \001(\t"
    "\"Z\n\031XinWenXinXiZhongXinOutput\022\022\n\nTotalCo"
    "unt\030\001 \002(\003\022)\n\004data\030\002 \003(\0132\033.dzhyun.XinWenX"
    "inXiZhongXin\"L\n\014GongGaoXinXi\022\016\n\006source\030\001"
    " \001(\t\022\014\n\004date\030\002 \001(\t\022\r\n\005title\030\003 \001(\t\022\017\n\007con"
    "text\030\004 \001(\t\"Y\n\022GongGaoXinXiOutput\022\013\n\003Obj\030"
    "\001 \002(\t\022\022\n\nTotalCount\030\002 \002(\003\022\"\n\004Data\030\003 \003(\0132"
    "\024.dzhyun.GongGaoXinXi\"T\n\024GongGaoXinXiZho"
    "ngXin\022\014\n\004date\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022\017\n\007co"
    "ntext\030\003 \001(\t\022\016\n\006source\030\004 \001(\t\"\\\n\032GongGaoXi"
    "nXiZhongXinOutput\022\022\n\nTotalCount\030\001 \002(\003\022*\n"
    "\004data\030\002 \003(\0132\034.dzhyun.GongGaoXinXiZhongXi"
    "nB\022\n\020com.dzhyun.proto", 821);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dzhNewsInfo.proto", &protobuf_RegisterTypes);
  NewsInfoValue::default_instance_ = new NewsInfoValue();
  XinWenXinXiEx::default_instance_ = new XinWenXinXiEx();
  XinWenXinXiOutput::default_instance_ = new XinWenXinXiOutput();
  XinWenXinXiZhongXin::default_instance_ = new XinWenXinXiZhongXin();
  XinWenXinXiZhongXinOutput::default_instance_ = new XinWenXinXiZhongXinOutput();
  GongGaoXinXi::default_instance_ = new GongGaoXinXi();
  GongGaoXinXiOutput::default_instance_ = new GongGaoXinXiOutput();
  GongGaoXinXiZhongXin::default_instance_ = new GongGaoXinXiZhongXin();
  GongGaoXinXiZhongXinOutput::default_instance_ = new GongGaoXinXiZhongXinOutput();
  NewsInfoValue::default_instance_->InitAsDefaultInstance();
  XinWenXinXiEx::default_instance_->InitAsDefaultInstance();
  XinWenXinXiOutput::default_instance_->InitAsDefaultInstance();
  XinWenXinXiZhongXin::default_instance_->InitAsDefaultInstance();
  XinWenXinXiZhongXinOutput::default_instance_->InitAsDefaultInstance();
  GongGaoXinXi::default_instance_->InitAsDefaultInstance();
  GongGaoXinXiOutput::default_instance_->InitAsDefaultInstance();
  GongGaoXinXiZhongXin::default_instance_->InitAsDefaultInstance();
  GongGaoXinXiZhongXinOutput::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dzhNewsInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dzhNewsInfo_2eproto {
  StaticDescriptorInitializer_dzhNewsInfo_2eproto() {
    protobuf_AddDesc_dzhNewsInfo_2eproto();
  }
} static_descriptor_initializer_dzhNewsInfo_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewsInfoValue::kVerFieldNumber;
const int NewsInfoValue::kActFieldNumber;
const int NewsInfoValue::kNewsIDFieldNumber;
const int NewsInfoValue::kNewsTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewsInfoValue::NewsInfoValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.NewsInfoValue)
}

void NewsInfoValue::InitAsDefaultInstance() {
}

NewsInfoValue::NewsInfoValue(const NewsInfoValue& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.NewsInfoValue)
}

void NewsInfoValue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  act_ = 0u;
  newsid_ = GOOGLE_ULONGLONG(0);
  newstitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewsInfoValue::~NewsInfoValue() {
  // @@protoc_insertion_point(destructor:dzhyun.NewsInfoValue)
  SharedDtor();
}

void NewsInfoValue::SharedDtor() {
  ver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newstitle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NewsInfoValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewsInfoValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewsInfoValue_descriptor_;
}

const NewsInfoValue& NewsInfoValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhNewsInfo_2eproto();
  return *default_instance_;
}

NewsInfoValue* NewsInfoValue::default_instance_ = NULL;

NewsInfoValue* NewsInfoValue::New(::google::protobuf::Arena* arena) const {
  NewsInfoValue* n = new NewsInfoValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewsInfoValue::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.NewsInfoValue)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_ver()) {
      ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    act_ = 0u;
    newsid_ = GOOGLE_ULONGLONG(0);
    if (has_newstitle()) {
      newstitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NewsInfoValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.NewsInfoValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ver = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ver().data(), this->ver().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewsInfoValue.ver");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_act;
        break;
      }

      // required uint32 act = 2;
      case 2: {
        if (tag == 16) {
         parse_act:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &act_)));
          set_has_act();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_newsID;
        break;
      }

      // required uint64 newsID = 3;
      case 3: {
        if (tag == 24) {
         parse_newsID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &newsid_)));
          set_has_newsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_newsTitle;
        break;
      }

      // optional string newsTitle = 4;
      case 4: {
        if (tag == 34) {
         parse_newsTitle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newstitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->newstitle().data(), this->newstitle().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.NewsInfoValue.newsTitle");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.NewsInfoValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.NewsInfoValue)
  return false;
#undef DO_
}

void NewsInfoValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.NewsInfoValue)
  // required string ver = 1;
  if (has_ver()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ver().data(), this->ver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewsInfoValue.ver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ver(), output);
  }

  // required uint32 act = 2;
  if (has_act()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->act(), output);
  }

  // required uint64 newsID = 3;
  if (has_newsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->newsid(), output);
  }

  // optional string newsTitle = 4;
  if (has_newstitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->newstitle().data(), this->newstitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewsInfoValue.newsTitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->newstitle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.NewsInfoValue)
}

::google::protobuf::uint8* NewsInfoValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.NewsInfoValue)
  // required string ver = 1;
  if (has_ver()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ver().data(), this->ver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewsInfoValue.ver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ver(), target);
  }

  // required uint32 act = 2;
  if (has_act()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->act(), target);
  }

  // required uint64 newsID = 3;
  if (has_newsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->newsid(), target);
  }

  // optional string newsTitle = 4;
  if (has_newstitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->newstitle().data(), this->newstitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.NewsInfoValue.newsTitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->newstitle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.NewsInfoValue)
  return target;
}

int NewsInfoValue::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:dzhyun.NewsInfoValue)
  int total_size = 0;

  if (has_ver()) {
    // required string ver = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ver());
  }

  if (has_act()) {
    // required uint32 act = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->act());
  }

  if (has_newsid()) {
    // required uint64 newsID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->newsid());
  }

  return total_size;
}
int NewsInfoValue::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.NewsInfoValue)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string ver = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ver());

    // required uint32 act = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->act());

    // required uint64 newsID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->newsid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string newsTitle = 4;
  if (has_newstitle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newstitle());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewsInfoValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.NewsInfoValue)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NewsInfoValue* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NewsInfoValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.NewsInfoValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.NewsInfoValue)
    MergeFrom(*source);
  }
}

void NewsInfoValue::MergeFrom(const NewsInfoValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.NewsInfoValue)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ver()) {
      set_has_ver();
      ver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ver_);
    }
    if (from.has_act()) {
      set_act(from.act());
    }
    if (from.has_newsid()) {
      set_newsid(from.newsid());
    }
    if (from.has_newstitle()) {
      set_has_newstitle();
      newstitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newstitle_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NewsInfoValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.NewsInfoValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewsInfoValue::CopyFrom(const NewsInfoValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.NewsInfoValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewsInfoValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void NewsInfoValue::Swap(NewsInfoValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewsInfoValue::InternalSwap(NewsInfoValue* other) {
  ver_.Swap(&other->ver_);
  std::swap(act_, other->act_);
  std::swap(newsid_, other->newsid_);
  newstitle_.Swap(&other->newstitle_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewsInfoValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewsInfoValue_descriptor_;
  metadata.reflection = NewsInfoValue_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewsInfoValue

// required string ver = 1;
bool NewsInfoValue::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NewsInfoValue::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
void NewsInfoValue::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
void NewsInfoValue::clear_ver() {
  ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ver();
}
 const ::std::string& NewsInfoValue::ver() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewsInfoValue.ver)
  return ver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewsInfoValue::set_ver(const ::std::string& value) {
  set_has_ver();
  ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewsInfoValue.ver)
}
 void NewsInfoValue::set_ver(const char* value) {
  set_has_ver();
  ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewsInfoValue.ver)
}
 void NewsInfoValue::set_ver(const char* value, size_t size) {
  set_has_ver();
  ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewsInfoValue.ver)
}
 ::std::string* NewsInfoValue::mutable_ver() {
  set_has_ver();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewsInfoValue.ver)
  return ver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewsInfoValue::release_ver() {
  // @@protoc_insertion_point(field_release:dzhyun.NewsInfoValue.ver)
  clear_has_ver();
  return ver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewsInfoValue::set_allocated_ver(::std::string* ver) {
  if (ver != NULL) {
    set_has_ver();
  } else {
    clear_has_ver();
  }
  ver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ver);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewsInfoValue.ver)
}

// required uint32 act = 2;
bool NewsInfoValue::has_act() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NewsInfoValue::set_has_act() {
  _has_bits_[0] |= 0x00000002u;
}
void NewsInfoValue::clear_has_act() {
  _has_bits_[0] &= ~0x00000002u;
}
void NewsInfoValue::clear_act() {
  act_ = 0u;
  clear_has_act();
}
 ::google::protobuf::uint32 NewsInfoValue::act() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewsInfoValue.act)
  return act_;
}
 void NewsInfoValue::set_act(::google::protobuf::uint32 value) {
  set_has_act();
  act_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.NewsInfoValue.act)
}

// required uint64 newsID = 3;
bool NewsInfoValue::has_newsid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NewsInfoValue::set_has_newsid() {
  _has_bits_[0] |= 0x00000004u;
}
void NewsInfoValue::clear_has_newsid() {
  _has_bits_[0] &= ~0x00000004u;
}
void NewsInfoValue::clear_newsid() {
  newsid_ = GOOGLE_ULONGLONG(0);
  clear_has_newsid();
}
 ::google::protobuf::uint64 NewsInfoValue::newsid() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewsInfoValue.newsID)
  return newsid_;
}
 void NewsInfoValue::set_newsid(::google::protobuf::uint64 value) {
  set_has_newsid();
  newsid_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.NewsInfoValue.newsID)
}

// optional string newsTitle = 4;
bool NewsInfoValue::has_newstitle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void NewsInfoValue::set_has_newstitle() {
  _has_bits_[0] |= 0x00000008u;
}
void NewsInfoValue::clear_has_newstitle() {
  _has_bits_[0] &= ~0x00000008u;
}
void NewsInfoValue::clear_newstitle() {
  newstitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_newstitle();
}
 const ::std::string& NewsInfoValue::newstitle() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewsInfoValue.newsTitle)
  return newstitle_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewsInfoValue::set_newstitle(const ::std::string& value) {
  set_has_newstitle();
  newstitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewsInfoValue.newsTitle)
}
 void NewsInfoValue::set_newstitle(const char* value) {
  set_has_newstitle();
  newstitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewsInfoValue.newsTitle)
}
 void NewsInfoValue::set_newstitle(const char* value, size_t size) {
  set_has_newstitle();
  newstitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewsInfoValue.newsTitle)
}
 ::std::string* NewsInfoValue::mutable_newstitle() {
  set_has_newstitle();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewsInfoValue.newsTitle)
  return newstitle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewsInfoValue::release_newstitle() {
  // @@protoc_insertion_point(field_release:dzhyun.NewsInfoValue.newsTitle)
  clear_has_newstitle();
  return newstitle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewsInfoValue::set_allocated_newstitle(::std::string* newstitle) {
  if (newstitle != NULL) {
    set_has_newstitle();
  } else {
    clear_has_newstitle();
  }
  newstitle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newstitle);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewsInfoValue.newsTitle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XinWenXinXiEx::kSourceFieldNumber;
const int XinWenXinXiEx::kDateFieldNumber;
const int XinWenXinXiEx::kTitleFieldNumber;
const int XinWenXinXiEx::kContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XinWenXinXiEx::XinWenXinXiEx()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.XinWenXinXiEx)
}

void XinWenXinXiEx::InitAsDefaultInstance() {
}

XinWenXinXiEx::XinWenXinXiEx(const XinWenXinXiEx& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.XinWenXinXiEx)
}

void XinWenXinXiEx::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

XinWenXinXiEx::~XinWenXinXiEx() {
  // @@protoc_insertion_point(destructor:dzhyun.XinWenXinXiEx)
  SharedDtor();
}

void XinWenXinXiEx::SharedDtor() {
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void XinWenXinXiEx::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XinWenXinXiEx::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return XinWenXinXiEx_descriptor_;
}

const XinWenXinXiEx& XinWenXinXiEx::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhNewsInfo_2eproto();
  return *default_instance_;
}

XinWenXinXiEx* XinWenXinXiEx::default_instance_ = NULL;

XinWenXinXiEx* XinWenXinXiEx::New(::google::protobuf::Arena* arena) const {
  XinWenXinXiEx* n = new XinWenXinXiEx;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XinWenXinXiEx::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.XinWenXinXiEx)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_source()) {
      source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_title()) {
      title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_context()) {
      context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool XinWenXinXiEx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.XinWenXinXiEx)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source().data(), this->source().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.XinWenXinXiEx.source");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_date;
        break;
      }

      // optional string date = 2;
      case 2: {
        if (tag == 18) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.XinWenXinXiEx.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_title;
        break;
      }

      // optional string title = 3;
      case 3: {
        if (tag == 26) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.XinWenXinXiEx.title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_context;
        break;
      }

      // optional string context = 4;
      case 4: {
        if (tag == 34) {
         parse_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_context()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->context().data(), this->context().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.XinWenXinXiEx.context");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.XinWenXinXiEx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.XinWenXinXiEx)
  return false;
#undef DO_
}

void XinWenXinXiEx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.XinWenXinXiEx)
  // optional string source = 1;
  if (has_source()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiEx.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source(), output);
  }

  // optional string date = 2;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiEx.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->date(), output);
  }

  // optional string title = 3;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiEx.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  // optional string context = 4;
  if (has_context()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->context().data(), this->context().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiEx.context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->context(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.XinWenXinXiEx)
}

::google::protobuf::uint8* XinWenXinXiEx::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.XinWenXinXiEx)
  // optional string source = 1;
  if (has_source()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiEx.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source(), target);
  }

  // optional string date = 2;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiEx.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->date(), target);
  }

  // optional string title = 3;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiEx.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  // optional string context = 4;
  if (has_context()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->context().data(), this->context().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiEx.context");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->context(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.XinWenXinXiEx)
  return target;
}

int XinWenXinXiEx::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.XinWenXinXiEx)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional string source = 1;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source());
    }

    // optional string date = 2;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

    // optional string title = 3;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string context = 4;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->context());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XinWenXinXiEx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.XinWenXinXiEx)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const XinWenXinXiEx* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const XinWenXinXiEx>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.XinWenXinXiEx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.XinWenXinXiEx)
    MergeFrom(*source);
  }
}

void XinWenXinXiEx::MergeFrom(const XinWenXinXiEx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.XinWenXinXiEx)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_source()) {
      set_has_source();
      source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
    }
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
    if (from.has_title()) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (from.has_context()) {
      set_has_context();
      context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void XinWenXinXiEx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.XinWenXinXiEx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XinWenXinXiEx::CopyFrom(const XinWenXinXiEx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.XinWenXinXiEx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XinWenXinXiEx::IsInitialized() const {

  return true;
}

void XinWenXinXiEx::Swap(XinWenXinXiEx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XinWenXinXiEx::InternalSwap(XinWenXinXiEx* other) {
  source_.Swap(&other->source_);
  date_.Swap(&other->date_);
  title_.Swap(&other->title_);
  context_.Swap(&other->context_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XinWenXinXiEx::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = XinWenXinXiEx_descriptor_;
  metadata.reflection = XinWenXinXiEx_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XinWenXinXiEx

// optional string source = 1;
bool XinWenXinXiEx::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void XinWenXinXiEx::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
void XinWenXinXiEx::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
void XinWenXinXiEx::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
 const ::std::string& XinWenXinXiEx::source() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiEx.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiEx::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiEx.source)
}
 void XinWenXinXiEx::set_source(const char* value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiEx.source)
}
 void XinWenXinXiEx::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiEx.source)
}
 ::std::string* XinWenXinXiEx::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiEx.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* XinWenXinXiEx::release_source() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiEx.source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiEx::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiEx.source)
}

// optional string date = 2;
bool XinWenXinXiEx::has_date() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void XinWenXinXiEx::set_has_date() {
  _has_bits_[0] |= 0x00000002u;
}
void XinWenXinXiEx::clear_has_date() {
  _has_bits_[0] &= ~0x00000002u;
}
void XinWenXinXiEx::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& XinWenXinXiEx::date() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiEx.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiEx::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiEx.date)
}
 void XinWenXinXiEx::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiEx.date)
}
 void XinWenXinXiEx::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiEx.date)
}
 ::std::string* XinWenXinXiEx::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiEx.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* XinWenXinXiEx::release_date() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiEx.date)
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiEx::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiEx.date)
}

// optional string title = 3;
bool XinWenXinXiEx::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void XinWenXinXiEx::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
void XinWenXinXiEx::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
void XinWenXinXiEx::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
 const ::std::string& XinWenXinXiEx::title() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiEx.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiEx::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiEx.title)
}
 void XinWenXinXiEx::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiEx.title)
}
 void XinWenXinXiEx::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiEx.title)
}
 ::std::string* XinWenXinXiEx::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiEx.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* XinWenXinXiEx::release_title() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiEx.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiEx::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiEx.title)
}

// optional string context = 4;
bool XinWenXinXiEx::has_context() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void XinWenXinXiEx::set_has_context() {
  _has_bits_[0] |= 0x00000008u;
}
void XinWenXinXiEx::clear_has_context() {
  _has_bits_[0] &= ~0x00000008u;
}
void XinWenXinXiEx::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_context();
}
 const ::std::string& XinWenXinXiEx::context() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiEx.context)
  return context_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiEx::set_context(const ::std::string& value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiEx.context)
}
 void XinWenXinXiEx::set_context(const char* value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiEx.context)
}
 void XinWenXinXiEx::set_context(const char* value, size_t size) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiEx.context)
}
 ::std::string* XinWenXinXiEx::mutable_context() {
  set_has_context();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiEx.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* XinWenXinXiEx::release_context() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiEx.context)
  clear_has_context();
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiEx::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    set_has_context();
  } else {
    clear_has_context();
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiEx.context)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XinWenXinXiOutput::kObjFieldNumber;
const int XinWenXinXiOutput::kTotalCountFieldNumber;
const int XinWenXinXiOutput::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XinWenXinXiOutput::XinWenXinXiOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.XinWenXinXiOutput)
}

void XinWenXinXiOutput::InitAsDefaultInstance() {
}

XinWenXinXiOutput::XinWenXinXiOutput(const XinWenXinXiOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.XinWenXinXiOutput)
}

void XinWenXinXiOutput::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalcount_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

XinWenXinXiOutput::~XinWenXinXiOutput() {
  // @@protoc_insertion_point(destructor:dzhyun.XinWenXinXiOutput)
  SharedDtor();
}

void XinWenXinXiOutput::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void XinWenXinXiOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XinWenXinXiOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return XinWenXinXiOutput_descriptor_;
}

const XinWenXinXiOutput& XinWenXinXiOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhNewsInfo_2eproto();
  return *default_instance_;
}

XinWenXinXiOutput* XinWenXinXiOutput::default_instance_ = NULL;

XinWenXinXiOutput* XinWenXinXiOutput::New(::google::protobuf::Arena* arena) const {
  XinWenXinXiOutput* n = new XinWenXinXiOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XinWenXinXiOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.XinWenXinXiOutput)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_obj()) {
      obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    totalcount_ = GOOGLE_LONGLONG(0);
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool XinWenXinXiOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.XinWenXinXiOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.XinWenXinXiOutput.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TotalCount;
        break;
      }

      // required int64 TotalCount = 2;
      case 2: {
        if (tag == 16) {
         parse_TotalCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalcount_)));
          set_has_totalcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Data;
        break;
      }

      // repeated .dzhyun.XinWenXinXiEx Data = 3;
      case 3: {
        if (tag == 26) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.XinWenXinXiOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.XinWenXinXiOutput)
  return false;
#undef DO_
}

void XinWenXinXiOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.XinWenXinXiOutput)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiOutput.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // required int64 TotalCount = 2;
  if (has_totalcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->totalcount(), output);
  }

  // repeated .dzhyun.XinWenXinXiEx Data = 3;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.XinWenXinXiOutput)
}

::google::protobuf::uint8* XinWenXinXiOutput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.XinWenXinXiOutput)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiOutput.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // required int64 TotalCount = 2;
  if (has_totalcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->totalcount(), target);
  }

  // repeated .dzhyun.XinWenXinXiEx Data = 3;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.XinWenXinXiOutput)
  return target;
}

int XinWenXinXiOutput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:dzhyun.XinWenXinXiOutput)
  int total_size = 0;

  if (has_obj()) {
    // required string Obj = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }

  if (has_totalcount()) {
    // required int64 TotalCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalcount());
  }

  return total_size;
}
int XinWenXinXiOutput::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.XinWenXinXiOutput)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string Obj = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());

    // required int64 TotalCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .dzhyun.XinWenXinXiEx Data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XinWenXinXiOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.XinWenXinXiOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const XinWenXinXiOutput* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const XinWenXinXiOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.XinWenXinXiOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.XinWenXinXiOutput)
    MergeFrom(*source);
  }
}

void XinWenXinXiOutput::MergeFrom(const XinWenXinXiOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.XinWenXinXiOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
    if (from.has_totalcount()) {
      set_totalcount(from.totalcount());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void XinWenXinXiOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.XinWenXinXiOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XinWenXinXiOutput::CopyFrom(const XinWenXinXiOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.XinWenXinXiOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XinWenXinXiOutput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void XinWenXinXiOutput::Swap(XinWenXinXiOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XinWenXinXiOutput::InternalSwap(XinWenXinXiOutput* other) {
  obj_.Swap(&other->obj_);
  std::swap(totalcount_, other->totalcount_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XinWenXinXiOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = XinWenXinXiOutput_descriptor_;
  metadata.reflection = XinWenXinXiOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XinWenXinXiOutput

// required string Obj = 1;
bool XinWenXinXiOutput::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void XinWenXinXiOutput::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void XinWenXinXiOutput::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void XinWenXinXiOutput::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& XinWenXinXiOutput::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiOutput.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiOutput::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiOutput.Obj)
}
 void XinWenXinXiOutput::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiOutput.Obj)
}
 void XinWenXinXiOutput::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiOutput.Obj)
}
 ::std::string* XinWenXinXiOutput::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiOutput.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* XinWenXinXiOutput::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiOutput.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiOutput::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiOutput.Obj)
}

// required int64 TotalCount = 2;
bool XinWenXinXiOutput::has_totalcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void XinWenXinXiOutput::set_has_totalcount() {
  _has_bits_[0] |= 0x00000002u;
}
void XinWenXinXiOutput::clear_has_totalcount() {
  _has_bits_[0] &= ~0x00000002u;
}
void XinWenXinXiOutput::clear_totalcount() {
  totalcount_ = GOOGLE_LONGLONG(0);
  clear_has_totalcount();
}
 ::google::protobuf::int64 XinWenXinXiOutput::totalcount() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiOutput.TotalCount)
  return totalcount_;
}
 void XinWenXinXiOutput::set_totalcount(::google::protobuf::int64 value) {
  set_has_totalcount();
  totalcount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiOutput.TotalCount)
}

// repeated .dzhyun.XinWenXinXiEx Data = 3;
int XinWenXinXiOutput::data_size() const {
  return data_.size();
}
void XinWenXinXiOutput::clear_data() {
  data_.Clear();
}
const ::dzhyun::XinWenXinXiEx& XinWenXinXiOutput::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiOutput.Data)
  return data_.Get(index);
}
::dzhyun::XinWenXinXiEx* XinWenXinXiOutput::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiOutput.Data)
  return data_.Mutable(index);
}
::dzhyun::XinWenXinXiEx* XinWenXinXiOutput::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.XinWenXinXiOutput.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::XinWenXinXiEx >*
XinWenXinXiOutput::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.XinWenXinXiOutput.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::XinWenXinXiEx >&
XinWenXinXiOutput::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.XinWenXinXiOutput.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XinWenXinXiZhongXin::kDateFieldNumber;
const int XinWenXinXiZhongXin::kTitleFieldNumber;
const int XinWenXinXiZhongXin::kContextFieldNumber;
const int XinWenXinXiZhongXin::kSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XinWenXinXiZhongXin::XinWenXinXiZhongXin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.XinWenXinXiZhongXin)
}

void XinWenXinXiZhongXin::InitAsDefaultInstance() {
}

XinWenXinXiZhongXin::XinWenXinXiZhongXin(const XinWenXinXiZhongXin& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.XinWenXinXiZhongXin)
}

void XinWenXinXiZhongXin::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

XinWenXinXiZhongXin::~XinWenXinXiZhongXin() {
  // @@protoc_insertion_point(destructor:dzhyun.XinWenXinXiZhongXin)
  SharedDtor();
}

void XinWenXinXiZhongXin::SharedDtor() {
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void XinWenXinXiZhongXin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XinWenXinXiZhongXin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return XinWenXinXiZhongXin_descriptor_;
}

const XinWenXinXiZhongXin& XinWenXinXiZhongXin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhNewsInfo_2eproto();
  return *default_instance_;
}

XinWenXinXiZhongXin* XinWenXinXiZhongXin::default_instance_ = NULL;

XinWenXinXiZhongXin* XinWenXinXiZhongXin::New(::google::protobuf::Arena* arena) const {
  XinWenXinXiZhongXin* n = new XinWenXinXiZhongXin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XinWenXinXiZhongXin::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.XinWenXinXiZhongXin)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_title()) {
      title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_context()) {
      context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_source()) {
      source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool XinWenXinXiZhongXin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.XinWenXinXiZhongXin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string date = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.XinWenXinXiZhongXin.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_title;
        break;
      }

      // optional string title = 2;
      case 2: {
        if (tag == 18) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.XinWenXinXiZhongXin.title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_context;
        break;
      }

      // optional string context = 3;
      case 3: {
        if (tag == 26) {
         parse_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_context()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->context().data(), this->context().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.XinWenXinXiZhongXin.context");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_source;
        break;
      }

      // optional string source = 4;
      case 4: {
        if (tag == 34) {
         parse_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source().data(), this->source().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.XinWenXinXiZhongXin.source");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.XinWenXinXiZhongXin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.XinWenXinXiZhongXin)
  return false;
#undef DO_
}

void XinWenXinXiZhongXin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.XinWenXinXiZhongXin)
  // optional string date = 1;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiZhongXin.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->date(), output);
  }

  // optional string title = 2;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiZhongXin.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // optional string context = 3;
  if (has_context()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->context().data(), this->context().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiZhongXin.context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->context(), output);
  }

  // optional string source = 4;
  if (has_source()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiZhongXin.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->source(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.XinWenXinXiZhongXin)
}

::google::protobuf::uint8* XinWenXinXiZhongXin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.XinWenXinXiZhongXin)
  // optional string date = 1;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiZhongXin.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->date(), target);
  }

  // optional string title = 2;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiZhongXin.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // optional string context = 3;
  if (has_context()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->context().data(), this->context().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiZhongXin.context");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->context(), target);
  }

  // optional string source = 4;
  if (has_source()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.XinWenXinXiZhongXin.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->source(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.XinWenXinXiZhongXin)
  return target;
}

int XinWenXinXiZhongXin::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.XinWenXinXiZhongXin)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional string date = 1;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

    // optional string title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string context = 3;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->context());
    }

    // optional string source = 4;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XinWenXinXiZhongXin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.XinWenXinXiZhongXin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const XinWenXinXiZhongXin* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const XinWenXinXiZhongXin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.XinWenXinXiZhongXin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.XinWenXinXiZhongXin)
    MergeFrom(*source);
  }
}

void XinWenXinXiZhongXin::MergeFrom(const XinWenXinXiZhongXin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.XinWenXinXiZhongXin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
    if (from.has_title()) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (from.has_context()) {
      set_has_context();
      context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
    }
    if (from.has_source()) {
      set_has_source();
      source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void XinWenXinXiZhongXin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.XinWenXinXiZhongXin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XinWenXinXiZhongXin::CopyFrom(const XinWenXinXiZhongXin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.XinWenXinXiZhongXin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XinWenXinXiZhongXin::IsInitialized() const {

  return true;
}

void XinWenXinXiZhongXin::Swap(XinWenXinXiZhongXin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XinWenXinXiZhongXin::InternalSwap(XinWenXinXiZhongXin* other) {
  date_.Swap(&other->date_);
  title_.Swap(&other->title_);
  context_.Swap(&other->context_);
  source_.Swap(&other->source_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XinWenXinXiZhongXin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = XinWenXinXiZhongXin_descriptor_;
  metadata.reflection = XinWenXinXiZhongXin_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XinWenXinXiZhongXin

// optional string date = 1;
bool XinWenXinXiZhongXin::has_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void XinWenXinXiZhongXin::set_has_date() {
  _has_bits_[0] |= 0x00000001u;
}
void XinWenXinXiZhongXin::clear_has_date() {
  _has_bits_[0] &= ~0x00000001u;
}
void XinWenXinXiZhongXin::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& XinWenXinXiZhongXin::date() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiZhongXin.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiZhongXin::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiZhongXin.date)
}
 void XinWenXinXiZhongXin::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiZhongXin.date)
}
 void XinWenXinXiZhongXin::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiZhongXin.date)
}
 ::std::string* XinWenXinXiZhongXin::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiZhongXin.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* XinWenXinXiZhongXin::release_date() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiZhongXin.date)
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiZhongXin::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiZhongXin.date)
}

// optional string title = 2;
bool XinWenXinXiZhongXin::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void XinWenXinXiZhongXin::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
void XinWenXinXiZhongXin::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
void XinWenXinXiZhongXin::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
 const ::std::string& XinWenXinXiZhongXin::title() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiZhongXin.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiZhongXin::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiZhongXin.title)
}
 void XinWenXinXiZhongXin::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiZhongXin.title)
}
 void XinWenXinXiZhongXin::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiZhongXin.title)
}
 ::std::string* XinWenXinXiZhongXin::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiZhongXin.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* XinWenXinXiZhongXin::release_title() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiZhongXin.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiZhongXin::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiZhongXin.title)
}

// optional string context = 3;
bool XinWenXinXiZhongXin::has_context() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void XinWenXinXiZhongXin::set_has_context() {
  _has_bits_[0] |= 0x00000004u;
}
void XinWenXinXiZhongXin::clear_has_context() {
  _has_bits_[0] &= ~0x00000004u;
}
void XinWenXinXiZhongXin::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_context();
}
 const ::std::string& XinWenXinXiZhongXin::context() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiZhongXin.context)
  return context_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiZhongXin::set_context(const ::std::string& value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiZhongXin.context)
}
 void XinWenXinXiZhongXin::set_context(const char* value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiZhongXin.context)
}
 void XinWenXinXiZhongXin::set_context(const char* value, size_t size) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiZhongXin.context)
}
 ::std::string* XinWenXinXiZhongXin::mutable_context() {
  set_has_context();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiZhongXin.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* XinWenXinXiZhongXin::release_context() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiZhongXin.context)
  clear_has_context();
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiZhongXin::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    set_has_context();
  } else {
    clear_has_context();
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiZhongXin.context)
}

// optional string source = 4;
bool XinWenXinXiZhongXin::has_source() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void XinWenXinXiZhongXin::set_has_source() {
  _has_bits_[0] |= 0x00000008u;
}
void XinWenXinXiZhongXin::clear_has_source() {
  _has_bits_[0] &= ~0x00000008u;
}
void XinWenXinXiZhongXin::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
 const ::std::string& XinWenXinXiZhongXin::source() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiZhongXin.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiZhongXin::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiZhongXin.source)
}
 void XinWenXinXiZhongXin::set_source(const char* value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiZhongXin.source)
}
 void XinWenXinXiZhongXin::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiZhongXin.source)
}
 ::std::string* XinWenXinXiZhongXin::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiZhongXin.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* XinWenXinXiZhongXin::release_source() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiZhongXin.source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void XinWenXinXiZhongXin::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiZhongXin.source)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XinWenXinXiZhongXinOutput::kTotalCountFieldNumber;
const int XinWenXinXiZhongXinOutput::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XinWenXinXiZhongXinOutput::XinWenXinXiZhongXinOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.XinWenXinXiZhongXinOutput)
}

void XinWenXinXiZhongXinOutput::InitAsDefaultInstance() {
}

XinWenXinXiZhongXinOutput::XinWenXinXiZhongXinOutput(const XinWenXinXiZhongXinOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.XinWenXinXiZhongXinOutput)
}

void XinWenXinXiZhongXinOutput::SharedCtor() {
  _cached_size_ = 0;
  totalcount_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

XinWenXinXiZhongXinOutput::~XinWenXinXiZhongXinOutput() {
  // @@protoc_insertion_point(destructor:dzhyun.XinWenXinXiZhongXinOutput)
  SharedDtor();
}

void XinWenXinXiZhongXinOutput::SharedDtor() {
  if (this != default_instance_) {
  }
}

void XinWenXinXiZhongXinOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XinWenXinXiZhongXinOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return XinWenXinXiZhongXinOutput_descriptor_;
}

const XinWenXinXiZhongXinOutput& XinWenXinXiZhongXinOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhNewsInfo_2eproto();
  return *default_instance_;
}

XinWenXinXiZhongXinOutput* XinWenXinXiZhongXinOutput::default_instance_ = NULL;

XinWenXinXiZhongXinOutput* XinWenXinXiZhongXinOutput::New(::google::protobuf::Arena* arena) const {
  XinWenXinXiZhongXinOutput* n = new XinWenXinXiZhongXinOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XinWenXinXiZhongXinOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.XinWenXinXiZhongXinOutput)
  totalcount_ = GOOGLE_LONGLONG(0);
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool XinWenXinXiZhongXinOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.XinWenXinXiZhongXinOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 TotalCount = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalcount_)));
          set_has_totalcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .dzhyun.XinWenXinXiZhongXin data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.XinWenXinXiZhongXinOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.XinWenXinXiZhongXinOutput)
  return false;
#undef DO_
}

void XinWenXinXiZhongXinOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.XinWenXinXiZhongXinOutput)
  // required int64 TotalCount = 1;
  if (has_totalcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->totalcount(), output);
  }

  // repeated .dzhyun.XinWenXinXiZhongXin data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.XinWenXinXiZhongXinOutput)
}

::google::protobuf::uint8* XinWenXinXiZhongXinOutput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.XinWenXinXiZhongXinOutput)
  // required int64 TotalCount = 1;
  if (has_totalcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->totalcount(), target);
  }

  // repeated .dzhyun.XinWenXinXiZhongXin data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.XinWenXinXiZhongXinOutput)
  return target;
}

int XinWenXinXiZhongXinOutput::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.XinWenXinXiZhongXinOutput)
  int total_size = 0;

  // required int64 TotalCount = 1;
  if (has_totalcount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalcount());
  }
  // repeated .dzhyun.XinWenXinXiZhongXin data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XinWenXinXiZhongXinOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.XinWenXinXiZhongXinOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const XinWenXinXiZhongXinOutput* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const XinWenXinXiZhongXinOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.XinWenXinXiZhongXinOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.XinWenXinXiZhongXinOutput)
    MergeFrom(*source);
  }
}

void XinWenXinXiZhongXinOutput::MergeFrom(const XinWenXinXiZhongXinOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.XinWenXinXiZhongXinOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_totalcount()) {
      set_totalcount(from.totalcount());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void XinWenXinXiZhongXinOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.XinWenXinXiZhongXinOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XinWenXinXiZhongXinOutput::CopyFrom(const XinWenXinXiZhongXinOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.XinWenXinXiZhongXinOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XinWenXinXiZhongXinOutput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void XinWenXinXiZhongXinOutput::Swap(XinWenXinXiZhongXinOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XinWenXinXiZhongXinOutput::InternalSwap(XinWenXinXiZhongXinOutput* other) {
  std::swap(totalcount_, other->totalcount_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XinWenXinXiZhongXinOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = XinWenXinXiZhongXinOutput_descriptor_;
  metadata.reflection = XinWenXinXiZhongXinOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XinWenXinXiZhongXinOutput

// required int64 TotalCount = 1;
bool XinWenXinXiZhongXinOutput::has_totalcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void XinWenXinXiZhongXinOutput::set_has_totalcount() {
  _has_bits_[0] |= 0x00000001u;
}
void XinWenXinXiZhongXinOutput::clear_has_totalcount() {
  _has_bits_[0] &= ~0x00000001u;
}
void XinWenXinXiZhongXinOutput::clear_totalcount() {
  totalcount_ = GOOGLE_LONGLONG(0);
  clear_has_totalcount();
}
 ::google::protobuf::int64 XinWenXinXiZhongXinOutput::totalcount() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiZhongXinOutput.TotalCount)
  return totalcount_;
}
 void XinWenXinXiZhongXinOutput::set_totalcount(::google::protobuf::int64 value) {
  set_has_totalcount();
  totalcount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiZhongXinOutput.TotalCount)
}

// repeated .dzhyun.XinWenXinXiZhongXin data = 2;
int XinWenXinXiZhongXinOutput::data_size() const {
  return data_.size();
}
void XinWenXinXiZhongXinOutput::clear_data() {
  data_.Clear();
}
const ::dzhyun::XinWenXinXiZhongXin& XinWenXinXiZhongXinOutput::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiZhongXinOutput.data)
  return data_.Get(index);
}
::dzhyun::XinWenXinXiZhongXin* XinWenXinXiZhongXinOutput::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiZhongXinOutput.data)
  return data_.Mutable(index);
}
::dzhyun::XinWenXinXiZhongXin* XinWenXinXiZhongXinOutput::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.XinWenXinXiZhongXinOutput.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::XinWenXinXiZhongXin >*
XinWenXinXiZhongXinOutput::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.XinWenXinXiZhongXinOutput.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::XinWenXinXiZhongXin >&
XinWenXinXiZhongXinOutput::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.XinWenXinXiZhongXinOutput.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GongGaoXinXi::kSourceFieldNumber;
const int GongGaoXinXi::kDateFieldNumber;
const int GongGaoXinXi::kTitleFieldNumber;
const int GongGaoXinXi::kContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GongGaoXinXi::GongGaoXinXi()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.GongGaoXinXi)
}

void GongGaoXinXi::InitAsDefaultInstance() {
}

GongGaoXinXi::GongGaoXinXi(const GongGaoXinXi& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.GongGaoXinXi)
}

void GongGaoXinXi::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GongGaoXinXi::~GongGaoXinXi() {
  // @@protoc_insertion_point(destructor:dzhyun.GongGaoXinXi)
  SharedDtor();
}

void GongGaoXinXi::SharedDtor() {
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GongGaoXinXi::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GongGaoXinXi::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GongGaoXinXi_descriptor_;
}

const GongGaoXinXi& GongGaoXinXi::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhNewsInfo_2eproto();
  return *default_instance_;
}

GongGaoXinXi* GongGaoXinXi::default_instance_ = NULL;

GongGaoXinXi* GongGaoXinXi::New(::google::protobuf::Arena* arena) const {
  GongGaoXinXi* n = new GongGaoXinXi;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GongGaoXinXi::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.GongGaoXinXi)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_source()) {
      source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_title()) {
      title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_context()) {
      context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GongGaoXinXi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.GongGaoXinXi)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source().data(), this->source().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.GongGaoXinXi.source");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_date;
        break;
      }

      // optional string date = 2;
      case 2: {
        if (tag == 18) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.GongGaoXinXi.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_title;
        break;
      }

      // optional string title = 3;
      case 3: {
        if (tag == 26) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.GongGaoXinXi.title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_context;
        break;
      }

      // optional string context = 4;
      case 4: {
        if (tag == 34) {
         parse_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_context()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->context().data(), this->context().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.GongGaoXinXi.context");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.GongGaoXinXi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.GongGaoXinXi)
  return false;
#undef DO_
}

void GongGaoXinXi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.GongGaoXinXi)
  // optional string source = 1;
  if (has_source()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXi.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source(), output);
  }

  // optional string date = 2;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXi.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->date(), output);
  }

  // optional string title = 3;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXi.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  // optional string context = 4;
  if (has_context()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->context().data(), this->context().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXi.context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->context(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.GongGaoXinXi)
}

::google::protobuf::uint8* GongGaoXinXi::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.GongGaoXinXi)
  // optional string source = 1;
  if (has_source()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXi.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source(), target);
  }

  // optional string date = 2;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXi.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->date(), target);
  }

  // optional string title = 3;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXi.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  // optional string context = 4;
  if (has_context()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->context().data(), this->context().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXi.context");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->context(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.GongGaoXinXi)
  return target;
}

int GongGaoXinXi::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.GongGaoXinXi)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional string source = 1;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source());
    }

    // optional string date = 2;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

    // optional string title = 3;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string context = 4;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->context());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GongGaoXinXi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.GongGaoXinXi)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GongGaoXinXi* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GongGaoXinXi>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.GongGaoXinXi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.GongGaoXinXi)
    MergeFrom(*source);
  }
}

void GongGaoXinXi::MergeFrom(const GongGaoXinXi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.GongGaoXinXi)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_source()) {
      set_has_source();
      source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
    }
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
    if (from.has_title()) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (from.has_context()) {
      set_has_context();
      context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GongGaoXinXi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.GongGaoXinXi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongGaoXinXi::CopyFrom(const GongGaoXinXi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.GongGaoXinXi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongGaoXinXi::IsInitialized() const {

  return true;
}

void GongGaoXinXi::Swap(GongGaoXinXi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GongGaoXinXi::InternalSwap(GongGaoXinXi* other) {
  source_.Swap(&other->source_);
  date_.Swap(&other->date_);
  title_.Swap(&other->title_);
  context_.Swap(&other->context_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GongGaoXinXi::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GongGaoXinXi_descriptor_;
  metadata.reflection = GongGaoXinXi_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GongGaoXinXi

// optional string source = 1;
bool GongGaoXinXi::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GongGaoXinXi::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
void GongGaoXinXi::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
void GongGaoXinXi::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
 const ::std::string& GongGaoXinXi::source() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXi.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXi::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXi.source)
}
 void GongGaoXinXi::set_source(const char* value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXi.source)
}
 void GongGaoXinXi::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXi.source)
}
 ::std::string* GongGaoXinXi::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXi.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GongGaoXinXi::release_source() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXi.source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXi::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXi.source)
}

// optional string date = 2;
bool GongGaoXinXi::has_date() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GongGaoXinXi::set_has_date() {
  _has_bits_[0] |= 0x00000002u;
}
void GongGaoXinXi::clear_has_date() {
  _has_bits_[0] &= ~0x00000002u;
}
void GongGaoXinXi::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& GongGaoXinXi::date() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXi.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXi::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXi.date)
}
 void GongGaoXinXi::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXi.date)
}
 void GongGaoXinXi::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXi.date)
}
 ::std::string* GongGaoXinXi::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXi.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GongGaoXinXi::release_date() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXi.date)
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXi::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXi.date)
}

// optional string title = 3;
bool GongGaoXinXi::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GongGaoXinXi::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
void GongGaoXinXi::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
void GongGaoXinXi::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
 const ::std::string& GongGaoXinXi::title() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXi.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXi::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXi.title)
}
 void GongGaoXinXi::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXi.title)
}
 void GongGaoXinXi::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXi.title)
}
 ::std::string* GongGaoXinXi::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXi.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GongGaoXinXi::release_title() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXi.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXi::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXi.title)
}

// optional string context = 4;
bool GongGaoXinXi::has_context() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GongGaoXinXi::set_has_context() {
  _has_bits_[0] |= 0x00000008u;
}
void GongGaoXinXi::clear_has_context() {
  _has_bits_[0] &= ~0x00000008u;
}
void GongGaoXinXi::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_context();
}
 const ::std::string& GongGaoXinXi::context() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXi.context)
  return context_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXi::set_context(const ::std::string& value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXi.context)
}
 void GongGaoXinXi::set_context(const char* value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXi.context)
}
 void GongGaoXinXi::set_context(const char* value, size_t size) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXi.context)
}
 ::std::string* GongGaoXinXi::mutable_context() {
  set_has_context();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXi.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GongGaoXinXi::release_context() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXi.context)
  clear_has_context();
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXi::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    set_has_context();
  } else {
    clear_has_context();
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXi.context)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GongGaoXinXiOutput::kObjFieldNumber;
const int GongGaoXinXiOutput::kTotalCountFieldNumber;
const int GongGaoXinXiOutput::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GongGaoXinXiOutput::GongGaoXinXiOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.GongGaoXinXiOutput)
}

void GongGaoXinXiOutput::InitAsDefaultInstance() {
}

GongGaoXinXiOutput::GongGaoXinXiOutput(const GongGaoXinXiOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.GongGaoXinXiOutput)
}

void GongGaoXinXiOutput::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalcount_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GongGaoXinXiOutput::~GongGaoXinXiOutput() {
  // @@protoc_insertion_point(destructor:dzhyun.GongGaoXinXiOutput)
  SharedDtor();
}

void GongGaoXinXiOutput::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GongGaoXinXiOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GongGaoXinXiOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GongGaoXinXiOutput_descriptor_;
}

const GongGaoXinXiOutput& GongGaoXinXiOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhNewsInfo_2eproto();
  return *default_instance_;
}

GongGaoXinXiOutput* GongGaoXinXiOutput::default_instance_ = NULL;

GongGaoXinXiOutput* GongGaoXinXiOutput::New(::google::protobuf::Arena* arena) const {
  GongGaoXinXiOutput* n = new GongGaoXinXiOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GongGaoXinXiOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.GongGaoXinXiOutput)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_obj()) {
      obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    totalcount_ = GOOGLE_LONGLONG(0);
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GongGaoXinXiOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.GongGaoXinXiOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.GongGaoXinXiOutput.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TotalCount;
        break;
      }

      // required int64 TotalCount = 2;
      case 2: {
        if (tag == 16) {
         parse_TotalCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalcount_)));
          set_has_totalcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Data;
        break;
      }

      // repeated .dzhyun.GongGaoXinXi Data = 3;
      case 3: {
        if (tag == 26) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.GongGaoXinXiOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.GongGaoXinXiOutput)
  return false;
#undef DO_
}

void GongGaoXinXiOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.GongGaoXinXiOutput)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXiOutput.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // required int64 TotalCount = 2;
  if (has_totalcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->totalcount(), output);
  }

  // repeated .dzhyun.GongGaoXinXi Data = 3;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.GongGaoXinXiOutput)
}

::google::protobuf::uint8* GongGaoXinXiOutput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.GongGaoXinXiOutput)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXiOutput.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // required int64 TotalCount = 2;
  if (has_totalcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->totalcount(), target);
  }

  // repeated .dzhyun.GongGaoXinXi Data = 3;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.GongGaoXinXiOutput)
  return target;
}

int GongGaoXinXiOutput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:dzhyun.GongGaoXinXiOutput)
  int total_size = 0;

  if (has_obj()) {
    // required string Obj = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }

  if (has_totalcount()) {
    // required int64 TotalCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalcount());
  }

  return total_size;
}
int GongGaoXinXiOutput::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.GongGaoXinXiOutput)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string Obj = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());

    // required int64 TotalCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .dzhyun.GongGaoXinXi Data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GongGaoXinXiOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.GongGaoXinXiOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GongGaoXinXiOutput* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GongGaoXinXiOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.GongGaoXinXiOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.GongGaoXinXiOutput)
    MergeFrom(*source);
  }
}

void GongGaoXinXiOutput::MergeFrom(const GongGaoXinXiOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.GongGaoXinXiOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
    if (from.has_totalcount()) {
      set_totalcount(from.totalcount());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GongGaoXinXiOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.GongGaoXinXiOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongGaoXinXiOutput::CopyFrom(const GongGaoXinXiOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.GongGaoXinXiOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongGaoXinXiOutput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GongGaoXinXiOutput::Swap(GongGaoXinXiOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GongGaoXinXiOutput::InternalSwap(GongGaoXinXiOutput* other) {
  obj_.Swap(&other->obj_);
  std::swap(totalcount_, other->totalcount_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GongGaoXinXiOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GongGaoXinXiOutput_descriptor_;
  metadata.reflection = GongGaoXinXiOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GongGaoXinXiOutput

// required string Obj = 1;
bool GongGaoXinXiOutput::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GongGaoXinXiOutput::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void GongGaoXinXiOutput::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void GongGaoXinXiOutput::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& GongGaoXinXiOutput::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiOutput.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXiOutput::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXiOutput.Obj)
}
 void GongGaoXinXiOutput::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXiOutput.Obj)
}
 void GongGaoXinXiOutput::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXiOutput.Obj)
}
 ::std::string* GongGaoXinXiOutput::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXiOutput.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GongGaoXinXiOutput::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXiOutput.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXiOutput::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXiOutput.Obj)
}

// required int64 TotalCount = 2;
bool GongGaoXinXiOutput::has_totalcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GongGaoXinXiOutput::set_has_totalcount() {
  _has_bits_[0] |= 0x00000002u;
}
void GongGaoXinXiOutput::clear_has_totalcount() {
  _has_bits_[0] &= ~0x00000002u;
}
void GongGaoXinXiOutput::clear_totalcount() {
  totalcount_ = GOOGLE_LONGLONG(0);
  clear_has_totalcount();
}
 ::google::protobuf::int64 GongGaoXinXiOutput::totalcount() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiOutput.TotalCount)
  return totalcount_;
}
 void GongGaoXinXiOutput::set_totalcount(::google::protobuf::int64 value) {
  set_has_totalcount();
  totalcount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXiOutput.TotalCount)
}

// repeated .dzhyun.GongGaoXinXi Data = 3;
int GongGaoXinXiOutput::data_size() const {
  return data_.size();
}
void GongGaoXinXiOutput::clear_data() {
  data_.Clear();
}
const ::dzhyun::GongGaoXinXi& GongGaoXinXiOutput::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiOutput.Data)
  return data_.Get(index);
}
::dzhyun::GongGaoXinXi* GongGaoXinXiOutput::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXiOutput.Data)
  return data_.Mutable(index);
}
::dzhyun::GongGaoXinXi* GongGaoXinXiOutput::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.GongGaoXinXiOutput.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::GongGaoXinXi >*
GongGaoXinXiOutput::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.GongGaoXinXiOutput.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::GongGaoXinXi >&
GongGaoXinXiOutput::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.GongGaoXinXiOutput.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GongGaoXinXiZhongXin::kDateFieldNumber;
const int GongGaoXinXiZhongXin::kTitleFieldNumber;
const int GongGaoXinXiZhongXin::kContextFieldNumber;
const int GongGaoXinXiZhongXin::kSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GongGaoXinXiZhongXin::GongGaoXinXiZhongXin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.GongGaoXinXiZhongXin)
}

void GongGaoXinXiZhongXin::InitAsDefaultInstance() {
}

GongGaoXinXiZhongXin::GongGaoXinXiZhongXin(const GongGaoXinXiZhongXin& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.GongGaoXinXiZhongXin)
}

void GongGaoXinXiZhongXin::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GongGaoXinXiZhongXin::~GongGaoXinXiZhongXin() {
  // @@protoc_insertion_point(destructor:dzhyun.GongGaoXinXiZhongXin)
  SharedDtor();
}

void GongGaoXinXiZhongXin::SharedDtor() {
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GongGaoXinXiZhongXin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GongGaoXinXiZhongXin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GongGaoXinXiZhongXin_descriptor_;
}

const GongGaoXinXiZhongXin& GongGaoXinXiZhongXin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhNewsInfo_2eproto();
  return *default_instance_;
}

GongGaoXinXiZhongXin* GongGaoXinXiZhongXin::default_instance_ = NULL;

GongGaoXinXiZhongXin* GongGaoXinXiZhongXin::New(::google::protobuf::Arena* arena) const {
  GongGaoXinXiZhongXin* n = new GongGaoXinXiZhongXin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GongGaoXinXiZhongXin::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.GongGaoXinXiZhongXin)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_title()) {
      title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_context()) {
      context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_source()) {
      source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GongGaoXinXiZhongXin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.GongGaoXinXiZhongXin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string date = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.GongGaoXinXiZhongXin.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_title;
        break;
      }

      // optional string title = 2;
      case 2: {
        if (tag == 18) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.GongGaoXinXiZhongXin.title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_context;
        break;
      }

      // optional string context = 3;
      case 3: {
        if (tag == 26) {
         parse_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_context()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->context().data(), this->context().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.GongGaoXinXiZhongXin.context");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_source;
        break;
      }

      // optional string source = 4;
      case 4: {
        if (tag == 34) {
         parse_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source().data(), this->source().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.GongGaoXinXiZhongXin.source");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.GongGaoXinXiZhongXin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.GongGaoXinXiZhongXin)
  return false;
#undef DO_
}

void GongGaoXinXiZhongXin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.GongGaoXinXiZhongXin)
  // optional string date = 1;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXiZhongXin.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->date(), output);
  }

  // optional string title = 2;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXiZhongXin.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // optional string context = 3;
  if (has_context()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->context().data(), this->context().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXiZhongXin.context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->context(), output);
  }

  // optional string source = 4;
  if (has_source()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXiZhongXin.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->source(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.GongGaoXinXiZhongXin)
}

::google::protobuf::uint8* GongGaoXinXiZhongXin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.GongGaoXinXiZhongXin)
  // optional string date = 1;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXiZhongXin.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->date(), target);
  }

  // optional string title = 2;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXiZhongXin.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // optional string context = 3;
  if (has_context()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->context().data(), this->context().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXiZhongXin.context");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->context(), target);
  }

  // optional string source = 4;
  if (has_source()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.GongGaoXinXiZhongXin.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->source(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.GongGaoXinXiZhongXin)
  return target;
}

int GongGaoXinXiZhongXin::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.GongGaoXinXiZhongXin)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional string date = 1;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

    // optional string title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string context = 3;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->context());
    }

    // optional string source = 4;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GongGaoXinXiZhongXin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.GongGaoXinXiZhongXin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GongGaoXinXiZhongXin* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GongGaoXinXiZhongXin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.GongGaoXinXiZhongXin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.GongGaoXinXiZhongXin)
    MergeFrom(*source);
  }
}

void GongGaoXinXiZhongXin::MergeFrom(const GongGaoXinXiZhongXin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.GongGaoXinXiZhongXin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
    if (from.has_title()) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (from.has_context()) {
      set_has_context();
      context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
    }
    if (from.has_source()) {
      set_has_source();
      source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GongGaoXinXiZhongXin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.GongGaoXinXiZhongXin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongGaoXinXiZhongXin::CopyFrom(const GongGaoXinXiZhongXin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.GongGaoXinXiZhongXin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongGaoXinXiZhongXin::IsInitialized() const {

  return true;
}

void GongGaoXinXiZhongXin::Swap(GongGaoXinXiZhongXin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GongGaoXinXiZhongXin::InternalSwap(GongGaoXinXiZhongXin* other) {
  date_.Swap(&other->date_);
  title_.Swap(&other->title_);
  context_.Swap(&other->context_);
  source_.Swap(&other->source_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GongGaoXinXiZhongXin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GongGaoXinXiZhongXin_descriptor_;
  metadata.reflection = GongGaoXinXiZhongXin_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GongGaoXinXiZhongXin

// optional string date = 1;
bool GongGaoXinXiZhongXin::has_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GongGaoXinXiZhongXin::set_has_date() {
  _has_bits_[0] |= 0x00000001u;
}
void GongGaoXinXiZhongXin::clear_has_date() {
  _has_bits_[0] &= ~0x00000001u;
}
void GongGaoXinXiZhongXin::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& GongGaoXinXiZhongXin::date() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiZhongXin.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXiZhongXin::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXiZhongXin.date)
}
 void GongGaoXinXiZhongXin::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXiZhongXin.date)
}
 void GongGaoXinXiZhongXin::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXiZhongXin.date)
}
 ::std::string* GongGaoXinXiZhongXin::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXiZhongXin.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GongGaoXinXiZhongXin::release_date() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXiZhongXin.date)
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXiZhongXin::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXiZhongXin.date)
}

// optional string title = 2;
bool GongGaoXinXiZhongXin::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GongGaoXinXiZhongXin::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
void GongGaoXinXiZhongXin::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
void GongGaoXinXiZhongXin::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
 const ::std::string& GongGaoXinXiZhongXin::title() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiZhongXin.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXiZhongXin::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXiZhongXin.title)
}
 void GongGaoXinXiZhongXin::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXiZhongXin.title)
}
 void GongGaoXinXiZhongXin::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXiZhongXin.title)
}
 ::std::string* GongGaoXinXiZhongXin::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXiZhongXin.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GongGaoXinXiZhongXin::release_title() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXiZhongXin.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXiZhongXin::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXiZhongXin.title)
}

// optional string context = 3;
bool GongGaoXinXiZhongXin::has_context() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GongGaoXinXiZhongXin::set_has_context() {
  _has_bits_[0] |= 0x00000004u;
}
void GongGaoXinXiZhongXin::clear_has_context() {
  _has_bits_[0] &= ~0x00000004u;
}
void GongGaoXinXiZhongXin::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_context();
}
 const ::std::string& GongGaoXinXiZhongXin::context() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiZhongXin.context)
  return context_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXiZhongXin::set_context(const ::std::string& value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXiZhongXin.context)
}
 void GongGaoXinXiZhongXin::set_context(const char* value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXiZhongXin.context)
}
 void GongGaoXinXiZhongXin::set_context(const char* value, size_t size) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXiZhongXin.context)
}
 ::std::string* GongGaoXinXiZhongXin::mutable_context() {
  set_has_context();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXiZhongXin.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GongGaoXinXiZhongXin::release_context() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXiZhongXin.context)
  clear_has_context();
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXiZhongXin::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    set_has_context();
  } else {
    clear_has_context();
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXiZhongXin.context)
}

// optional string source = 4;
bool GongGaoXinXiZhongXin::has_source() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GongGaoXinXiZhongXin::set_has_source() {
  _has_bits_[0] |= 0x00000008u;
}
void GongGaoXinXiZhongXin::clear_has_source() {
  _has_bits_[0] &= ~0x00000008u;
}
void GongGaoXinXiZhongXin::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
 const ::std::string& GongGaoXinXiZhongXin::source() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiZhongXin.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXiZhongXin::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXiZhongXin.source)
}
 void GongGaoXinXiZhongXin::set_source(const char* value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXiZhongXin.source)
}
 void GongGaoXinXiZhongXin::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXiZhongXin.source)
}
 ::std::string* GongGaoXinXiZhongXin::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXiZhongXin.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GongGaoXinXiZhongXin::release_source() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXiZhongXin.source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GongGaoXinXiZhongXin::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXiZhongXin.source)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GongGaoXinXiZhongXinOutput::kTotalCountFieldNumber;
const int GongGaoXinXiZhongXinOutput::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GongGaoXinXiZhongXinOutput::GongGaoXinXiZhongXinOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.GongGaoXinXiZhongXinOutput)
}

void GongGaoXinXiZhongXinOutput::InitAsDefaultInstance() {
}

GongGaoXinXiZhongXinOutput::GongGaoXinXiZhongXinOutput(const GongGaoXinXiZhongXinOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.GongGaoXinXiZhongXinOutput)
}

void GongGaoXinXiZhongXinOutput::SharedCtor() {
  _cached_size_ = 0;
  totalcount_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GongGaoXinXiZhongXinOutput::~GongGaoXinXiZhongXinOutput() {
  // @@protoc_insertion_point(destructor:dzhyun.GongGaoXinXiZhongXinOutput)
  SharedDtor();
}

void GongGaoXinXiZhongXinOutput::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GongGaoXinXiZhongXinOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GongGaoXinXiZhongXinOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GongGaoXinXiZhongXinOutput_descriptor_;
}

const GongGaoXinXiZhongXinOutput& GongGaoXinXiZhongXinOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhNewsInfo_2eproto();
  return *default_instance_;
}

GongGaoXinXiZhongXinOutput* GongGaoXinXiZhongXinOutput::default_instance_ = NULL;

GongGaoXinXiZhongXinOutput* GongGaoXinXiZhongXinOutput::New(::google::protobuf::Arena* arena) const {
  GongGaoXinXiZhongXinOutput* n = new GongGaoXinXiZhongXinOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GongGaoXinXiZhongXinOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.GongGaoXinXiZhongXinOutput)
  totalcount_ = GOOGLE_LONGLONG(0);
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GongGaoXinXiZhongXinOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.GongGaoXinXiZhongXinOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 TotalCount = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalcount_)));
          set_has_totalcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .dzhyun.GongGaoXinXiZhongXin data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.GongGaoXinXiZhongXinOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.GongGaoXinXiZhongXinOutput)
  return false;
#undef DO_
}

void GongGaoXinXiZhongXinOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.GongGaoXinXiZhongXinOutput)
  // required int64 TotalCount = 1;
  if (has_totalcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->totalcount(), output);
  }

  // repeated .dzhyun.GongGaoXinXiZhongXin data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.GongGaoXinXiZhongXinOutput)
}

::google::protobuf::uint8* GongGaoXinXiZhongXinOutput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.GongGaoXinXiZhongXinOutput)
  // required int64 TotalCount = 1;
  if (has_totalcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->totalcount(), target);
  }

  // repeated .dzhyun.GongGaoXinXiZhongXin data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.GongGaoXinXiZhongXinOutput)
  return target;
}

int GongGaoXinXiZhongXinOutput::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.GongGaoXinXiZhongXinOutput)
  int total_size = 0;

  // required int64 TotalCount = 1;
  if (has_totalcount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalcount());
  }
  // repeated .dzhyun.GongGaoXinXiZhongXin data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GongGaoXinXiZhongXinOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.GongGaoXinXiZhongXinOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GongGaoXinXiZhongXinOutput* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GongGaoXinXiZhongXinOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.GongGaoXinXiZhongXinOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.GongGaoXinXiZhongXinOutput)
    MergeFrom(*source);
  }
}

void GongGaoXinXiZhongXinOutput::MergeFrom(const GongGaoXinXiZhongXinOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.GongGaoXinXiZhongXinOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_totalcount()) {
      set_totalcount(from.totalcount());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GongGaoXinXiZhongXinOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.GongGaoXinXiZhongXinOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongGaoXinXiZhongXinOutput::CopyFrom(const GongGaoXinXiZhongXinOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.GongGaoXinXiZhongXinOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongGaoXinXiZhongXinOutput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GongGaoXinXiZhongXinOutput::Swap(GongGaoXinXiZhongXinOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GongGaoXinXiZhongXinOutput::InternalSwap(GongGaoXinXiZhongXinOutput* other) {
  std::swap(totalcount_, other->totalcount_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GongGaoXinXiZhongXinOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GongGaoXinXiZhongXinOutput_descriptor_;
  metadata.reflection = GongGaoXinXiZhongXinOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GongGaoXinXiZhongXinOutput

// required int64 TotalCount = 1;
bool GongGaoXinXiZhongXinOutput::has_totalcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GongGaoXinXiZhongXinOutput::set_has_totalcount() {
  _has_bits_[0] |= 0x00000001u;
}
void GongGaoXinXiZhongXinOutput::clear_has_totalcount() {
  _has_bits_[0] &= ~0x00000001u;
}
void GongGaoXinXiZhongXinOutput::clear_totalcount() {
  totalcount_ = GOOGLE_LONGLONG(0);
  clear_has_totalcount();
}
 ::google::protobuf::int64 GongGaoXinXiZhongXinOutput::totalcount() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiZhongXinOutput.TotalCount)
  return totalcount_;
}
 void GongGaoXinXiZhongXinOutput::set_totalcount(::google::protobuf::int64 value) {
  set_has_totalcount();
  totalcount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXiZhongXinOutput.TotalCount)
}

// repeated .dzhyun.GongGaoXinXiZhongXin data = 2;
int GongGaoXinXiZhongXinOutput::data_size() const {
  return data_.size();
}
void GongGaoXinXiZhongXinOutput::clear_data() {
  data_.Clear();
}
const ::dzhyun::GongGaoXinXiZhongXin& GongGaoXinXiZhongXinOutput::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiZhongXinOutput.data)
  return data_.Get(index);
}
::dzhyun::GongGaoXinXiZhongXin* GongGaoXinXiZhongXinOutput::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXiZhongXinOutput.data)
  return data_.Mutable(index);
}
::dzhyun::GongGaoXinXiZhongXin* GongGaoXinXiZhongXinOutput::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.GongGaoXinXiZhongXinOutput.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::GongGaoXinXiZhongXin >*
GongGaoXinXiZhongXinOutput::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.GongGaoXinXiZhongXinOutput.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::GongGaoXinXiZhongXin >&
GongGaoXinXiZhongXinOutput::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.GongGaoXinXiZhongXinOutput.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dzhyun

// @@protoc_insertion_point(global_scope)
