// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dzhua.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dzhua.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dzhyun {

namespace {

const ::google::protobuf::Descriptor* UAResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UAResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChildResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChildResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GroupResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GroupResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dzhua_2eproto() {
  protobuf_AddDesc_dzhua_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dzhua.proto");
  GOOGLE_CHECK(file != NULL);
  UAResponse_descriptor_ = file->message_type(0);
  static const int UAResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAResponse, qid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAResponse, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAResponse, counter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAResponse, data_),
  };
  UAResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UAResponse_descriptor_,
      UAResponse::default_instance_,
      UAResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(UAResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAResponse, _internal_metadata_),
      -1);
  ChildResponse_descriptor_ = file->message_type(1);
  static const int ChildResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildResponse, no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildResponse, data_),
  };
  ChildResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChildResponse_descriptor_,
      ChildResponse::default_instance_,
      ChildResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(ChildResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildResponse, _internal_metadata_),
      -1);
  GroupResponse_descriptor_ = file->message_type(2);
  static const int GroupResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupResponse, childres_),
  };
  GroupResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GroupResponse_descriptor_,
      GroupResponse::default_instance_,
      GroupResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(GroupResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupResponse, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dzhua_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UAResponse_descriptor_, &UAResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChildResponse_descriptor_, &ChildResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GroupResponse_descriptor_, &GroupResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dzhua_2eproto() {
  delete UAResponse::default_instance_;
  delete UAResponse_reflection_;
  delete ChildResponse::default_instance_;
  delete ChildResponse_reflection_;
  delete GroupResponse::default_instance_;
  delete GroupResponse_reflection_;
}

void protobuf_AddDesc_dzhua_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013dzhua.proto\022\006dzhyun\"E\n\nUAResponse\022\013\n\003Q"
    "id\030\001 \002(\t\022\013\n\003Err\030\002 \002(\005\022\017\n\007Counter\030\003 \002(\r\022\014"
    "\n\004Data\030\004 \001(\014\")\n\rChildResponse\022\n\n\002No\030\001 \002("
    "\005\022\014\n\004Data\030\002 \001(\014\"8\n\rGroupResponse\022\'\n\010Chil"
    "dRes\030\001 \003(\0132\025.dzhyun.ChildResponseB\022\n\020com"
    ".dzhyun.proto", 213);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dzhua.proto", &protobuf_RegisterTypes);
  UAResponse::default_instance_ = new UAResponse();
  ChildResponse::default_instance_ = new ChildResponse();
  GroupResponse::default_instance_ = new GroupResponse();
  UAResponse::default_instance_->InitAsDefaultInstance();
  ChildResponse::default_instance_->InitAsDefaultInstance();
  GroupResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dzhua_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dzhua_2eproto {
  StaticDescriptorInitializer_dzhua_2eproto() {
    protobuf_AddDesc_dzhua_2eproto();
  }
} static_descriptor_initializer_dzhua_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UAResponse::kQidFieldNumber;
const int UAResponse::kErrFieldNumber;
const int UAResponse::kCounterFieldNumber;
const int UAResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UAResponse::UAResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.UAResponse)
}

void UAResponse::InitAsDefaultInstance() {
}

UAResponse::UAResponse(const UAResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.UAResponse)
}

void UAResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  qid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_ = 0;
  counter_ = 0u;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UAResponse::~UAResponse() {
  // @@protoc_insertion_point(destructor:dzhyun.UAResponse)
  SharedDtor();
}

void UAResponse::SharedDtor() {
  qid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UAResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UAResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UAResponse_descriptor_;
}

const UAResponse& UAResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhua_2eproto();
  return *default_instance_;
}

UAResponse* UAResponse::default_instance_ = NULL;

UAResponse* UAResponse::New(::google::protobuf::Arena* arena) const {
  UAResponse* n = new UAResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UAResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.UAResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UAResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UAResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(err_, counter_);
    if (has_qid()) {
      qid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_data()) {
      data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UAResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.UAResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Qid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->qid().data(), this->qid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.UAResponse.Qid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Err;
        break;
      }

      // required int32 Err = 2;
      case 2: {
        if (tag == 16) {
         parse_Err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Counter;
        break;
      }

      // required uint32 Counter = 3;
      case 3: {
        if (tag == 24) {
         parse_Counter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &counter_)));
          set_has_counter();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Data;
        break;
      }

      // optional bytes Data = 4;
      case 4: {
        if (tag == 34) {
         parse_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.UAResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.UAResponse)
  return false;
#undef DO_
}

void UAResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.UAResponse)
  // required string Qid = 1;
  if (has_qid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->qid().data(), this->qid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.UAResponse.Qid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->qid(), output);
  }

  // required int32 Err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->err(), output);
  }

  // required uint32 Counter = 3;
  if (has_counter()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->counter(), output);
  }

  // optional bytes Data = 4;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.UAResponse)
}

::google::protobuf::uint8* UAResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.UAResponse)
  // required string Qid = 1;
  if (has_qid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->qid().data(), this->qid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.UAResponse.Qid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->qid(), target);
  }

  // required int32 Err = 2;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->err(), target);
  }

  // required uint32 Counter = 3;
  if (has_counter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->counter(), target);
  }

  // optional bytes Data = 4;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.UAResponse)
  return target;
}

int UAResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:dzhyun.UAResponse)
  int total_size = 0;

  if (has_qid()) {
    // required string Qid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->qid());
  }

  if (has_err()) {
    // required int32 Err = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  if (has_counter()) {
    // required uint32 Counter = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->counter());
  }

  return total_size;
}
int UAResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.UAResponse)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string Qid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->qid());

    // required int32 Err = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());

    // required uint32 Counter = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->counter());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes Data = 4;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UAResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.UAResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UAResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UAResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.UAResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.UAResponse)
    MergeFrom(*source);
  }
}

void UAResponse::MergeFrom(const UAResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.UAResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qid()) {
      set_has_qid();
      qid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qid_);
    }
    if (from.has_err()) {
      set_err(from.err());
    }
    if (from.has_counter()) {
      set_counter(from.counter());
    }
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UAResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.UAResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UAResponse::CopyFrom(const UAResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.UAResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UAResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void UAResponse::Swap(UAResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UAResponse::InternalSwap(UAResponse* other) {
  qid_.Swap(&other->qid_);
  std::swap(err_, other->err_);
  std::swap(counter_, other->counter_);
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UAResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UAResponse_descriptor_;
  metadata.reflection = UAResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UAResponse

// required string Qid = 1;
bool UAResponse::has_qid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UAResponse::set_has_qid() {
  _has_bits_[0] |= 0x00000001u;
}
void UAResponse::clear_has_qid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UAResponse::clear_qid() {
  qid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qid();
}
 const ::std::string& UAResponse::qid() const {
  // @@protoc_insertion_point(field_get:dzhyun.UAResponse.Qid)
  return qid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UAResponse::set_qid(const ::std::string& value) {
  set_has_qid();
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.UAResponse.Qid)
}
 void UAResponse::set_qid(const char* value) {
  set_has_qid();
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.UAResponse.Qid)
}
 void UAResponse::set_qid(const char* value, size_t size) {
  set_has_qid();
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.UAResponse.Qid)
}
 ::std::string* UAResponse::mutable_qid() {
  set_has_qid();
  // @@protoc_insertion_point(field_mutable:dzhyun.UAResponse.Qid)
  return qid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UAResponse::release_qid() {
  // @@protoc_insertion_point(field_release:dzhyun.UAResponse.Qid)
  clear_has_qid();
  return qid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UAResponse::set_allocated_qid(::std::string* qid) {
  if (qid != NULL) {
    set_has_qid();
  } else {
    clear_has_qid();
  }
  qid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qid);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.UAResponse.Qid)
}

// required int32 Err = 2;
bool UAResponse::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UAResponse::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
void UAResponse::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
void UAResponse::clear_err() {
  err_ = 0;
  clear_has_err();
}
 ::google::protobuf::int32 UAResponse::err() const {
  // @@protoc_insertion_point(field_get:dzhyun.UAResponse.Err)
  return err_;
}
 void UAResponse::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.UAResponse.Err)
}

// required uint32 Counter = 3;
bool UAResponse::has_counter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UAResponse::set_has_counter() {
  _has_bits_[0] |= 0x00000004u;
}
void UAResponse::clear_has_counter() {
  _has_bits_[0] &= ~0x00000004u;
}
void UAResponse::clear_counter() {
  counter_ = 0u;
  clear_has_counter();
}
 ::google::protobuf::uint32 UAResponse::counter() const {
  // @@protoc_insertion_point(field_get:dzhyun.UAResponse.Counter)
  return counter_;
}
 void UAResponse::set_counter(::google::protobuf::uint32 value) {
  set_has_counter();
  counter_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.UAResponse.Counter)
}

// optional bytes Data = 4;
bool UAResponse::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UAResponse::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
void UAResponse::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
void UAResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& UAResponse::data() const {
  // @@protoc_insertion_point(field_get:dzhyun.UAResponse.Data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UAResponse::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.UAResponse.Data)
}
 void UAResponse::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.UAResponse.Data)
}
 void UAResponse::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.UAResponse.Data)
}
 ::std::string* UAResponse::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:dzhyun.UAResponse.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UAResponse::release_data() {
  // @@protoc_insertion_point(field_release:dzhyun.UAResponse.Data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UAResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.UAResponse.Data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChildResponse::kNoFieldNumber;
const int ChildResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChildResponse::ChildResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.ChildResponse)
}

void ChildResponse::InitAsDefaultInstance() {
}

ChildResponse::ChildResponse(const ChildResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.ChildResponse)
}

void ChildResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  no_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChildResponse::~ChildResponse() {
  // @@protoc_insertion_point(destructor:dzhyun.ChildResponse)
  SharedDtor();
}

void ChildResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ChildResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChildResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChildResponse_descriptor_;
}

const ChildResponse& ChildResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhua_2eproto();
  return *default_instance_;
}

ChildResponse* ChildResponse::default_instance_ = NULL;

ChildResponse* ChildResponse::New(::google::protobuf::Arena* arena) const {
  ChildResponse* n = new ChildResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.ChildResponse)
  if (_has_bits_[0 / 32] & 3u) {
    no_ = 0;
    if (has_data()) {
      data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ChildResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.ChildResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 No = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_)));
          set_has_no();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // optional bytes Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.ChildResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.ChildResponse)
  return false;
#undef DO_
}

void ChildResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.ChildResponse)
  // required int32 No = 1;
  if (has_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->no(), output);
  }

  // optional bytes Data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.ChildResponse)
}

::google::protobuf::uint8* ChildResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.ChildResponse)
  // required int32 No = 1;
  if (has_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->no(), target);
  }

  // optional bytes Data = 2;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.ChildResponse)
  return target;
}

int ChildResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.ChildResponse)
  int total_size = 0;

  // required int32 No = 1;
  if (has_no()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->no());
  }
  // optional bytes Data = 2;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChildResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.ChildResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ChildResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChildResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.ChildResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.ChildResponse)
    MergeFrom(*source);
  }
}

void ChildResponse::MergeFrom(const ChildResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.ChildResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_no()) {
      set_no(from.no());
    }
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ChildResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.ChildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChildResponse::CopyFrom(const ChildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.ChildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChildResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ChildResponse::Swap(ChildResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChildResponse::InternalSwap(ChildResponse* other) {
  std::swap(no_, other->no_);
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChildResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChildResponse_descriptor_;
  metadata.reflection = ChildResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChildResponse

// required int32 No = 1;
bool ChildResponse::has_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChildResponse::set_has_no() {
  _has_bits_[0] |= 0x00000001u;
}
void ChildResponse::clear_has_no() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChildResponse::clear_no() {
  no_ = 0;
  clear_has_no();
}
 ::google::protobuf::int32 ChildResponse::no() const {
  // @@protoc_insertion_point(field_get:dzhyun.ChildResponse.No)
  return no_;
}
 void ChildResponse::set_no(::google::protobuf::int32 value) {
  set_has_no();
  no_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.ChildResponse.No)
}

// optional bytes Data = 2;
bool ChildResponse::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ChildResponse::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
void ChildResponse::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void ChildResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& ChildResponse::data() const {
  // @@protoc_insertion_point(field_get:dzhyun.ChildResponse.Data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChildResponse::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.ChildResponse.Data)
}
 void ChildResponse::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.ChildResponse.Data)
}
 void ChildResponse::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.ChildResponse.Data)
}
 ::std::string* ChildResponse::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:dzhyun.ChildResponse.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChildResponse::release_data() {
  // @@protoc_insertion_point(field_release:dzhyun.ChildResponse.Data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChildResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.ChildResponse.Data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupResponse::kChildResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupResponse::GroupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.GroupResponse)
}

void GroupResponse::InitAsDefaultInstance() {
}

GroupResponse::GroupResponse(const GroupResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.GroupResponse)
}

void GroupResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GroupResponse::~GroupResponse() {
  // @@protoc_insertion_point(destructor:dzhyun.GroupResponse)
  SharedDtor();
}

void GroupResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GroupResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GroupResponse_descriptor_;
}

const GroupResponse& GroupResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhua_2eproto();
  return *default_instance_;
}

GroupResponse* GroupResponse::default_instance_ = NULL;

GroupResponse* GroupResponse::New(::google::protobuf::Arena* arena) const {
  GroupResponse* n = new GroupResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.GroupResponse)
  childres_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GroupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.GroupResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dzhyun.ChildResponse ChildRes = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ChildRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_childres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ChildRes;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.GroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.GroupResponse)
  return false;
#undef DO_
}

void GroupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.GroupResponse)
  // repeated .dzhyun.ChildResponse ChildRes = 1;
  for (unsigned int i = 0, n = this->childres_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->childres(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.GroupResponse)
}

::google::protobuf::uint8* GroupResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.GroupResponse)
  // repeated .dzhyun.ChildResponse ChildRes = 1;
  for (unsigned int i = 0, n = this->childres_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->childres(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.GroupResponse)
  return target;
}

int GroupResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.GroupResponse)
  int total_size = 0;

  // repeated .dzhyun.ChildResponse ChildRes = 1;
  total_size += 1 * this->childres_size();
  for (int i = 0; i < this->childres_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->childres(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.GroupResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GroupResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.GroupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.GroupResponse)
    MergeFrom(*source);
  }
}

void GroupResponse::MergeFrom(const GroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.GroupResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  childres_.MergeFrom(from.childres_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GroupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.GroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupResponse::CopyFrom(const GroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.GroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupResponse::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->childres())) return false;
  return true;
}

void GroupResponse::Swap(GroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupResponse::InternalSwap(GroupResponse* other) {
  childres_.UnsafeArenaSwap(&other->childres_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GroupResponse_descriptor_;
  metadata.reflection = GroupResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupResponse

// repeated .dzhyun.ChildResponse ChildRes = 1;
int GroupResponse::childres_size() const {
  return childres_.size();
}
void GroupResponse::clear_childres() {
  childres_.Clear();
}
const ::dzhyun::ChildResponse& GroupResponse::childres(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.GroupResponse.ChildRes)
  return childres_.Get(index);
}
::dzhyun::ChildResponse* GroupResponse::mutable_childres(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.GroupResponse.ChildRes)
  return childres_.Mutable(index);
}
::dzhyun::ChildResponse* GroupResponse::add_childres() {
  // @@protoc_insertion_point(field_add:dzhyun.GroupResponse.ChildRes)
  return childres_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::ChildResponse >*
GroupResponse::mutable_childres() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.GroupResponse.ChildRes)
  return &childres_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::ChildResponse >&
GroupResponse::childres() const {
  // @@protoc_insertion_point(field_list:dzhyun.GroupResponse.ChildRes)
  return childres_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dzhyun

// @@protoc_insertion_point(global_scope)
