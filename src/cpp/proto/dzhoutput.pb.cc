// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dzhoutput.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dzhoutput.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dzhyun {

namespace {

const ::google::protobuf::Descriptor* QuoteDyna_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteDyna_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteDynaSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteDynaSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteDynaOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteDynaOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteKline_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteKline_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteKlineSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteKlineSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteKlineOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteKlineOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteTick_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteTick_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteTickSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteTickSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteTickOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteTickOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteMin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteMin_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteMinSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteMinSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteMinSingle_JiaoYiShiJianDuanJieGou_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteMinSingle_JiaoYiShiJianDuanJieGou_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteMinOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteMinOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteBOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteBOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteBOrderSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteBOrderSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteBOrderOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteBOrderOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteDivid_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteDivid_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteDividSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteDividSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteDividOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteDividOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteDynaMinSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteDynaMinSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteReportSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteReportSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteQueueSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteQueueSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteHistoryMinSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteHistoryMinSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteFundFlow_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteFundFlow_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteFundFlowSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteFundFlowSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteQueueMinSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteQueueMinSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteBOrderMin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteBOrderMin_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteBOrderMinSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteBOrderMinSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteHkQueueSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteHkQueueSingle_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dzhoutput_2eproto() {
  protobuf_AddDesc_dzhoutput_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dzhoutput.proto");
  GOOGLE_CHECK(file != NULL);
  QuoteDyna_descriptor_ = file->message_type(0);
  static const int QuoteDyna_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDyna, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDyna, lastclose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDyna, high_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDyna, open_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDyna, low_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDyna, new__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDyna, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDyna, amount_),
  };
  QuoteDyna_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteDyna_descriptor_,
      QuoteDyna::default_instance_,
      QuoteDyna_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDyna, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteDyna),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDyna, _internal_metadata_),
      -1);
  QuoteDynaSingle_descriptor_ = file->message_type(1);
  static const int QuoteDynaSingle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDynaSingle, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDynaSingle, data_),
  };
  QuoteDynaSingle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteDynaSingle_descriptor_,
      QuoteDynaSingle::default_instance_,
      QuoteDynaSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDynaSingle, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteDynaSingle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDynaSingle, _internal_metadata_),
      -1);
  QuoteDynaOutput_descriptor_ = file->message_type(2);
  static const int QuoteDynaOutput_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDynaOutput, results_),
  };
  QuoteDynaOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteDynaOutput_descriptor_,
      QuoteDynaOutput::default_instance_,
      QuoteDynaOutput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDynaOutput, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteDynaOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDynaOutput, _internal_metadata_),
      -1);
  QuoteKline_descriptor_ = file->message_type(3);
  static const int QuoteKline_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKline, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKline, high_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKline, open_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKline, low_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKline, close_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKline, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKline, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKline, tickcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKline, advance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKline, decline_),
  };
  QuoteKline_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteKline_descriptor_,
      QuoteKline::default_instance_,
      QuoteKline_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKline, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteKline),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKline, _internal_metadata_),
      -1);
  QuoteKlineSingle_descriptor_ = file->message_type(4);
  static const int QuoteKlineSingle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKlineSingle, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKlineSingle, data_),
  };
  QuoteKlineSingle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteKlineSingle_descriptor_,
      QuoteKlineSingle::default_instance_,
      QuoteKlineSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKlineSingle, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteKlineSingle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKlineSingle, _internal_metadata_),
      -1);
  QuoteKlineOutput_descriptor_ = file->message_type(5);
  static const int QuoteKlineOutput_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKlineOutput, results_),
  };
  QuoteKlineOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteKlineOutput_descriptor_,
      QuoteKlineOutput::default_instance_,
      QuoteKlineOutput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKlineOutput, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteKlineOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteKlineOutput, _internal_metadata_),
      -1);
  QuoteTick_descriptor_ = file->message_type(6);
  static const int QuoteTick_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTick, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTick, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTick, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTick, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTick, tickcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTick, buyprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTick, buyvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTick, sellprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTick, sellvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTick, outter_),
  };
  QuoteTick_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteTick_descriptor_,
      QuoteTick::default_instance_,
      QuoteTick_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTick, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteTick),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTick, _internal_metadata_),
      -1);
  QuoteTickSingle_descriptor_ = file->message_type(7);
  static const int QuoteTickSingle_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTickSingle, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTickSingle, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTickSingle, qingpan_),
  };
  QuoteTickSingle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteTickSingle_descriptor_,
      QuoteTickSingle::default_instance_,
      QuoteTickSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTickSingle, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteTickSingle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTickSingle, _internal_metadata_),
      -1);
  QuoteTickOutput_descriptor_ = file->message_type(8);
  static const int QuoteTickOutput_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTickOutput, results_),
  };
  QuoteTickOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteTickOutput_descriptor_,
      QuoteTickOutput::default_instance_,
      QuoteTickOutput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTickOutput, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteTickOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteTickOutput, _internal_metadata_),
      -1);
  QuoteMin_descriptor_ = file->message_type(9);
  static const int QuoteMin_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMin, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMin, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMin, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMin, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMin, tickcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMin, buyprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMin, buyvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMin, sellprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMin, sellvolume_),
  };
  QuoteMin_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteMin_descriptor_,
      QuoteMin::default_instance_,
      QuoteMin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMin, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteMin),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMin, _internal_metadata_),
      -1);
  QuoteMinSingle_descriptor_ = file->message_type(10);
  static const int QuoteMinSingle_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle, riqi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle, shiqu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle, jihejingjiadianshu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle, jiaoyishijianduan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle, zuoshou_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle, qingpan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle, zuorijiesuanjia_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle, lishifenshi_),
  };
  QuoteMinSingle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteMinSingle_descriptor_,
      QuoteMinSingle::default_instance_,
      QuoteMinSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteMinSingle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle, _internal_metadata_),
      -1);
  QuoteMinSingle_JiaoYiShiJianDuanJieGou_descriptor_ = QuoteMinSingle_descriptor_->nested_type(0);
  static const int QuoteMinSingle_JiaoYiShiJianDuanJieGou_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle_JiaoYiShiJianDuanJieGou, kaishishijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle_JiaoYiShiJianDuanJieGou, jieshushijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle_JiaoYiShiJianDuanJieGou, kaishiriqi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle_JiaoYiShiJianDuanJieGou, jieshuriqi_),
  };
  QuoteMinSingle_JiaoYiShiJianDuanJieGou_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteMinSingle_JiaoYiShiJianDuanJieGou_descriptor_,
      QuoteMinSingle_JiaoYiShiJianDuanJieGou::default_instance_,
      QuoteMinSingle_JiaoYiShiJianDuanJieGou_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle_JiaoYiShiJianDuanJieGou, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteMinSingle_JiaoYiShiJianDuanJieGou),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinSingle_JiaoYiShiJianDuanJieGou, _internal_metadata_),
      -1);
  QuoteMinOutput_descriptor_ = file->message_type(11);
  static const int QuoteMinOutput_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinOutput, results_),
  };
  QuoteMinOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteMinOutput_descriptor_,
      QuoteMinOutput::default_instance_,
      QuoteMinOutput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinOutput, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteMinOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteMinOutput, _internal_metadata_),
      -1);
  QuoteBOrder_descriptor_ = file->message_type(12);
  static const int QuoteBOrder_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, shijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, weituomairu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, weituomaichu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, mairuzhongdanbili_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, mairudadanbili_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, mairutedadanbili_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, maichuzhongdanbili_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, maichudadanbili_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, maichutedadanbili_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, duanxianmairu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, duanxianmaichu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, duanxianchihuo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, duanxiantuhuo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, dadanliurujine_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, dadanliuchujine_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, dadanjingliurujine_),
  };
  QuoteBOrder_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteBOrder_descriptor_,
      QuoteBOrder::default_instance_,
      QuoteBOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteBOrder),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrder, _internal_metadata_),
      -1);
  QuoteBOrderSingle_descriptor_ = file->message_type(13);
  static const int QuoteBOrderSingle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderSingle, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderSingle, data_),
  };
  QuoteBOrderSingle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteBOrderSingle_descriptor_,
      QuoteBOrderSingle::default_instance_,
      QuoteBOrderSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderSingle, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteBOrderSingle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderSingle, _internal_metadata_),
      -1);
  QuoteBOrderOutput_descriptor_ = file->message_type(14);
  static const int QuoteBOrderOutput_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderOutput, results_),
  };
  QuoteBOrderOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteBOrderOutput_descriptor_,
      QuoteBOrderOutput::default_instance_,
      QuoteBOrderOutput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderOutput, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteBOrderOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderOutput, _internal_metadata_),
      -1);
  QuoteDivid_descriptor_ = file->message_type(15);
  static const int QuoteDivid_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDivid, shijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDivid, chuquanchengshu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDivid, chuquanpianyi_),
  };
  QuoteDivid_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteDivid_descriptor_,
      QuoteDivid::default_instance_,
      QuoteDivid_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDivid, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteDivid),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDivid, _internal_metadata_),
      -1);
  QuoteDividSingle_descriptor_ = file->message_type(16);
  static const int QuoteDividSingle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDividSingle, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDividSingle, data_),
  };
  QuoteDividSingle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteDividSingle_descriptor_,
      QuoteDividSingle::default_instance_,
      QuoteDividSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDividSingle, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteDividSingle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDividSingle, _internal_metadata_),
      -1);
  QuoteDividOutput_descriptor_ = file->message_type(17);
  static const int QuoteDividOutput_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDividOutput, results_),
  };
  QuoteDividOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteDividOutput_descriptor_,
      QuoteDividOutput::default_instance_,
      QuoteDividOutput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDividOutput, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteDividOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDividOutput, _internal_metadata_),
      -1);
  QuoteDynaMinSingle_descriptor_ = file->message_type(18);
  static const int QuoteDynaMinSingle_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDynaMinSingle, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDynaMinSingle, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDynaMinSingle, qingpan_),
  };
  QuoteDynaMinSingle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteDynaMinSingle_descriptor_,
      QuoteDynaMinSingle::default_instance_,
      QuoteDynaMinSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDynaMinSingle, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteDynaMinSingle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDynaMinSingle, _internal_metadata_),
      -1);
  QuoteReportSingle_descriptor_ = file->message_type(19);
  static const int QuoteReportSingle_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteReportSingle, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteReportSingle, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteReportSingle, qingpan_),
  };
  QuoteReportSingle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteReportSingle_descriptor_,
      QuoteReportSingle::default_instance_,
      QuoteReportSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteReportSingle, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteReportSingle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteReportSingle, _internal_metadata_),
      -1);
  QuoteQueueSingle_descriptor_ = file->message_type(20);
  static const int QuoteQueueSingle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteQueueSingle, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteQueueSingle, data_),
  };
  QuoteQueueSingle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteQueueSingle_descriptor_,
      QuoteQueueSingle::default_instance_,
      QuoteQueueSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteQueueSingle, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteQueueSingle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteQueueSingle, _internal_metadata_),
      -1);
  QuoteHistoryMinSingle_descriptor_ = file->message_type(21);
  static const int QuoteHistoryMinSingle_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteHistoryMinSingle, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteHistoryMinSingle, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteHistoryMinSingle, zuoshou_),
  };
  QuoteHistoryMinSingle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteHistoryMinSingle_descriptor_,
      QuoteHistoryMinSingle::default_instance_,
      QuoteHistoryMinSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteHistoryMinSingle, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteHistoryMinSingle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteHistoryMinSingle, _internal_metadata_),
      -1);
  QuoteFundFlow_descriptor_ = file->message_type(22);
  static const int QuoteFundFlow_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteFundFlow, shijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteFundFlow, dadanliurujine_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteFundFlow, dadanliuchujine_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteFundFlow, dadanjingliurujine_),
  };
  QuoteFundFlow_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteFundFlow_descriptor_,
      QuoteFundFlow::default_instance_,
      QuoteFundFlow_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteFundFlow, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteFundFlow),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteFundFlow, _internal_metadata_),
      -1);
  QuoteFundFlowSingle_descriptor_ = file->message_type(23);
  static const int QuoteFundFlowSingle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteFundFlowSingle, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteFundFlowSingle, data_),
  };
  QuoteFundFlowSingle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteFundFlowSingle_descriptor_,
      QuoteFundFlowSingle::default_instance_,
      QuoteFundFlowSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteFundFlowSingle, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteFundFlowSingle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteFundFlowSingle, _internal_metadata_),
      -1);
  QuoteQueueMinSingle_descriptor_ = file->message_type(24);
  static const int QuoteQueueMinSingle_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteQueueMinSingle, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteQueueMinSingle, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteQueueMinSingle, qingpan_),
  };
  QuoteQueueMinSingle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteQueueMinSingle_descriptor_,
      QuoteQueueMinSingle::default_instance_,
      QuoteQueueMinSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteQueueMinSingle, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteQueueMinSingle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteQueueMinSingle, _internal_metadata_),
      -1);
  QuoteBOrderMin_descriptor_ = file->message_type(25);
  static const int QuoteBOrderMin_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderMin, shijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderMin, jingmairutedadanbili_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderMin, jingmairudadanbili_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderMin, jingmairuzhongdanbili_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderMin, jingmairuxiaodanbili_),
  };
  QuoteBOrderMin_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteBOrderMin_descriptor_,
      QuoteBOrderMin::default_instance_,
      QuoteBOrderMin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderMin, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteBOrderMin),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderMin, _internal_metadata_),
      -1);
  QuoteBOrderMinSingle_descriptor_ = file->message_type(26);
  static const int QuoteBOrderMinSingle_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderMinSingle, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderMinSingle, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderMinSingle, qingpan_),
  };
  QuoteBOrderMinSingle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteBOrderMinSingle_descriptor_,
      QuoteBOrderMinSingle::default_instance_,
      QuoteBOrderMinSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderMinSingle, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteBOrderMinSingle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteBOrderMinSingle, _internal_metadata_),
      -1);
  QuoteHkQueueSingle_descriptor_ = file->message_type(27);
  static const int QuoteHkQueueSingle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteHkQueueSingle, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteHkQueueSingle, data_),
  };
  QuoteHkQueueSingle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteHkQueueSingle_descriptor_,
      QuoteHkQueueSingle::default_instance_,
      QuoteHkQueueSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteHkQueueSingle, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuoteHkQueueSingle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteHkQueueSingle, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dzhoutput_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteDyna_descriptor_, &QuoteDyna::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteDynaSingle_descriptor_, &QuoteDynaSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteDynaOutput_descriptor_, &QuoteDynaOutput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteKline_descriptor_, &QuoteKline::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteKlineSingle_descriptor_, &QuoteKlineSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteKlineOutput_descriptor_, &QuoteKlineOutput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteTick_descriptor_, &QuoteTick::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteTickSingle_descriptor_, &QuoteTickSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteTickOutput_descriptor_, &QuoteTickOutput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteMin_descriptor_, &QuoteMin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteMinSingle_descriptor_, &QuoteMinSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteMinSingle_JiaoYiShiJianDuanJieGou_descriptor_, &QuoteMinSingle_JiaoYiShiJianDuanJieGou::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteMinOutput_descriptor_, &QuoteMinOutput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteBOrder_descriptor_, &QuoteBOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteBOrderSingle_descriptor_, &QuoteBOrderSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteBOrderOutput_descriptor_, &QuoteBOrderOutput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteDivid_descriptor_, &QuoteDivid::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteDividSingle_descriptor_, &QuoteDividSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteDividOutput_descriptor_, &QuoteDividOutput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteDynaMinSingle_descriptor_, &QuoteDynaMinSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteReportSingle_descriptor_, &QuoteReportSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteQueueSingle_descriptor_, &QuoteQueueSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteHistoryMinSingle_descriptor_, &QuoteHistoryMinSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteFundFlow_descriptor_, &QuoteFundFlow::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteFundFlowSingle_descriptor_, &QuoteFundFlowSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteQueueMinSingle_descriptor_, &QuoteQueueMinSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteBOrderMin_descriptor_, &QuoteBOrderMin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteBOrderMinSingle_descriptor_, &QuoteBOrderMinSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteHkQueueSingle_descriptor_, &QuoteHkQueueSingle::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dzhoutput_2eproto() {
  delete QuoteDyna::default_instance_;
  delete QuoteDyna_reflection_;
  delete QuoteDynaSingle::default_instance_;
  delete QuoteDynaSingle_reflection_;
  delete QuoteDynaOutput::default_instance_;
  delete QuoteDynaOutput_reflection_;
  delete QuoteKline::default_instance_;
  delete QuoteKline_reflection_;
  delete QuoteKlineSingle::default_instance_;
  delete QuoteKlineSingle_reflection_;
  delete QuoteKlineOutput::default_instance_;
  delete QuoteKlineOutput_reflection_;
  delete QuoteTick::default_instance_;
  delete QuoteTick_reflection_;
  delete QuoteTickSingle::default_instance_;
  delete QuoteTickSingle_reflection_;
  delete QuoteTickOutput::default_instance_;
  delete QuoteTickOutput_reflection_;
  delete QuoteMin::default_instance_;
  delete QuoteMin_reflection_;
  delete QuoteMinSingle::default_instance_;
  delete QuoteMinSingle_reflection_;
  delete QuoteMinSingle_JiaoYiShiJianDuanJieGou::default_instance_;
  delete QuoteMinSingle_JiaoYiShiJianDuanJieGou_reflection_;
  delete QuoteMinOutput::default_instance_;
  delete QuoteMinOutput_reflection_;
  delete QuoteBOrder::default_instance_;
  delete QuoteBOrder_reflection_;
  delete QuoteBOrderSingle::default_instance_;
  delete QuoteBOrderSingle_reflection_;
  delete QuoteBOrderOutput::default_instance_;
  delete QuoteBOrderOutput_reflection_;
  delete QuoteDivid::default_instance_;
  delete QuoteDivid_reflection_;
  delete QuoteDividSingle::default_instance_;
  delete QuoteDividSingle_reflection_;
  delete QuoteDividOutput::default_instance_;
  delete QuoteDividOutput_reflection_;
  delete QuoteDynaMinSingle::default_instance_;
  delete QuoteDynaMinSingle_reflection_;
  delete QuoteReportSingle::default_instance_;
  delete QuoteReportSingle_reflection_;
  delete QuoteQueueSingle::default_instance_;
  delete QuoteQueueSingle_reflection_;
  delete QuoteHistoryMinSingle::default_instance_;
  delete QuoteHistoryMinSingle_reflection_;
  delete QuoteFundFlow::default_instance_;
  delete QuoteFundFlow_reflection_;
  delete QuoteFundFlowSingle::default_instance_;
  delete QuoteFundFlowSingle_reflection_;
  delete QuoteQueueMinSingle::default_instance_;
  delete QuoteQueueMinSingle_reflection_;
  delete QuoteBOrderMin::default_instance_;
  delete QuoteBOrderMin_reflection_;
  delete QuoteBOrderMinSingle::default_instance_;
  delete QuoteBOrderMinSingle_reflection_;
  delete QuoteHkQueueSingle::default_instance_;
  delete QuoteHkQueueSingle_reflection_;
}

void protobuf_AddDesc_dzhoutput_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::dzhyun::protobuf_AddDesc_dzhyun_2egupiaoqiepian_2eproto();
  ::dzhyun::protobuf_AddDesc_dzhyun_2egupiaolianxu_2eproto();
  ::dzhyun::protobuf_AddDesc_dzhyun_2ezhubi_2eproto();
  ::dzhyun::protobuf_AddDesc_dzhyun_2ehkdyna_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017dzhoutput.proto\022\006dzhyun\032\032dzhyun.gupiao"
    "qiepian.proto\032\031dzhyun.gupiaolianxu.proto"
    "\032\022dzhyun.zhubi.proto\032\023dzhyun.hkdyna.prot"
    "o\"\202\001\n\tQuoteDyna\022\014\n\004Time\030\001 \001(\005\022\021\n\tLastClo"
    "se\030\002 \001(\002\022\014\n\004High\030\003 \001(\002\022\014\n\004Open\030\004 \001(\002\022\013\n\003"
    "Low\030\005 \001(\002\022\013\n\003New\030\006 \001(\002\022\016\n\006Volume\030\007 \001(\002\022\016"
    "\n\006Amount\030\010 \001(\002\"A\n\017QuoteDynaSingle\022\013\n\003Obj"
    "\030\001 \002(\t\022!\n\004Data\030\002 \001(\0132\023.dzhyun.GeGuDongTa"
    "i\";\n\017QuoteDynaOutput\022(\n\007Results\030\001 \003(\0132\027."
    "dzhyun.QuoteDynaSingle\"\247\001\n\nQuoteKline\022\014\n"
    "\004Time\030\001 \001(\005\022\014\n\004High\030\002 \001(\002\022\014\n\004Open\030\003 \001(\002\022"
    "\013\n\003Low\030\004 \001(\002\022\r\n\005Close\030\005 \001(\002\022\016\n\006Volume\030\006 "
    "\001(\002\022\016\n\006Amount\030\007 \001(\002\022\021\n\tTickCount\030\010 \001(\005\022\017"
    "\n\007Advance\030\t \001(\005\022\017\n\007Decline\030\n \001(\005\"<\n\020Quot"
    "eKlineSingle\022\013\n\003Obj\030\001 \002(\t\022\033\n\004Data\030\002 \003(\0132"
    "\r.dzhyun.KXian\"=\n\020QuoteKlineOutput\022)\n\007Re"
    "sults\030\001 \003(\0132\030.dzhyun.QuoteKlineSingle\"\267\001"
    "\n\tQuoteTick\022\014\n\004Time\030\001 \001(\005\022\r\n\005Price\030\002 \001(\002"
    "\022\016\n\006Volume\030\003 \001(\002\022\016\n\006Amount\030\004 \001(\002\022\021\n\tTick"
    "Count\030\005 \001(\005\022\020\n\010BuyPrice\030\006 \003(\002\022\021\n\tBuyVolu"
    "me\030\007 \003(\002\022\021\n\tSellPrice\030\010 \003(\002\022\022\n\nSellVolum"
    "e\030\t \003(\002\022\016\n\006Outter\030\n \001(\005\"U\n\017QuoteTickSing"
    "le\022\013\n\003Obj\030\001 \002(\t\022$\n\004Data\030\002 \003(\0132\026.dzhyun.F"
    "enBiChengJiao\022\017\n\007QingPan\030\003 \001(\003\";\n\017QuoteT"
    "ickOutput\022(\n\007Results\030\001 \003(\0132\027.dzhyun.Quot"
    "eTickSingle\"\246\001\n\010QuoteMin\022\014\n\004Time\030\001 \001(\005\022\r"
    "\n\005Price\030\002 \001(\002\022\016\n\006Volume\030\003 \001(\002\022\016\n\006Amount\030"
    "\004 \001(\002\022\021\n\tTickCount\030\005 \001(\005\022\020\n\010BuyPrice\030\006 \003"
    "(\002\022\021\n\tBuyVolume\030\007 \003(\002\022\021\n\tSellPrice\030\010 \003(\002"
    "\022\022\n\nSellVolume\030\t \003(\002\"\225\003\n\016QuoteMinSingle\022"
    "\013\n\003Obj\030\001 \002(\t\022\034\n\004Data\030\002 \003(\0132\016.dzhyun.FenS"
    "hi\022\014\n\004RiQi\030\003 \001(\003\022\r\n\005ShiQu\030\004 \001(\003\022\032\n\022JiHeJ"
    "ingJiaDianShu\030\005 \001(\003\022I\n\021JiaoYiShiJianDuan"
    "\030\006 \003(\0132..dzhyun.QuoteMinSingle.JiaoYiShi"
    "JianDuanJieGou\022\017\n\007ZuoShou\030\007 \001(\003\022\017\n\007QingP"
    "an\030\010 \001(\003\022\027\n\017ZuoRiJieSuanJia\030\t \001(\003\022(\n\013LiS"
    "hiFenShi\030\n \003(\0132\023.dzhyun.FenShiLishi\032o\n\027J"
    "iaoYiShiJianDuanJieGou\022\025\n\rKaiShiShiJian\030"
    "\001 \001(\003\022\025\n\rJieShuShiJian\030\002 \001(\003\022\022\n\nKaiShiRi"
    "Qi\030\003 \001(\003\022\022\n\nJieShuRiQi\030\004 \001(\003\"9\n\016QuoteMin"
    "Output\022\'\n\007Results\030\001 \003(\0132\026.dzhyun.QuoteMi"
    "nSingle\"\221\003\n\013QuoteBOrder\022\017\n\007ShiJian\030\001 \001(\003"
    "\022\023\n\013WeiTuoMaiRu\030\002 \001(\003\022\024\n\014WeiTuoMaiChu\030\003 "
    "\001(\003\022\031\n\021MaiRuZhongDanBiLi\030\004 \001(\003\022\026\n\016MaiRuD"
    "aDanBiLi\030\005 \001(\003\022\030\n\020MaiRuTeDaDanBiLi\030\006 \001(\003"
    "\022\032\n\022MaiChuZhongDanBiLi\030\007 \001(\003\022\027\n\017MaiChuDa"
    "DanBiLi\030\010 \001(\003\022\031\n\021MaiChuTeDaDanBiLi\030\t \001(\003"
    "\022\025\n\rDuanXianMaiRu\030\n \001(\003\022\026\n\016DuanXianMaiCh"
    "u\030\013 \001(\003\022\026\n\016DuanXianChiHuo\030\014 \001(\003\022\025\n\rDuanX"
    "ianTuHuo\030\r \001(\003\022\026\n\016DaDanLiuRuJinE\030\016 \001(\003\022\027"
    "\n\017DaDanLiuChuJinE\030\017 \001(\003\022\032\n\022DaDanJingLiuR"
    "uJinE\030\020 \001(\003\"C\n\021QuoteBOrderSingle\022\013\n\003Obj\030"
    "\001 \002(\t\022!\n\004Data\030\002 \003(\0132\023.dzhyun.QuoteBOrder"
    "\"\?\n\021QuoteBOrderOutput\022*\n\007Results\030\001 \003(\0132\031"
    ".dzhyun.QuoteBOrderSingle\"M\n\nQuoteDivid\022"
    "\017\n\007ShiJian\030\001 \001(\003\022\027\n\017ChuQuanChengShu\030\002 \001("
    "\003\022\025\n\rChuQuanPianYi\030\003 \001(\003\"A\n\020QuoteDividSi"
    "ngle\022\013\n\003Obj\030\001 \002(\t\022 \n\004Data\030\002 \003(\0132\022.dzhyun"
    ".QuoteDivid\"=\n\020QuoteDividOutput\022)\n\007Resul"
    "ts\030\001 \003(\0132\030.dzhyun.QuoteDividSingle\"U\n\022Qu"
    "oteDynaMinSingle\022\013\n\003Obj\030\001 \002(\t\022!\n\004Data\030\002 "
    "\003(\0132\023.dzhyun.GeGuDongTai\022\017\n\007QingPan\030\003 \001("
    "\003\"T\n\021QuoteReportSingle\022\013\n\003Obj\030\001 \002(\t\022!\n\004D"
    "ata\030\002 \003(\0132\023.dzhyun.ZhubiDangri\022\017\n\007QingPa"
    "n\030\003 \001(\003\"C\n\020QuoteQueueSingle\022\013\n\003Obj\030\001 \002(\t"
    "\022\"\n\004Data\030\002 \003(\0132\024.dzhyun.WeiTuoDuiLie\"X\n\025"
    "QuoteHistoryMinSingle\022\013\n\003Obj\030\001 \002(\t\022!\n\004Da"
    "ta\030\002 \003(\0132\023.dzhyun.FenShiLishi\022\017\n\007ZuoShou"
    "\030\003 \001(\003\"m\n\rQuoteFundFlow\022\017\n\007ShiJian\030\001 \001(\003"
    "\022\026\n\016DaDanLiuRuJinE\030\002 \001(\003\022\027\n\017DaDanLiuChuJ"
    "inE\030\003 \001(\003\022\032\n\022DaDanJingLiuRuJinE\030\004 \001(\003\"G\n"
    "\023QuoteFundFlowSingle\022\013\n\003Obj\030\001 \002(\t\022#\n\004Dat"
    "a\030\002 \003(\0132\025.dzhyun.QuoteFundFlow\"W\n\023QuoteQ"
    "ueueMinSingle\022\013\n\003Obj\030\001 \002(\t\022\"\n\004Data\030\002 \003(\013"
    "2\024.dzhyun.WeiTuoDuiLie\022\017\n\007QingPan\030\003 \001(\003\""
    "\230\001\n\016QuoteBOrderMin\022\017\n\007ShiJian\030\001 \001(\003\022\034\n\024J"
    "ingMaiRuTeDaDanBiLi\030\002 \001(\003\022\032\n\022JingMaiRuDa"
    "DanBiLi\030\003 \001(\003\022\035\n\025JingMaiRuZhongDanBiLi\030\004"
    " \001(\003\022\034\n\024JingMaiRuXiaoDanBiLi\030\005 \001(\003\"Z\n\024Qu"
    "oteBOrderMinSingle\022\013\n\003Obj\030\001 \002(\t\022$\n\004Data\030"
    "\002 \003(\0132\026.dzhyun.QuoteBOrderMin\022\017\n\007QingPan"
    "\030\003 \001(\003\"C\n\022QuoteHkQueueSingle\022\013\n\003Obj\030\001 \002("
    "\t\022 \n\004Data\030\002 \003(\0132\022.dzhyun.HKDynaInfoB\022\n\020c"
    "om.dzhyun.proto", 3335);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dzhoutput.proto", &protobuf_RegisterTypes);
  QuoteDyna::default_instance_ = new QuoteDyna();
  QuoteDynaSingle::default_instance_ = new QuoteDynaSingle();
  QuoteDynaOutput::default_instance_ = new QuoteDynaOutput();
  QuoteKline::default_instance_ = new QuoteKline();
  QuoteKlineSingle::default_instance_ = new QuoteKlineSingle();
  QuoteKlineOutput::default_instance_ = new QuoteKlineOutput();
  QuoteTick::default_instance_ = new QuoteTick();
  QuoteTickSingle::default_instance_ = new QuoteTickSingle();
  QuoteTickOutput::default_instance_ = new QuoteTickOutput();
  QuoteMin::default_instance_ = new QuoteMin();
  QuoteMinSingle::default_instance_ = new QuoteMinSingle();
  QuoteMinSingle_JiaoYiShiJianDuanJieGou::default_instance_ = new QuoteMinSingle_JiaoYiShiJianDuanJieGou();
  QuoteMinOutput::default_instance_ = new QuoteMinOutput();
  QuoteBOrder::default_instance_ = new QuoteBOrder();
  QuoteBOrderSingle::default_instance_ = new QuoteBOrderSingle();
  QuoteBOrderOutput::default_instance_ = new QuoteBOrderOutput();
  QuoteDivid::default_instance_ = new QuoteDivid();
  QuoteDividSingle::default_instance_ = new QuoteDividSingle();
  QuoteDividOutput::default_instance_ = new QuoteDividOutput();
  QuoteDynaMinSingle::default_instance_ = new QuoteDynaMinSingle();
  QuoteReportSingle::default_instance_ = new QuoteReportSingle();
  QuoteQueueSingle::default_instance_ = new QuoteQueueSingle();
  QuoteHistoryMinSingle::default_instance_ = new QuoteHistoryMinSingle();
  QuoteFundFlow::default_instance_ = new QuoteFundFlow();
  QuoteFundFlowSingle::default_instance_ = new QuoteFundFlowSingle();
  QuoteQueueMinSingle::default_instance_ = new QuoteQueueMinSingle();
  QuoteBOrderMin::default_instance_ = new QuoteBOrderMin();
  QuoteBOrderMinSingle::default_instance_ = new QuoteBOrderMinSingle();
  QuoteHkQueueSingle::default_instance_ = new QuoteHkQueueSingle();
  QuoteDyna::default_instance_->InitAsDefaultInstance();
  QuoteDynaSingle::default_instance_->InitAsDefaultInstance();
  QuoteDynaOutput::default_instance_->InitAsDefaultInstance();
  QuoteKline::default_instance_->InitAsDefaultInstance();
  QuoteKlineSingle::default_instance_->InitAsDefaultInstance();
  QuoteKlineOutput::default_instance_->InitAsDefaultInstance();
  QuoteTick::default_instance_->InitAsDefaultInstance();
  QuoteTickSingle::default_instance_->InitAsDefaultInstance();
  QuoteTickOutput::default_instance_->InitAsDefaultInstance();
  QuoteMin::default_instance_->InitAsDefaultInstance();
  QuoteMinSingle::default_instance_->InitAsDefaultInstance();
  QuoteMinSingle_JiaoYiShiJianDuanJieGou::default_instance_->InitAsDefaultInstance();
  QuoteMinOutput::default_instance_->InitAsDefaultInstance();
  QuoteBOrder::default_instance_->InitAsDefaultInstance();
  QuoteBOrderSingle::default_instance_->InitAsDefaultInstance();
  QuoteBOrderOutput::default_instance_->InitAsDefaultInstance();
  QuoteDivid::default_instance_->InitAsDefaultInstance();
  QuoteDividSingle::default_instance_->InitAsDefaultInstance();
  QuoteDividOutput::default_instance_->InitAsDefaultInstance();
  QuoteDynaMinSingle::default_instance_->InitAsDefaultInstance();
  QuoteReportSingle::default_instance_->InitAsDefaultInstance();
  QuoteQueueSingle::default_instance_->InitAsDefaultInstance();
  QuoteHistoryMinSingle::default_instance_->InitAsDefaultInstance();
  QuoteFundFlow::default_instance_->InitAsDefaultInstance();
  QuoteFundFlowSingle::default_instance_->InitAsDefaultInstance();
  QuoteQueueMinSingle::default_instance_->InitAsDefaultInstance();
  QuoteBOrderMin::default_instance_->InitAsDefaultInstance();
  QuoteBOrderMinSingle::default_instance_->InitAsDefaultInstance();
  QuoteHkQueueSingle::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dzhoutput_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dzhoutput_2eproto {
  StaticDescriptorInitializer_dzhoutput_2eproto() {
    protobuf_AddDesc_dzhoutput_2eproto();
  }
} static_descriptor_initializer_dzhoutput_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteDyna::kTimeFieldNumber;
const int QuoteDyna::kLastCloseFieldNumber;
const int QuoteDyna::kHighFieldNumber;
const int QuoteDyna::kOpenFieldNumber;
const int QuoteDyna::kLowFieldNumber;
const int QuoteDyna::kNewFieldNumber;
const int QuoteDyna::kVolumeFieldNumber;
const int QuoteDyna::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteDyna::QuoteDyna()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteDyna)
}

void QuoteDyna::InitAsDefaultInstance() {
}

QuoteDyna::QuoteDyna(const QuoteDyna& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteDyna)
}

void QuoteDyna::SharedCtor() {
  _cached_size_ = 0;
  time_ = 0;
  lastclose_ = 0;
  high_ = 0;
  open_ = 0;
  low_ = 0;
  new__ = 0;
  volume_ = 0;
  amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteDyna::~QuoteDyna() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteDyna)
  SharedDtor();
}

void QuoteDyna::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuoteDyna::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteDyna::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteDyna_descriptor_;
}

const QuoteDyna& QuoteDyna::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteDyna* QuoteDyna::default_instance_ = NULL;

QuoteDyna* QuoteDyna::New(::google::protobuf::Arena* arena) const {
  QuoteDyna* n = new QuoteDyna;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteDyna::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteDyna)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QuoteDyna, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QuoteDyna*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(time_, amount_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteDyna::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteDyna)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Time = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_LastClose;
        break;
      }

      // optional float LastClose = 2;
      case 2: {
        if (tag == 21) {
         parse_LastClose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lastclose_)));
          set_has_lastclose();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_High;
        break;
      }

      // optional float High = 3;
      case 3: {
        if (tag == 29) {
         parse_High:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &high_)));
          set_has_high();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_Open;
        break;
      }

      // optional float Open = 4;
      case 4: {
        if (tag == 37) {
         parse_Open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &open_)));
          set_has_open();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_Low;
        break;
      }

      // optional float Low = 5;
      case 5: {
        if (tag == 45) {
         parse_Low:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &low_)));
          set_has_low();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_New;
        break;
      }

      // optional float New = 6;
      case 6: {
        if (tag == 53) {
         parse_New:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &new__)));
          set_has_new_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_Volume;
        break;
      }

      // optional float Volume = 7;
      case 7: {
        if (tag == 61) {
         parse_Volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &volume_)));
          set_has_volume();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_Amount;
        break;
      }

      // optional float Amount = 8;
      case 8: {
        if (tag == 69) {
         parse_Amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteDyna)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteDyna)
  return false;
#undef DO_
}

void QuoteDyna::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteDyna)
  // optional int32 Time = 1;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->time(), output);
  }

  // optional float LastClose = 2;
  if (has_lastclose()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->lastclose(), output);
  }

  // optional float High = 3;
  if (has_high()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->high(), output);
  }

  // optional float Open = 4;
  if (has_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->open(), output);
  }

  // optional float Low = 5;
  if (has_low()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->low(), output);
  }

  // optional float New = 6;
  if (has_new_()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->new_(), output);
  }

  // optional float Volume = 7;
  if (has_volume()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->volume(), output);
  }

  // optional float Amount = 8;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteDyna)
}

::google::protobuf::uint8* QuoteDyna::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteDyna)
  // optional int32 Time = 1;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->time(), target);
  }

  // optional float LastClose = 2;
  if (has_lastclose()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->lastclose(), target);
  }

  // optional float High = 3;
  if (has_high()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->high(), target);
  }

  // optional float Open = 4;
  if (has_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->open(), target);
  }

  // optional float Low = 5;
  if (has_low()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->low(), target);
  }

  // optional float New = 6;
  if (has_new_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->new_(), target);
  }

  // optional float Volume = 7;
  if (has_volume()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->volume(), target);
  }

  // optional float Amount = 8;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteDyna)
  return target;
}

int QuoteDyna::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteDyna)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 Time = 1;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }

    // optional float LastClose = 2;
    if (has_lastclose()) {
      total_size += 1 + 4;
    }

    // optional float High = 3;
    if (has_high()) {
      total_size += 1 + 4;
    }

    // optional float Open = 4;
    if (has_open()) {
      total_size += 1 + 4;
    }

    // optional float Low = 5;
    if (has_low()) {
      total_size += 1 + 4;
    }

    // optional float New = 6;
    if (has_new_()) {
      total_size += 1 + 4;
    }

    // optional float Volume = 7;
    if (has_volume()) {
      total_size += 1 + 4;
    }

    // optional float Amount = 8;
    if (has_amount()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteDyna::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteDyna)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteDyna* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteDyna>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteDyna)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteDyna)
    MergeFrom(*source);
  }
}

void QuoteDyna::MergeFrom(const QuoteDyna& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteDyna)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_lastclose()) {
      set_lastclose(from.lastclose());
    }
    if (from.has_high()) {
      set_high(from.high());
    }
    if (from.has_open()) {
      set_open(from.open());
    }
    if (from.has_low()) {
      set_low(from.low());
    }
    if (from.has_new_()) {
      set_new_(from.new_());
    }
    if (from.has_volume()) {
      set_volume(from.volume());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteDyna::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteDyna)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteDyna::CopyFrom(const QuoteDyna& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteDyna)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteDyna::IsInitialized() const {

  return true;
}

void QuoteDyna::Swap(QuoteDyna* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteDyna::InternalSwap(QuoteDyna* other) {
  std::swap(time_, other->time_);
  std::swap(lastclose_, other->lastclose_);
  std::swap(high_, other->high_);
  std::swap(open_, other->open_);
  std::swap(low_, other->low_);
  std::swap(new__, other->new__);
  std::swap(volume_, other->volume_);
  std::swap(amount_, other->amount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteDyna::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteDyna_descriptor_;
  metadata.reflection = QuoteDyna_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteDyna

// optional int32 Time = 1;
bool QuoteDyna::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteDyna::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteDyna::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteDyna::clear_time() {
  time_ = 0;
  clear_has_time();
}
 ::google::protobuf::int32 QuoteDyna::time() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDyna.Time)
  return time_;
}
 void QuoteDyna::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteDyna.Time)
}

// optional float LastClose = 2;
bool QuoteDyna::has_lastclose() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QuoteDyna::set_has_lastclose() {
  _has_bits_[0] |= 0x00000002u;
}
void QuoteDyna::clear_has_lastclose() {
  _has_bits_[0] &= ~0x00000002u;
}
void QuoteDyna::clear_lastclose() {
  lastclose_ = 0;
  clear_has_lastclose();
}
 float QuoteDyna::lastclose() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDyna.LastClose)
  return lastclose_;
}
 void QuoteDyna::set_lastclose(float value) {
  set_has_lastclose();
  lastclose_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteDyna.LastClose)
}

// optional float High = 3;
bool QuoteDyna::has_high() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteDyna::set_has_high() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteDyna::clear_has_high() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteDyna::clear_high() {
  high_ = 0;
  clear_has_high();
}
 float QuoteDyna::high() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDyna.High)
  return high_;
}
 void QuoteDyna::set_high(float value) {
  set_has_high();
  high_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteDyna.High)
}

// optional float Open = 4;
bool QuoteDyna::has_open() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QuoteDyna::set_has_open() {
  _has_bits_[0] |= 0x00000008u;
}
void QuoteDyna::clear_has_open() {
  _has_bits_[0] &= ~0x00000008u;
}
void QuoteDyna::clear_open() {
  open_ = 0;
  clear_has_open();
}
 float QuoteDyna::open() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDyna.Open)
  return open_;
}
 void QuoteDyna::set_open(float value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteDyna.Open)
}

// optional float Low = 5;
bool QuoteDyna::has_low() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QuoteDyna::set_has_low() {
  _has_bits_[0] |= 0x00000010u;
}
void QuoteDyna::clear_has_low() {
  _has_bits_[0] &= ~0x00000010u;
}
void QuoteDyna::clear_low() {
  low_ = 0;
  clear_has_low();
}
 float QuoteDyna::low() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDyna.Low)
  return low_;
}
 void QuoteDyna::set_low(float value) {
  set_has_low();
  low_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteDyna.Low)
}

// optional float New = 6;
bool QuoteDyna::has_new_() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void QuoteDyna::set_has_new_() {
  _has_bits_[0] |= 0x00000020u;
}
void QuoteDyna::clear_has_new_() {
  _has_bits_[0] &= ~0x00000020u;
}
void QuoteDyna::clear_new_() {
  new__ = 0;
  clear_has_new_();
}
 float QuoteDyna::new_() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDyna.New)
  return new__;
}
 void QuoteDyna::set_new_(float value) {
  set_has_new_();
  new__ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteDyna.New)
}

// optional float Volume = 7;
bool QuoteDyna::has_volume() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void QuoteDyna::set_has_volume() {
  _has_bits_[0] |= 0x00000040u;
}
void QuoteDyna::clear_has_volume() {
  _has_bits_[0] &= ~0x00000040u;
}
void QuoteDyna::clear_volume() {
  volume_ = 0;
  clear_has_volume();
}
 float QuoteDyna::volume() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDyna.Volume)
  return volume_;
}
 void QuoteDyna::set_volume(float value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteDyna.Volume)
}

// optional float Amount = 8;
bool QuoteDyna::has_amount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void QuoteDyna::set_has_amount() {
  _has_bits_[0] |= 0x00000080u;
}
void QuoteDyna::clear_has_amount() {
  _has_bits_[0] &= ~0x00000080u;
}
void QuoteDyna::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
 float QuoteDyna::amount() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDyna.Amount)
  return amount_;
}
 void QuoteDyna::set_amount(float value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteDyna.Amount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteDynaSingle::kObjFieldNumber;
const int QuoteDynaSingle::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteDynaSingle::QuoteDynaSingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteDynaSingle)
}

void QuoteDynaSingle::InitAsDefaultInstance() {
  data_ = const_cast< ::dzhyun::GeGuDongTai*>(&::dzhyun::GeGuDongTai::default_instance());
}

QuoteDynaSingle::QuoteDynaSingle(const QuoteDynaSingle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteDynaSingle)
}

void QuoteDynaSingle::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteDynaSingle::~QuoteDynaSingle() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteDynaSingle)
  SharedDtor();
}

void QuoteDynaSingle::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete data_;
  }
}

void QuoteDynaSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteDynaSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteDynaSingle_descriptor_;
}

const QuoteDynaSingle& QuoteDynaSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteDynaSingle* QuoteDynaSingle::default_instance_ = NULL;

QuoteDynaSingle* QuoteDynaSingle::New(::google::protobuf::Arena* arena) const {
  QuoteDynaSingle* n = new QuoteDynaSingle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteDynaSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteDynaSingle)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_obj()) {
      obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_data()) {
      if (data_ != NULL) data_->::dzhyun::GeGuDongTai::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteDynaSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteDynaSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QuoteDynaSingle.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // optional .dzhyun.GeGuDongTai Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteDynaSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteDynaSingle)
  return false;
#undef DO_
}

void QuoteDynaSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteDynaSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteDynaSingle.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // optional .dzhyun.GeGuDongTai Data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteDynaSingle)
}

::google::protobuf::uint8* QuoteDynaSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteDynaSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteDynaSingle.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // optional .dzhyun.GeGuDongTai Data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->data_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteDynaSingle)
  return target;
}

int QuoteDynaSingle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteDynaSingle)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  // optional .dzhyun.GeGuDongTai Data = 2;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteDynaSingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteDynaSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteDynaSingle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteDynaSingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteDynaSingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteDynaSingle)
    MergeFrom(*source);
  }
}

void QuoteDynaSingle::MergeFrom(const QuoteDynaSingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteDynaSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
    if (from.has_data()) {
      mutable_data()->::dzhyun::GeGuDongTai::MergeFrom(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteDynaSingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteDynaSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteDynaSingle::CopyFrom(const QuoteDynaSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteDynaSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteDynaSingle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void QuoteDynaSingle::Swap(QuoteDynaSingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteDynaSingle::InternalSwap(QuoteDynaSingle* other) {
  obj_.Swap(&other->obj_);
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteDynaSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteDynaSingle_descriptor_;
  metadata.reflection = QuoteDynaSingle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteDynaSingle

// required string Obj = 1;
bool QuoteDynaSingle::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteDynaSingle::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteDynaSingle::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteDynaSingle::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& QuoteDynaSingle::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDynaSingle.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteDynaSingle::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteDynaSingle.Obj)
}
 void QuoteDynaSingle::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QuoteDynaSingle.Obj)
}
 void QuoteDynaSingle::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QuoteDynaSingle.Obj)
}
 ::std::string* QuoteDynaSingle::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteDynaSingle.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QuoteDynaSingle::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.QuoteDynaSingle.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteDynaSingle::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QuoteDynaSingle.Obj)
}

// optional .dzhyun.GeGuDongTai Data = 2;
bool QuoteDynaSingle::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QuoteDynaSingle::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
void QuoteDynaSingle::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void QuoteDynaSingle::clear_data() {
  if (data_ != NULL) data_->::dzhyun::GeGuDongTai::Clear();
  clear_has_data();
}
const ::dzhyun::GeGuDongTai& QuoteDynaSingle::data() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDynaSingle.Data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::dzhyun::GeGuDongTai* QuoteDynaSingle::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::dzhyun::GeGuDongTai;
  }
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteDynaSingle.Data)
  return data_;
}
::dzhyun::GeGuDongTai* QuoteDynaSingle::release_data() {
  // @@protoc_insertion_point(field_release:dzhyun.QuoteDynaSingle.Data)
  clear_has_data();
  ::dzhyun::GeGuDongTai* temp = data_;
  data_ = NULL;
  return temp;
}
void QuoteDynaSingle::set_allocated_data(::dzhyun::GeGuDongTai* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QuoteDynaSingle.Data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteDynaOutput::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteDynaOutput::QuoteDynaOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteDynaOutput)
}

void QuoteDynaOutput::InitAsDefaultInstance() {
}

QuoteDynaOutput::QuoteDynaOutput(const QuoteDynaOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteDynaOutput)
}

void QuoteDynaOutput::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteDynaOutput::~QuoteDynaOutput() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteDynaOutput)
  SharedDtor();
}

void QuoteDynaOutput::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuoteDynaOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteDynaOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteDynaOutput_descriptor_;
}

const QuoteDynaOutput& QuoteDynaOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteDynaOutput* QuoteDynaOutput::default_instance_ = NULL;

QuoteDynaOutput* QuoteDynaOutput::New(::google::protobuf::Arena* arena) const {
  QuoteDynaOutput* n = new QuoteDynaOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteDynaOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteDynaOutput)
  results_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteDynaOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteDynaOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dzhyun.QuoteDynaSingle Results = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_Results;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteDynaOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteDynaOutput)
  return false;
#undef DO_
}

void QuoteDynaOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteDynaOutput)
  // repeated .dzhyun.QuoteDynaSingle Results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->results(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteDynaOutput)
}

::google::protobuf::uint8* QuoteDynaOutput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteDynaOutput)
  // repeated .dzhyun.QuoteDynaSingle Results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->results(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteDynaOutput)
  return target;
}

int QuoteDynaOutput::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteDynaOutput)
  int total_size = 0;

  // repeated .dzhyun.QuoteDynaSingle Results = 1;
  total_size += 1 * this->results_size();
  for (int i = 0; i < this->results_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->results(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteDynaOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteDynaOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteDynaOutput* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteDynaOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteDynaOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteDynaOutput)
    MergeFrom(*source);
  }
}

void QuoteDynaOutput::MergeFrom(const QuoteDynaOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteDynaOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  results_.MergeFrom(from.results_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteDynaOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteDynaOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteDynaOutput::CopyFrom(const QuoteDynaOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteDynaOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteDynaOutput::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->results())) return false;
  return true;
}

void QuoteDynaOutput::Swap(QuoteDynaOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteDynaOutput::InternalSwap(QuoteDynaOutput* other) {
  results_.UnsafeArenaSwap(&other->results_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteDynaOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteDynaOutput_descriptor_;
  metadata.reflection = QuoteDynaOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteDynaOutput

// repeated .dzhyun.QuoteDynaSingle Results = 1;
int QuoteDynaOutput::results_size() const {
  return results_.size();
}
void QuoteDynaOutput::clear_results() {
  results_.Clear();
}
const ::dzhyun::QuoteDynaSingle& QuoteDynaOutput::results(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDynaOutput.Results)
  return results_.Get(index);
}
::dzhyun::QuoteDynaSingle* QuoteDynaOutput::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteDynaOutput.Results)
  return results_.Mutable(index);
}
::dzhyun::QuoteDynaSingle* QuoteDynaOutput::add_results() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteDynaOutput.Results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteDynaSingle >*
QuoteDynaOutput::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteDynaOutput.Results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteDynaSingle >&
QuoteDynaOutput::results() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteDynaOutput.Results)
  return results_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteKline::kTimeFieldNumber;
const int QuoteKline::kHighFieldNumber;
const int QuoteKline::kOpenFieldNumber;
const int QuoteKline::kLowFieldNumber;
const int QuoteKline::kCloseFieldNumber;
const int QuoteKline::kVolumeFieldNumber;
const int QuoteKline::kAmountFieldNumber;
const int QuoteKline::kTickCountFieldNumber;
const int QuoteKline::kAdvanceFieldNumber;
const int QuoteKline::kDeclineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteKline::QuoteKline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteKline)
}

void QuoteKline::InitAsDefaultInstance() {
}

QuoteKline::QuoteKline(const QuoteKline& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteKline)
}

void QuoteKline::SharedCtor() {
  _cached_size_ = 0;
  time_ = 0;
  high_ = 0;
  open_ = 0;
  low_ = 0;
  close_ = 0;
  volume_ = 0;
  amount_ = 0;
  tickcount_ = 0;
  advance_ = 0;
  decline_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteKline::~QuoteKline() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteKline)
  SharedDtor();
}

void QuoteKline::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuoteKline::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteKline::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteKline_descriptor_;
}

const QuoteKline& QuoteKline::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteKline* QuoteKline::default_instance_ = NULL;

QuoteKline* QuoteKline::New(::google::protobuf::Arena* arena) const {
  QuoteKline* n = new QuoteKline;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteKline::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteKline)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QuoteKline, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QuoteKline*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(time_, tickcount_);
  }
  ZR_(advance_, decline_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteKline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteKline)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Time = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_High;
        break;
      }

      // optional float High = 2;
      case 2: {
        if (tag == 21) {
         parse_High:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &high_)));
          set_has_high();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_Open;
        break;
      }

      // optional float Open = 3;
      case 3: {
        if (tag == 29) {
         parse_Open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &open_)));
          set_has_open();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_Low;
        break;
      }

      // optional float Low = 4;
      case 4: {
        if (tag == 37) {
         parse_Low:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &low_)));
          set_has_low();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_Close;
        break;
      }

      // optional float Close = 5;
      case 5: {
        if (tag == 45) {
         parse_Close:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &close_)));
          set_has_close();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_Volume;
        break;
      }

      // optional float Volume = 6;
      case 6: {
        if (tag == 53) {
         parse_Volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &volume_)));
          set_has_volume();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_Amount;
        break;
      }

      // optional float Amount = 7;
      case 7: {
        if (tag == 61) {
         parse_Amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_TickCount;
        break;
      }

      // optional int32 TickCount = 8;
      case 8: {
        if (tag == 64) {
         parse_TickCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tickcount_)));
          set_has_tickcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_Advance;
        break;
      }

      // optional int32 Advance = 9;
      case 9: {
        if (tag == 72) {
         parse_Advance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &advance_)));
          set_has_advance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_Decline;
        break;
      }

      // optional int32 Decline = 10;
      case 10: {
        if (tag == 80) {
         parse_Decline:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &decline_)));
          set_has_decline();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteKline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteKline)
  return false;
#undef DO_
}

void QuoteKline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteKline)
  // optional int32 Time = 1;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->time(), output);
  }

  // optional float High = 2;
  if (has_high()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->high(), output);
  }

  // optional float Open = 3;
  if (has_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->open(), output);
  }

  // optional float Low = 4;
  if (has_low()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->low(), output);
  }

  // optional float Close = 5;
  if (has_close()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->close(), output);
  }

  // optional float Volume = 6;
  if (has_volume()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->volume(), output);
  }

  // optional float Amount = 7;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->amount(), output);
  }

  // optional int32 TickCount = 8;
  if (has_tickcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->tickcount(), output);
  }

  // optional int32 Advance = 9;
  if (has_advance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->advance(), output);
  }

  // optional int32 Decline = 10;
  if (has_decline()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->decline(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteKline)
}

::google::protobuf::uint8* QuoteKline::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteKline)
  // optional int32 Time = 1;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->time(), target);
  }

  // optional float High = 2;
  if (has_high()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->high(), target);
  }

  // optional float Open = 3;
  if (has_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->open(), target);
  }

  // optional float Low = 4;
  if (has_low()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->low(), target);
  }

  // optional float Close = 5;
  if (has_close()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->close(), target);
  }

  // optional float Volume = 6;
  if (has_volume()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->volume(), target);
  }

  // optional float Amount = 7;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->amount(), target);
  }

  // optional int32 TickCount = 8;
  if (has_tickcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->tickcount(), target);
  }

  // optional int32 Advance = 9;
  if (has_advance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->advance(), target);
  }

  // optional int32 Decline = 10;
  if (has_decline()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->decline(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteKline)
  return target;
}

int QuoteKline::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteKline)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 Time = 1;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }

    // optional float High = 2;
    if (has_high()) {
      total_size += 1 + 4;
    }

    // optional float Open = 3;
    if (has_open()) {
      total_size += 1 + 4;
    }

    // optional float Low = 4;
    if (has_low()) {
      total_size += 1 + 4;
    }

    // optional float Close = 5;
    if (has_close()) {
      total_size += 1 + 4;
    }

    // optional float Volume = 6;
    if (has_volume()) {
      total_size += 1 + 4;
    }

    // optional float Amount = 7;
    if (has_amount()) {
      total_size += 1 + 4;
    }

    // optional int32 TickCount = 8;
    if (has_tickcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tickcount());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int32 Advance = 9;
    if (has_advance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->advance());
    }

    // optional int32 Decline = 10;
    if (has_decline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->decline());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteKline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteKline)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteKline* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteKline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteKline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteKline)
    MergeFrom(*source);
  }
}

void QuoteKline::MergeFrom(const QuoteKline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteKline)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_high()) {
      set_high(from.high());
    }
    if (from.has_open()) {
      set_open(from.open());
    }
    if (from.has_low()) {
      set_low(from.low());
    }
    if (from.has_close()) {
      set_close(from.close());
    }
    if (from.has_volume()) {
      set_volume(from.volume());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_tickcount()) {
      set_tickcount(from.tickcount());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_advance()) {
      set_advance(from.advance());
    }
    if (from.has_decline()) {
      set_decline(from.decline());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteKline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteKline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteKline::CopyFrom(const QuoteKline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteKline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteKline::IsInitialized() const {

  return true;
}

void QuoteKline::Swap(QuoteKline* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteKline::InternalSwap(QuoteKline* other) {
  std::swap(time_, other->time_);
  std::swap(high_, other->high_);
  std::swap(open_, other->open_);
  std::swap(low_, other->low_);
  std::swap(close_, other->close_);
  std::swap(volume_, other->volume_);
  std::swap(amount_, other->amount_);
  std::swap(tickcount_, other->tickcount_);
  std::swap(advance_, other->advance_);
  std::swap(decline_, other->decline_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteKline::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteKline_descriptor_;
  metadata.reflection = QuoteKline_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteKline

// optional int32 Time = 1;
bool QuoteKline::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteKline::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteKline::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteKline::clear_time() {
  time_ = 0;
  clear_has_time();
}
 ::google::protobuf::int32 QuoteKline::time() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteKline.Time)
  return time_;
}
 void QuoteKline::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteKline.Time)
}

// optional float High = 2;
bool QuoteKline::has_high() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QuoteKline::set_has_high() {
  _has_bits_[0] |= 0x00000002u;
}
void QuoteKline::clear_has_high() {
  _has_bits_[0] &= ~0x00000002u;
}
void QuoteKline::clear_high() {
  high_ = 0;
  clear_has_high();
}
 float QuoteKline::high() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteKline.High)
  return high_;
}
 void QuoteKline::set_high(float value) {
  set_has_high();
  high_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteKline.High)
}

// optional float Open = 3;
bool QuoteKline::has_open() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteKline::set_has_open() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteKline::clear_has_open() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteKline::clear_open() {
  open_ = 0;
  clear_has_open();
}
 float QuoteKline::open() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteKline.Open)
  return open_;
}
 void QuoteKline::set_open(float value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteKline.Open)
}

// optional float Low = 4;
bool QuoteKline::has_low() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QuoteKline::set_has_low() {
  _has_bits_[0] |= 0x00000008u;
}
void QuoteKline::clear_has_low() {
  _has_bits_[0] &= ~0x00000008u;
}
void QuoteKline::clear_low() {
  low_ = 0;
  clear_has_low();
}
 float QuoteKline::low() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteKline.Low)
  return low_;
}
 void QuoteKline::set_low(float value) {
  set_has_low();
  low_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteKline.Low)
}

// optional float Close = 5;
bool QuoteKline::has_close() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QuoteKline::set_has_close() {
  _has_bits_[0] |= 0x00000010u;
}
void QuoteKline::clear_has_close() {
  _has_bits_[0] &= ~0x00000010u;
}
void QuoteKline::clear_close() {
  close_ = 0;
  clear_has_close();
}
 float QuoteKline::close() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteKline.Close)
  return close_;
}
 void QuoteKline::set_close(float value) {
  set_has_close();
  close_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteKline.Close)
}

// optional float Volume = 6;
bool QuoteKline::has_volume() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void QuoteKline::set_has_volume() {
  _has_bits_[0] |= 0x00000020u;
}
void QuoteKline::clear_has_volume() {
  _has_bits_[0] &= ~0x00000020u;
}
void QuoteKline::clear_volume() {
  volume_ = 0;
  clear_has_volume();
}
 float QuoteKline::volume() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteKline.Volume)
  return volume_;
}
 void QuoteKline::set_volume(float value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteKline.Volume)
}

// optional float Amount = 7;
bool QuoteKline::has_amount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void QuoteKline::set_has_amount() {
  _has_bits_[0] |= 0x00000040u;
}
void QuoteKline::clear_has_amount() {
  _has_bits_[0] &= ~0x00000040u;
}
void QuoteKline::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
 float QuoteKline::amount() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteKline.Amount)
  return amount_;
}
 void QuoteKline::set_amount(float value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteKline.Amount)
}

// optional int32 TickCount = 8;
bool QuoteKline::has_tickcount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void QuoteKline::set_has_tickcount() {
  _has_bits_[0] |= 0x00000080u;
}
void QuoteKline::clear_has_tickcount() {
  _has_bits_[0] &= ~0x00000080u;
}
void QuoteKline::clear_tickcount() {
  tickcount_ = 0;
  clear_has_tickcount();
}
 ::google::protobuf::int32 QuoteKline::tickcount() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteKline.TickCount)
  return tickcount_;
}
 void QuoteKline::set_tickcount(::google::protobuf::int32 value) {
  set_has_tickcount();
  tickcount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteKline.TickCount)
}

// optional int32 Advance = 9;
bool QuoteKline::has_advance() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void QuoteKline::set_has_advance() {
  _has_bits_[0] |= 0x00000100u;
}
void QuoteKline::clear_has_advance() {
  _has_bits_[0] &= ~0x00000100u;
}
void QuoteKline::clear_advance() {
  advance_ = 0;
  clear_has_advance();
}
 ::google::protobuf::int32 QuoteKline::advance() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteKline.Advance)
  return advance_;
}
 void QuoteKline::set_advance(::google::protobuf::int32 value) {
  set_has_advance();
  advance_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteKline.Advance)
}

// optional int32 Decline = 10;
bool QuoteKline::has_decline() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void QuoteKline::set_has_decline() {
  _has_bits_[0] |= 0x00000200u;
}
void QuoteKline::clear_has_decline() {
  _has_bits_[0] &= ~0x00000200u;
}
void QuoteKline::clear_decline() {
  decline_ = 0;
  clear_has_decline();
}
 ::google::protobuf::int32 QuoteKline::decline() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteKline.Decline)
  return decline_;
}
 void QuoteKline::set_decline(::google::protobuf::int32 value) {
  set_has_decline();
  decline_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteKline.Decline)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteKlineSingle::kObjFieldNumber;
const int QuoteKlineSingle::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteKlineSingle::QuoteKlineSingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteKlineSingle)
}

void QuoteKlineSingle::InitAsDefaultInstance() {
}

QuoteKlineSingle::QuoteKlineSingle(const QuoteKlineSingle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteKlineSingle)
}

void QuoteKlineSingle::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteKlineSingle::~QuoteKlineSingle() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteKlineSingle)
  SharedDtor();
}

void QuoteKlineSingle::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QuoteKlineSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteKlineSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteKlineSingle_descriptor_;
}

const QuoteKlineSingle& QuoteKlineSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteKlineSingle* QuoteKlineSingle::default_instance_ = NULL;

QuoteKlineSingle* QuoteKlineSingle::New(::google::protobuf::Arena* arena) const {
  QuoteKlineSingle* n = new QuoteKlineSingle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteKlineSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteKlineSingle)
  if (has_obj()) {
    obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteKlineSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteKlineSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QuoteKlineSingle.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .dzhyun.KXian Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteKlineSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteKlineSingle)
  return false;
#undef DO_
}

void QuoteKlineSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteKlineSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteKlineSingle.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // repeated .dzhyun.KXian Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteKlineSingle)
}

::google::protobuf::uint8* QuoteKlineSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteKlineSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteKlineSingle.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // repeated .dzhyun.KXian Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteKlineSingle)
  return target;
}

int QuoteKlineSingle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteKlineSingle)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  // repeated .dzhyun.KXian Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteKlineSingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteKlineSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteKlineSingle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteKlineSingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteKlineSingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteKlineSingle)
    MergeFrom(*source);
  }
}

void QuoteKlineSingle::MergeFrom(const QuoteKlineSingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteKlineSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteKlineSingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteKlineSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteKlineSingle::CopyFrom(const QuoteKlineSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteKlineSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteKlineSingle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void QuoteKlineSingle::Swap(QuoteKlineSingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteKlineSingle::InternalSwap(QuoteKlineSingle* other) {
  obj_.Swap(&other->obj_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteKlineSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteKlineSingle_descriptor_;
  metadata.reflection = QuoteKlineSingle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteKlineSingle

// required string Obj = 1;
bool QuoteKlineSingle::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteKlineSingle::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteKlineSingle::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteKlineSingle::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& QuoteKlineSingle::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteKlineSingle.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteKlineSingle::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteKlineSingle.Obj)
}
 void QuoteKlineSingle::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QuoteKlineSingle.Obj)
}
 void QuoteKlineSingle::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QuoteKlineSingle.Obj)
}
 ::std::string* QuoteKlineSingle::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteKlineSingle.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QuoteKlineSingle::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.QuoteKlineSingle.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteKlineSingle::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QuoteKlineSingle.Obj)
}

// repeated .dzhyun.KXian Data = 2;
int QuoteKlineSingle::data_size() const {
  return data_.size();
}
void QuoteKlineSingle::clear_data() {
  data_.Clear();
}
const ::dzhyun::KXian& QuoteKlineSingle::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteKlineSingle.Data)
  return data_.Get(index);
}
::dzhyun::KXian* QuoteKlineSingle::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteKlineSingle.Data)
  return data_.Mutable(index);
}
::dzhyun::KXian* QuoteKlineSingle::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteKlineSingle.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::KXian >*
QuoteKlineSingle::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteKlineSingle.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::KXian >&
QuoteKlineSingle::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteKlineSingle.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteKlineOutput::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteKlineOutput::QuoteKlineOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteKlineOutput)
}

void QuoteKlineOutput::InitAsDefaultInstance() {
}

QuoteKlineOutput::QuoteKlineOutput(const QuoteKlineOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteKlineOutput)
}

void QuoteKlineOutput::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteKlineOutput::~QuoteKlineOutput() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteKlineOutput)
  SharedDtor();
}

void QuoteKlineOutput::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuoteKlineOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteKlineOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteKlineOutput_descriptor_;
}

const QuoteKlineOutput& QuoteKlineOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteKlineOutput* QuoteKlineOutput::default_instance_ = NULL;

QuoteKlineOutput* QuoteKlineOutput::New(::google::protobuf::Arena* arena) const {
  QuoteKlineOutput* n = new QuoteKlineOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteKlineOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteKlineOutput)
  results_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteKlineOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteKlineOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dzhyun.QuoteKlineSingle Results = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_Results;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteKlineOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteKlineOutput)
  return false;
#undef DO_
}

void QuoteKlineOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteKlineOutput)
  // repeated .dzhyun.QuoteKlineSingle Results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->results(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteKlineOutput)
}

::google::protobuf::uint8* QuoteKlineOutput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteKlineOutput)
  // repeated .dzhyun.QuoteKlineSingle Results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->results(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteKlineOutput)
  return target;
}

int QuoteKlineOutput::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteKlineOutput)
  int total_size = 0;

  // repeated .dzhyun.QuoteKlineSingle Results = 1;
  total_size += 1 * this->results_size();
  for (int i = 0; i < this->results_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->results(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteKlineOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteKlineOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteKlineOutput* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteKlineOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteKlineOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteKlineOutput)
    MergeFrom(*source);
  }
}

void QuoteKlineOutput::MergeFrom(const QuoteKlineOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteKlineOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  results_.MergeFrom(from.results_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteKlineOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteKlineOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteKlineOutput::CopyFrom(const QuoteKlineOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteKlineOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteKlineOutput::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->results())) return false;
  return true;
}

void QuoteKlineOutput::Swap(QuoteKlineOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteKlineOutput::InternalSwap(QuoteKlineOutput* other) {
  results_.UnsafeArenaSwap(&other->results_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteKlineOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteKlineOutput_descriptor_;
  metadata.reflection = QuoteKlineOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteKlineOutput

// repeated .dzhyun.QuoteKlineSingle Results = 1;
int QuoteKlineOutput::results_size() const {
  return results_.size();
}
void QuoteKlineOutput::clear_results() {
  results_.Clear();
}
const ::dzhyun::QuoteKlineSingle& QuoteKlineOutput::results(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteKlineOutput.Results)
  return results_.Get(index);
}
::dzhyun::QuoteKlineSingle* QuoteKlineOutput::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteKlineOutput.Results)
  return results_.Mutable(index);
}
::dzhyun::QuoteKlineSingle* QuoteKlineOutput::add_results() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteKlineOutput.Results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteKlineSingle >*
QuoteKlineOutput::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteKlineOutput.Results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteKlineSingle >&
QuoteKlineOutput::results() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteKlineOutput.Results)
  return results_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteTick::kTimeFieldNumber;
const int QuoteTick::kPriceFieldNumber;
const int QuoteTick::kVolumeFieldNumber;
const int QuoteTick::kAmountFieldNumber;
const int QuoteTick::kTickCountFieldNumber;
const int QuoteTick::kBuyPriceFieldNumber;
const int QuoteTick::kBuyVolumeFieldNumber;
const int QuoteTick::kSellPriceFieldNumber;
const int QuoteTick::kSellVolumeFieldNumber;
const int QuoteTick::kOutterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteTick::QuoteTick()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteTick)
}

void QuoteTick::InitAsDefaultInstance() {
}

QuoteTick::QuoteTick(const QuoteTick& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteTick)
}

void QuoteTick::SharedCtor() {
  _cached_size_ = 0;
  time_ = 0;
  price_ = 0;
  volume_ = 0;
  amount_ = 0;
  tickcount_ = 0;
  outter_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteTick::~QuoteTick() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteTick)
  SharedDtor();
}

void QuoteTick::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuoteTick::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteTick::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteTick_descriptor_;
}

const QuoteTick& QuoteTick::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteTick* QuoteTick::default_instance_ = NULL;

QuoteTick* QuoteTick::New(::google::protobuf::Arena* arena) const {
  QuoteTick* n = new QuoteTick;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteTick::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteTick)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QuoteTick, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QuoteTick*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(time_, amount_);
    tickcount_ = 0;
  }
  outter_ = 0;

#undef ZR_HELPER_
#undef ZR_

  buyprice_.Clear();
  buyvolume_.Clear();
  sellprice_.Clear();
  sellvolume_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteTick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteTick)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Time = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_Price;
        break;
      }

      // optional float Price = 2;
      case 2: {
        if (tag == 21) {
         parse_Price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_Volume;
        break;
      }

      // optional float Volume = 3;
      case 3: {
        if (tag == 29) {
         parse_Volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &volume_)));
          set_has_volume();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_Amount;
        break;
      }

      // optional float Amount = 4;
      case 4: {
        if (tag == 37) {
         parse_Amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_TickCount;
        break;
      }

      // optional int32 TickCount = 5;
      case 5: {
        if (tag == 40) {
         parse_TickCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tickcount_)));
          set_has_tickcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_BuyPrice;
        break;
      }

      // repeated float BuyPrice = 6;
      case 6: {
        if (tag == 53) {
         parse_BuyPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 53, input, this->mutable_buyprice())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_buyprice())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_BuyPrice;
        if (input->ExpectTag(61)) goto parse_BuyVolume;
        break;
      }

      // repeated float BuyVolume = 7;
      case 7: {
        if (tag == 61) {
         parse_BuyVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 61, input, this->mutable_buyvolume())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_buyvolume())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_BuyVolume;
        if (input->ExpectTag(69)) goto parse_SellPrice;
        break;
      }

      // repeated float SellPrice = 8;
      case 8: {
        if (tag == 69) {
         parse_SellPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 69, input, this->mutable_sellprice())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_sellprice())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_SellPrice;
        if (input->ExpectTag(77)) goto parse_SellVolume;
        break;
      }

      // repeated float SellVolume = 9;
      case 9: {
        if (tag == 77) {
         parse_SellVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 77, input, this->mutable_sellvolume())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_sellvolume())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_SellVolume;
        if (input->ExpectTag(80)) goto parse_Outter;
        break;
      }

      // optional int32 Outter = 10;
      case 10: {
        if (tag == 80) {
         parse_Outter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &outter_)));
          set_has_outter();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteTick)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteTick)
  return false;
#undef DO_
}

void QuoteTick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteTick)
  // optional int32 Time = 1;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->time(), output);
  }

  // optional float Price = 2;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->price(), output);
  }

  // optional float Volume = 3;
  if (has_volume()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->volume(), output);
  }

  // optional float Amount = 4;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->amount(), output);
  }

  // optional int32 TickCount = 5;
  if (has_tickcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->tickcount(), output);
  }

  // repeated float BuyPrice = 6;
  for (int i = 0; i < this->buyprice_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      6, this->buyprice(i), output);
  }

  // repeated float BuyVolume = 7;
  for (int i = 0; i < this->buyvolume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      7, this->buyvolume(i), output);
  }

  // repeated float SellPrice = 8;
  for (int i = 0; i < this->sellprice_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      8, this->sellprice(i), output);
  }

  // repeated float SellVolume = 9;
  for (int i = 0; i < this->sellvolume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      9, this->sellvolume(i), output);
  }

  // optional int32 Outter = 10;
  if (has_outter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->outter(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteTick)
}

::google::protobuf::uint8* QuoteTick::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteTick)
  // optional int32 Time = 1;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->time(), target);
  }

  // optional float Price = 2;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->price(), target);
  }

  // optional float Volume = 3;
  if (has_volume()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->volume(), target);
  }

  // optional float Amount = 4;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->amount(), target);
  }

  // optional int32 TickCount = 5;
  if (has_tickcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->tickcount(), target);
  }

  // repeated float BuyPrice = 6;
  for (int i = 0; i < this->buyprice_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(6, this->buyprice(i), target);
  }

  // repeated float BuyVolume = 7;
  for (int i = 0; i < this->buyvolume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(7, this->buyvolume(i), target);
  }

  // repeated float SellPrice = 8;
  for (int i = 0; i < this->sellprice_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(8, this->sellprice(i), target);
  }

  // repeated float SellVolume = 9;
  for (int i = 0; i < this->sellvolume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(9, this->sellvolume(i), target);
  }

  // optional int32 Outter = 10;
  if (has_outter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->outter(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteTick)
  return target;
}

int QuoteTick::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteTick)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 Time = 1;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }

    // optional float Price = 2;
    if (has_price()) {
      total_size += 1 + 4;
    }

    // optional float Volume = 3;
    if (has_volume()) {
      total_size += 1 + 4;
    }

    // optional float Amount = 4;
    if (has_amount()) {
      total_size += 1 + 4;
    }

    // optional int32 TickCount = 5;
    if (has_tickcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tickcount());
    }

  }
  // optional int32 Outter = 10;
  if (has_outter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->outter());
  }

  // repeated float BuyPrice = 6;
  {
    int data_size = 0;
    data_size = 4 * this->buyprice_size();
    total_size += 1 * this->buyprice_size() + data_size;
  }

  // repeated float BuyVolume = 7;
  {
    int data_size = 0;
    data_size = 4 * this->buyvolume_size();
    total_size += 1 * this->buyvolume_size() + data_size;
  }

  // repeated float SellPrice = 8;
  {
    int data_size = 0;
    data_size = 4 * this->sellprice_size();
    total_size += 1 * this->sellprice_size() + data_size;
  }

  // repeated float SellVolume = 9;
  {
    int data_size = 0;
    data_size = 4 * this->sellvolume_size();
    total_size += 1 * this->sellvolume_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteTick::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteTick)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteTick* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteTick>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteTick)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteTick)
    MergeFrom(*source);
  }
}

void QuoteTick::MergeFrom(const QuoteTick& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteTick)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  buyprice_.MergeFrom(from.buyprice_);
  buyvolume_.MergeFrom(from.buyvolume_);
  sellprice_.MergeFrom(from.sellprice_);
  sellvolume_.MergeFrom(from.sellvolume_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_volume()) {
      set_volume(from.volume());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_tickcount()) {
      set_tickcount(from.tickcount());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_outter()) {
      set_outter(from.outter());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteTick::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteTick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteTick::CopyFrom(const QuoteTick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteTick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteTick::IsInitialized() const {

  return true;
}

void QuoteTick::Swap(QuoteTick* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteTick::InternalSwap(QuoteTick* other) {
  std::swap(time_, other->time_);
  std::swap(price_, other->price_);
  std::swap(volume_, other->volume_);
  std::swap(amount_, other->amount_);
  std::swap(tickcount_, other->tickcount_);
  buyprice_.UnsafeArenaSwap(&other->buyprice_);
  buyvolume_.UnsafeArenaSwap(&other->buyvolume_);
  sellprice_.UnsafeArenaSwap(&other->sellprice_);
  sellvolume_.UnsafeArenaSwap(&other->sellvolume_);
  std::swap(outter_, other->outter_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteTick::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteTick_descriptor_;
  metadata.reflection = QuoteTick_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteTick

// optional int32 Time = 1;
bool QuoteTick::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteTick::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteTick::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteTick::clear_time() {
  time_ = 0;
  clear_has_time();
}
 ::google::protobuf::int32 QuoteTick::time() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteTick.Time)
  return time_;
}
 void QuoteTick::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteTick.Time)
}

// optional float Price = 2;
bool QuoteTick::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QuoteTick::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
void QuoteTick::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
void QuoteTick::clear_price() {
  price_ = 0;
  clear_has_price();
}
 float QuoteTick::price() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteTick.Price)
  return price_;
}
 void QuoteTick::set_price(float value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteTick.Price)
}

// optional float Volume = 3;
bool QuoteTick::has_volume() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteTick::set_has_volume() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteTick::clear_has_volume() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteTick::clear_volume() {
  volume_ = 0;
  clear_has_volume();
}
 float QuoteTick::volume() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteTick.Volume)
  return volume_;
}
 void QuoteTick::set_volume(float value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteTick.Volume)
}

// optional float Amount = 4;
bool QuoteTick::has_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QuoteTick::set_has_amount() {
  _has_bits_[0] |= 0x00000008u;
}
void QuoteTick::clear_has_amount() {
  _has_bits_[0] &= ~0x00000008u;
}
void QuoteTick::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
 float QuoteTick::amount() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteTick.Amount)
  return amount_;
}
 void QuoteTick::set_amount(float value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteTick.Amount)
}

// optional int32 TickCount = 5;
bool QuoteTick::has_tickcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QuoteTick::set_has_tickcount() {
  _has_bits_[0] |= 0x00000010u;
}
void QuoteTick::clear_has_tickcount() {
  _has_bits_[0] &= ~0x00000010u;
}
void QuoteTick::clear_tickcount() {
  tickcount_ = 0;
  clear_has_tickcount();
}
 ::google::protobuf::int32 QuoteTick::tickcount() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteTick.TickCount)
  return tickcount_;
}
 void QuoteTick::set_tickcount(::google::protobuf::int32 value) {
  set_has_tickcount();
  tickcount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteTick.TickCount)
}

// repeated float BuyPrice = 6;
int QuoteTick::buyprice_size() const {
  return buyprice_.size();
}
void QuoteTick::clear_buyprice() {
  buyprice_.Clear();
}
 float QuoteTick::buyprice(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteTick.BuyPrice)
  return buyprice_.Get(index);
}
 void QuoteTick::set_buyprice(int index, float value) {
  buyprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteTick.BuyPrice)
}
 void QuoteTick::add_buyprice(float value) {
  buyprice_.Add(value);
  // @@protoc_insertion_point(field_add:dzhyun.QuoteTick.BuyPrice)
}
 const ::google::protobuf::RepeatedField< float >&
QuoteTick::buyprice() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteTick.BuyPrice)
  return buyprice_;
}
 ::google::protobuf::RepeatedField< float >*
QuoteTick::mutable_buyprice() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteTick.BuyPrice)
  return &buyprice_;
}

// repeated float BuyVolume = 7;
int QuoteTick::buyvolume_size() const {
  return buyvolume_.size();
}
void QuoteTick::clear_buyvolume() {
  buyvolume_.Clear();
}
 float QuoteTick::buyvolume(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteTick.BuyVolume)
  return buyvolume_.Get(index);
}
 void QuoteTick::set_buyvolume(int index, float value) {
  buyvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteTick.BuyVolume)
}
 void QuoteTick::add_buyvolume(float value) {
  buyvolume_.Add(value);
  // @@protoc_insertion_point(field_add:dzhyun.QuoteTick.BuyVolume)
}
 const ::google::protobuf::RepeatedField< float >&
QuoteTick::buyvolume() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteTick.BuyVolume)
  return buyvolume_;
}
 ::google::protobuf::RepeatedField< float >*
QuoteTick::mutable_buyvolume() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteTick.BuyVolume)
  return &buyvolume_;
}

// repeated float SellPrice = 8;
int QuoteTick::sellprice_size() const {
  return sellprice_.size();
}
void QuoteTick::clear_sellprice() {
  sellprice_.Clear();
}
 float QuoteTick::sellprice(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteTick.SellPrice)
  return sellprice_.Get(index);
}
 void QuoteTick::set_sellprice(int index, float value) {
  sellprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteTick.SellPrice)
}
 void QuoteTick::add_sellprice(float value) {
  sellprice_.Add(value);
  // @@protoc_insertion_point(field_add:dzhyun.QuoteTick.SellPrice)
}
 const ::google::protobuf::RepeatedField< float >&
QuoteTick::sellprice() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteTick.SellPrice)
  return sellprice_;
}
 ::google::protobuf::RepeatedField< float >*
QuoteTick::mutable_sellprice() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteTick.SellPrice)
  return &sellprice_;
}

// repeated float SellVolume = 9;
int QuoteTick::sellvolume_size() const {
  return sellvolume_.size();
}
void QuoteTick::clear_sellvolume() {
  sellvolume_.Clear();
}
 float QuoteTick::sellvolume(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteTick.SellVolume)
  return sellvolume_.Get(index);
}
 void QuoteTick::set_sellvolume(int index, float value) {
  sellvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteTick.SellVolume)
}
 void QuoteTick::add_sellvolume(float value) {
  sellvolume_.Add(value);
  // @@protoc_insertion_point(field_add:dzhyun.QuoteTick.SellVolume)
}
 const ::google::protobuf::RepeatedField< float >&
QuoteTick::sellvolume() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteTick.SellVolume)
  return sellvolume_;
}
 ::google::protobuf::RepeatedField< float >*
QuoteTick::mutable_sellvolume() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteTick.SellVolume)
  return &sellvolume_;
}

// optional int32 Outter = 10;
bool QuoteTick::has_outter() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void QuoteTick::set_has_outter() {
  _has_bits_[0] |= 0x00000200u;
}
void QuoteTick::clear_has_outter() {
  _has_bits_[0] &= ~0x00000200u;
}
void QuoteTick::clear_outter() {
  outter_ = 0;
  clear_has_outter();
}
 ::google::protobuf::int32 QuoteTick::outter() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteTick.Outter)
  return outter_;
}
 void QuoteTick::set_outter(::google::protobuf::int32 value) {
  set_has_outter();
  outter_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteTick.Outter)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteTickSingle::kObjFieldNumber;
const int QuoteTickSingle::kDataFieldNumber;
const int QuoteTickSingle::kQingPanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteTickSingle::QuoteTickSingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteTickSingle)
}

void QuoteTickSingle::InitAsDefaultInstance() {
}

QuoteTickSingle::QuoteTickSingle(const QuoteTickSingle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteTickSingle)
}

void QuoteTickSingle::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qingpan_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteTickSingle::~QuoteTickSingle() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteTickSingle)
  SharedDtor();
}

void QuoteTickSingle::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QuoteTickSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteTickSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteTickSingle_descriptor_;
}

const QuoteTickSingle& QuoteTickSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteTickSingle* QuoteTickSingle::default_instance_ = NULL;

QuoteTickSingle* QuoteTickSingle::New(::google::protobuf::Arena* arena) const {
  QuoteTickSingle* n = new QuoteTickSingle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteTickSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteTickSingle)
  if (_has_bits_[0 / 32] & 5u) {
    if (has_obj()) {
      obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    qingpan_ = GOOGLE_LONGLONG(0);
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteTickSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteTickSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QuoteTickSingle.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .dzhyun.FenBiChengJiao Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_QingPan;
        break;
      }

      // optional int64 QingPan = 3;
      case 3: {
        if (tag == 24) {
         parse_QingPan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &qingpan_)));
          set_has_qingpan();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteTickSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteTickSingle)
  return false;
#undef DO_
}

void QuoteTickSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteTickSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteTickSingle.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // repeated .dzhyun.FenBiChengJiao Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // optional int64 QingPan = 3;
  if (has_qingpan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->qingpan(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteTickSingle)
}

::google::protobuf::uint8* QuoteTickSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteTickSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteTickSingle.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // repeated .dzhyun.FenBiChengJiao Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  // optional int64 QingPan = 3;
  if (has_qingpan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->qingpan(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteTickSingle)
  return target;
}

int QuoteTickSingle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteTickSingle)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  // optional int64 QingPan = 3;
  if (has_qingpan()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->qingpan());
  }

  // repeated .dzhyun.FenBiChengJiao Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteTickSingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteTickSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteTickSingle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteTickSingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteTickSingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteTickSingle)
    MergeFrom(*source);
  }
}

void QuoteTickSingle::MergeFrom(const QuoteTickSingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteTickSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
    if (from.has_qingpan()) {
      set_qingpan(from.qingpan());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteTickSingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteTickSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteTickSingle::CopyFrom(const QuoteTickSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteTickSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteTickSingle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void QuoteTickSingle::Swap(QuoteTickSingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteTickSingle::InternalSwap(QuoteTickSingle* other) {
  obj_.Swap(&other->obj_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(qingpan_, other->qingpan_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteTickSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteTickSingle_descriptor_;
  metadata.reflection = QuoteTickSingle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteTickSingle

// required string Obj = 1;
bool QuoteTickSingle::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteTickSingle::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteTickSingle::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteTickSingle::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& QuoteTickSingle::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteTickSingle.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteTickSingle::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteTickSingle.Obj)
}
 void QuoteTickSingle::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QuoteTickSingle.Obj)
}
 void QuoteTickSingle::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QuoteTickSingle.Obj)
}
 ::std::string* QuoteTickSingle::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteTickSingle.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QuoteTickSingle::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.QuoteTickSingle.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteTickSingle::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QuoteTickSingle.Obj)
}

// repeated .dzhyun.FenBiChengJiao Data = 2;
int QuoteTickSingle::data_size() const {
  return data_.size();
}
void QuoteTickSingle::clear_data() {
  data_.Clear();
}
const ::dzhyun::FenBiChengJiao& QuoteTickSingle::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteTickSingle.Data)
  return data_.Get(index);
}
::dzhyun::FenBiChengJiao* QuoteTickSingle::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteTickSingle.Data)
  return data_.Mutable(index);
}
::dzhyun::FenBiChengJiao* QuoteTickSingle::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteTickSingle.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::FenBiChengJiao >*
QuoteTickSingle::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteTickSingle.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::FenBiChengJiao >&
QuoteTickSingle::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteTickSingle.Data)
  return data_;
}

// optional int64 QingPan = 3;
bool QuoteTickSingle::has_qingpan() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteTickSingle::set_has_qingpan() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteTickSingle::clear_has_qingpan() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteTickSingle::clear_qingpan() {
  qingpan_ = GOOGLE_LONGLONG(0);
  clear_has_qingpan();
}
 ::google::protobuf::int64 QuoteTickSingle::qingpan() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteTickSingle.QingPan)
  return qingpan_;
}
 void QuoteTickSingle::set_qingpan(::google::protobuf::int64 value) {
  set_has_qingpan();
  qingpan_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteTickSingle.QingPan)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteTickOutput::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteTickOutput::QuoteTickOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteTickOutput)
}

void QuoteTickOutput::InitAsDefaultInstance() {
}

QuoteTickOutput::QuoteTickOutput(const QuoteTickOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteTickOutput)
}

void QuoteTickOutput::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteTickOutput::~QuoteTickOutput() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteTickOutput)
  SharedDtor();
}

void QuoteTickOutput::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuoteTickOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteTickOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteTickOutput_descriptor_;
}

const QuoteTickOutput& QuoteTickOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteTickOutput* QuoteTickOutput::default_instance_ = NULL;

QuoteTickOutput* QuoteTickOutput::New(::google::protobuf::Arena* arena) const {
  QuoteTickOutput* n = new QuoteTickOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteTickOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteTickOutput)
  results_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteTickOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteTickOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dzhyun.QuoteTickSingle Results = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_Results;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteTickOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteTickOutput)
  return false;
#undef DO_
}

void QuoteTickOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteTickOutput)
  // repeated .dzhyun.QuoteTickSingle Results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->results(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteTickOutput)
}

::google::protobuf::uint8* QuoteTickOutput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteTickOutput)
  // repeated .dzhyun.QuoteTickSingle Results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->results(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteTickOutput)
  return target;
}

int QuoteTickOutput::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteTickOutput)
  int total_size = 0;

  // repeated .dzhyun.QuoteTickSingle Results = 1;
  total_size += 1 * this->results_size();
  for (int i = 0; i < this->results_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->results(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteTickOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteTickOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteTickOutput* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteTickOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteTickOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteTickOutput)
    MergeFrom(*source);
  }
}

void QuoteTickOutput::MergeFrom(const QuoteTickOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteTickOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  results_.MergeFrom(from.results_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteTickOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteTickOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteTickOutput::CopyFrom(const QuoteTickOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteTickOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteTickOutput::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->results())) return false;
  return true;
}

void QuoteTickOutput::Swap(QuoteTickOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteTickOutput::InternalSwap(QuoteTickOutput* other) {
  results_.UnsafeArenaSwap(&other->results_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteTickOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteTickOutput_descriptor_;
  metadata.reflection = QuoteTickOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteTickOutput

// repeated .dzhyun.QuoteTickSingle Results = 1;
int QuoteTickOutput::results_size() const {
  return results_.size();
}
void QuoteTickOutput::clear_results() {
  results_.Clear();
}
const ::dzhyun::QuoteTickSingle& QuoteTickOutput::results(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteTickOutput.Results)
  return results_.Get(index);
}
::dzhyun::QuoteTickSingle* QuoteTickOutput::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteTickOutput.Results)
  return results_.Mutable(index);
}
::dzhyun::QuoteTickSingle* QuoteTickOutput::add_results() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteTickOutput.Results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteTickSingle >*
QuoteTickOutput::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteTickOutput.Results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteTickSingle >&
QuoteTickOutput::results() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteTickOutput.Results)
  return results_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteMin::kTimeFieldNumber;
const int QuoteMin::kPriceFieldNumber;
const int QuoteMin::kVolumeFieldNumber;
const int QuoteMin::kAmountFieldNumber;
const int QuoteMin::kTickCountFieldNumber;
const int QuoteMin::kBuyPriceFieldNumber;
const int QuoteMin::kBuyVolumeFieldNumber;
const int QuoteMin::kSellPriceFieldNumber;
const int QuoteMin::kSellVolumeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteMin::QuoteMin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteMin)
}

void QuoteMin::InitAsDefaultInstance() {
}

QuoteMin::QuoteMin(const QuoteMin& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteMin)
}

void QuoteMin::SharedCtor() {
  _cached_size_ = 0;
  time_ = 0;
  price_ = 0;
  volume_ = 0;
  amount_ = 0;
  tickcount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteMin::~QuoteMin() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteMin)
  SharedDtor();
}

void QuoteMin::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuoteMin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteMin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteMin_descriptor_;
}

const QuoteMin& QuoteMin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteMin* QuoteMin::default_instance_ = NULL;

QuoteMin* QuoteMin::New(::google::protobuf::Arena* arena) const {
  QuoteMin* n = new QuoteMin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteMin::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteMin)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QuoteMin, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QuoteMin*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(time_, amount_);
    tickcount_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  buyprice_.Clear();
  buyvolume_.Clear();
  sellprice_.Clear();
  sellvolume_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteMin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteMin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Time = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_Price;
        break;
      }

      // optional float Price = 2;
      case 2: {
        if (tag == 21) {
         parse_Price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_Volume;
        break;
      }

      // optional float Volume = 3;
      case 3: {
        if (tag == 29) {
         parse_Volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &volume_)));
          set_has_volume();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_Amount;
        break;
      }

      // optional float Amount = 4;
      case 4: {
        if (tag == 37) {
         parse_Amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_TickCount;
        break;
      }

      // optional int32 TickCount = 5;
      case 5: {
        if (tag == 40) {
         parse_TickCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tickcount_)));
          set_has_tickcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_BuyPrice;
        break;
      }

      // repeated float BuyPrice = 6;
      case 6: {
        if (tag == 53) {
         parse_BuyPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 53, input, this->mutable_buyprice())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_buyprice())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_BuyPrice;
        if (input->ExpectTag(61)) goto parse_BuyVolume;
        break;
      }

      // repeated float BuyVolume = 7;
      case 7: {
        if (tag == 61) {
         parse_BuyVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 61, input, this->mutable_buyvolume())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_buyvolume())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_BuyVolume;
        if (input->ExpectTag(69)) goto parse_SellPrice;
        break;
      }

      // repeated float SellPrice = 8;
      case 8: {
        if (tag == 69) {
         parse_SellPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 69, input, this->mutable_sellprice())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_sellprice())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_SellPrice;
        if (input->ExpectTag(77)) goto parse_SellVolume;
        break;
      }

      // repeated float SellVolume = 9;
      case 9: {
        if (tag == 77) {
         parse_SellVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 77, input, this->mutable_sellvolume())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_sellvolume())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_SellVolume;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteMin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteMin)
  return false;
#undef DO_
}

void QuoteMin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteMin)
  // optional int32 Time = 1;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->time(), output);
  }

  // optional float Price = 2;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->price(), output);
  }

  // optional float Volume = 3;
  if (has_volume()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->volume(), output);
  }

  // optional float Amount = 4;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->amount(), output);
  }

  // optional int32 TickCount = 5;
  if (has_tickcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->tickcount(), output);
  }

  // repeated float BuyPrice = 6;
  for (int i = 0; i < this->buyprice_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      6, this->buyprice(i), output);
  }

  // repeated float BuyVolume = 7;
  for (int i = 0; i < this->buyvolume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      7, this->buyvolume(i), output);
  }

  // repeated float SellPrice = 8;
  for (int i = 0; i < this->sellprice_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      8, this->sellprice(i), output);
  }

  // repeated float SellVolume = 9;
  for (int i = 0; i < this->sellvolume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      9, this->sellvolume(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteMin)
}

::google::protobuf::uint8* QuoteMin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteMin)
  // optional int32 Time = 1;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->time(), target);
  }

  // optional float Price = 2;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->price(), target);
  }

  // optional float Volume = 3;
  if (has_volume()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->volume(), target);
  }

  // optional float Amount = 4;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->amount(), target);
  }

  // optional int32 TickCount = 5;
  if (has_tickcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->tickcount(), target);
  }

  // repeated float BuyPrice = 6;
  for (int i = 0; i < this->buyprice_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(6, this->buyprice(i), target);
  }

  // repeated float BuyVolume = 7;
  for (int i = 0; i < this->buyvolume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(7, this->buyvolume(i), target);
  }

  // repeated float SellPrice = 8;
  for (int i = 0; i < this->sellprice_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(8, this->sellprice(i), target);
  }

  // repeated float SellVolume = 9;
  for (int i = 0; i < this->sellvolume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(9, this->sellvolume(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteMin)
  return target;
}

int QuoteMin::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteMin)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 Time = 1;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }

    // optional float Price = 2;
    if (has_price()) {
      total_size += 1 + 4;
    }

    // optional float Volume = 3;
    if (has_volume()) {
      total_size += 1 + 4;
    }

    // optional float Amount = 4;
    if (has_amount()) {
      total_size += 1 + 4;
    }

    // optional int32 TickCount = 5;
    if (has_tickcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tickcount());
    }

  }
  // repeated float BuyPrice = 6;
  {
    int data_size = 0;
    data_size = 4 * this->buyprice_size();
    total_size += 1 * this->buyprice_size() + data_size;
  }

  // repeated float BuyVolume = 7;
  {
    int data_size = 0;
    data_size = 4 * this->buyvolume_size();
    total_size += 1 * this->buyvolume_size() + data_size;
  }

  // repeated float SellPrice = 8;
  {
    int data_size = 0;
    data_size = 4 * this->sellprice_size();
    total_size += 1 * this->sellprice_size() + data_size;
  }

  // repeated float SellVolume = 9;
  {
    int data_size = 0;
    data_size = 4 * this->sellvolume_size();
    total_size += 1 * this->sellvolume_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteMin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteMin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteMin* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteMin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteMin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteMin)
    MergeFrom(*source);
  }
}

void QuoteMin::MergeFrom(const QuoteMin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteMin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  buyprice_.MergeFrom(from.buyprice_);
  buyvolume_.MergeFrom(from.buyvolume_);
  sellprice_.MergeFrom(from.sellprice_);
  sellvolume_.MergeFrom(from.sellvolume_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_volume()) {
      set_volume(from.volume());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_tickcount()) {
      set_tickcount(from.tickcount());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteMin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteMin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteMin::CopyFrom(const QuoteMin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteMin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteMin::IsInitialized() const {

  return true;
}

void QuoteMin::Swap(QuoteMin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteMin::InternalSwap(QuoteMin* other) {
  std::swap(time_, other->time_);
  std::swap(price_, other->price_);
  std::swap(volume_, other->volume_);
  std::swap(amount_, other->amount_);
  std::swap(tickcount_, other->tickcount_);
  buyprice_.UnsafeArenaSwap(&other->buyprice_);
  buyvolume_.UnsafeArenaSwap(&other->buyvolume_);
  sellprice_.UnsafeArenaSwap(&other->sellprice_);
  sellvolume_.UnsafeArenaSwap(&other->sellvolume_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteMin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteMin_descriptor_;
  metadata.reflection = QuoteMin_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteMin

// optional int32 Time = 1;
bool QuoteMin::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteMin::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteMin::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteMin::clear_time() {
  time_ = 0;
  clear_has_time();
}
 ::google::protobuf::int32 QuoteMin::time() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMin.Time)
  return time_;
}
 void QuoteMin::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMin.Time)
}

// optional float Price = 2;
bool QuoteMin::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QuoteMin::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
void QuoteMin::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
void QuoteMin::clear_price() {
  price_ = 0;
  clear_has_price();
}
 float QuoteMin::price() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMin.Price)
  return price_;
}
 void QuoteMin::set_price(float value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMin.Price)
}

// optional float Volume = 3;
bool QuoteMin::has_volume() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteMin::set_has_volume() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteMin::clear_has_volume() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteMin::clear_volume() {
  volume_ = 0;
  clear_has_volume();
}
 float QuoteMin::volume() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMin.Volume)
  return volume_;
}
 void QuoteMin::set_volume(float value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMin.Volume)
}

// optional float Amount = 4;
bool QuoteMin::has_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QuoteMin::set_has_amount() {
  _has_bits_[0] |= 0x00000008u;
}
void QuoteMin::clear_has_amount() {
  _has_bits_[0] &= ~0x00000008u;
}
void QuoteMin::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
 float QuoteMin::amount() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMin.Amount)
  return amount_;
}
 void QuoteMin::set_amount(float value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMin.Amount)
}

// optional int32 TickCount = 5;
bool QuoteMin::has_tickcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QuoteMin::set_has_tickcount() {
  _has_bits_[0] |= 0x00000010u;
}
void QuoteMin::clear_has_tickcount() {
  _has_bits_[0] &= ~0x00000010u;
}
void QuoteMin::clear_tickcount() {
  tickcount_ = 0;
  clear_has_tickcount();
}
 ::google::protobuf::int32 QuoteMin::tickcount() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMin.TickCount)
  return tickcount_;
}
 void QuoteMin::set_tickcount(::google::protobuf::int32 value) {
  set_has_tickcount();
  tickcount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMin.TickCount)
}

// repeated float BuyPrice = 6;
int QuoteMin::buyprice_size() const {
  return buyprice_.size();
}
void QuoteMin::clear_buyprice() {
  buyprice_.Clear();
}
 float QuoteMin::buyprice(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMin.BuyPrice)
  return buyprice_.Get(index);
}
 void QuoteMin::set_buyprice(int index, float value) {
  buyprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMin.BuyPrice)
}
 void QuoteMin::add_buyprice(float value) {
  buyprice_.Add(value);
  // @@protoc_insertion_point(field_add:dzhyun.QuoteMin.BuyPrice)
}
 const ::google::protobuf::RepeatedField< float >&
QuoteMin::buyprice() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteMin.BuyPrice)
  return buyprice_;
}
 ::google::protobuf::RepeatedField< float >*
QuoteMin::mutable_buyprice() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteMin.BuyPrice)
  return &buyprice_;
}

// repeated float BuyVolume = 7;
int QuoteMin::buyvolume_size() const {
  return buyvolume_.size();
}
void QuoteMin::clear_buyvolume() {
  buyvolume_.Clear();
}
 float QuoteMin::buyvolume(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMin.BuyVolume)
  return buyvolume_.Get(index);
}
 void QuoteMin::set_buyvolume(int index, float value) {
  buyvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMin.BuyVolume)
}
 void QuoteMin::add_buyvolume(float value) {
  buyvolume_.Add(value);
  // @@protoc_insertion_point(field_add:dzhyun.QuoteMin.BuyVolume)
}
 const ::google::protobuf::RepeatedField< float >&
QuoteMin::buyvolume() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteMin.BuyVolume)
  return buyvolume_;
}
 ::google::protobuf::RepeatedField< float >*
QuoteMin::mutable_buyvolume() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteMin.BuyVolume)
  return &buyvolume_;
}

// repeated float SellPrice = 8;
int QuoteMin::sellprice_size() const {
  return sellprice_.size();
}
void QuoteMin::clear_sellprice() {
  sellprice_.Clear();
}
 float QuoteMin::sellprice(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMin.SellPrice)
  return sellprice_.Get(index);
}
 void QuoteMin::set_sellprice(int index, float value) {
  sellprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMin.SellPrice)
}
 void QuoteMin::add_sellprice(float value) {
  sellprice_.Add(value);
  // @@protoc_insertion_point(field_add:dzhyun.QuoteMin.SellPrice)
}
 const ::google::protobuf::RepeatedField< float >&
QuoteMin::sellprice() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteMin.SellPrice)
  return sellprice_;
}
 ::google::protobuf::RepeatedField< float >*
QuoteMin::mutable_sellprice() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteMin.SellPrice)
  return &sellprice_;
}

// repeated float SellVolume = 9;
int QuoteMin::sellvolume_size() const {
  return sellvolume_.size();
}
void QuoteMin::clear_sellvolume() {
  sellvolume_.Clear();
}
 float QuoteMin::sellvolume(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMin.SellVolume)
  return sellvolume_.Get(index);
}
 void QuoteMin::set_sellvolume(int index, float value) {
  sellvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMin.SellVolume)
}
 void QuoteMin::add_sellvolume(float value) {
  sellvolume_.Add(value);
  // @@protoc_insertion_point(field_add:dzhyun.QuoteMin.SellVolume)
}
 const ::google::protobuf::RepeatedField< float >&
QuoteMin::sellvolume() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteMin.SellVolume)
  return sellvolume_;
}
 ::google::protobuf::RepeatedField< float >*
QuoteMin::mutable_sellvolume() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteMin.SellVolume)
  return &sellvolume_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteMinSingle_JiaoYiShiJianDuanJieGou::kKaiShiShiJianFieldNumber;
const int QuoteMinSingle_JiaoYiShiJianDuanJieGou::kJieShuShiJianFieldNumber;
const int QuoteMinSingle_JiaoYiShiJianDuanJieGou::kKaiShiRiQiFieldNumber;
const int QuoteMinSingle_JiaoYiShiJianDuanJieGou::kJieShuRiQiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteMinSingle_JiaoYiShiJianDuanJieGou::QuoteMinSingle_JiaoYiShiJianDuanJieGou()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
}

void QuoteMinSingle_JiaoYiShiJianDuanJieGou::InitAsDefaultInstance() {
}

QuoteMinSingle_JiaoYiShiJianDuanJieGou::QuoteMinSingle_JiaoYiShiJianDuanJieGou(const QuoteMinSingle_JiaoYiShiJianDuanJieGou& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
}

void QuoteMinSingle_JiaoYiShiJianDuanJieGou::SharedCtor() {
  _cached_size_ = 0;
  kaishishijian_ = GOOGLE_LONGLONG(0);
  jieshushijian_ = GOOGLE_LONGLONG(0);
  kaishiriqi_ = GOOGLE_LONGLONG(0);
  jieshuriqi_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteMinSingle_JiaoYiShiJianDuanJieGou::~QuoteMinSingle_JiaoYiShiJianDuanJieGou() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
  SharedDtor();
}

void QuoteMinSingle_JiaoYiShiJianDuanJieGou::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuoteMinSingle_JiaoYiShiJianDuanJieGou::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteMinSingle_JiaoYiShiJianDuanJieGou::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteMinSingle_JiaoYiShiJianDuanJieGou_descriptor_;
}

const QuoteMinSingle_JiaoYiShiJianDuanJieGou& QuoteMinSingle_JiaoYiShiJianDuanJieGou::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteMinSingle_JiaoYiShiJianDuanJieGou* QuoteMinSingle_JiaoYiShiJianDuanJieGou::default_instance_ = NULL;

QuoteMinSingle_JiaoYiShiJianDuanJieGou* QuoteMinSingle_JiaoYiShiJianDuanJieGou::New(::google::protobuf::Arena* arena) const {
  QuoteMinSingle_JiaoYiShiJianDuanJieGou* n = new QuoteMinSingle_JiaoYiShiJianDuanJieGou;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteMinSingle_JiaoYiShiJianDuanJieGou::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QuoteMinSingle_JiaoYiShiJianDuanJieGou, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QuoteMinSingle_JiaoYiShiJianDuanJieGou*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(kaishishijian_, jieshuriqi_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteMinSingle_JiaoYiShiJianDuanJieGou::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 KaiShiShiJian = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &kaishishijian_)));
          set_has_kaishishijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_JieShuShiJian;
        break;
      }

      // optional int64 JieShuShiJian = 2;
      case 2: {
        if (tag == 16) {
         parse_JieShuShiJian:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jieshushijian_)));
          set_has_jieshushijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_KaiShiRiQi;
        break;
      }

      // optional int64 KaiShiRiQi = 3;
      case 3: {
        if (tag == 24) {
         parse_KaiShiRiQi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &kaishiriqi_)));
          set_has_kaishiriqi();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_JieShuRiQi;
        break;
      }

      // optional int64 JieShuRiQi = 4;
      case 4: {
        if (tag == 32) {
         parse_JieShuRiQi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jieshuriqi_)));
          set_has_jieshuriqi();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
  return false;
#undef DO_
}

void QuoteMinSingle_JiaoYiShiJianDuanJieGou::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
  // optional int64 KaiShiShiJian = 1;
  if (has_kaishishijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->kaishishijian(), output);
  }

  // optional int64 JieShuShiJian = 2;
  if (has_jieshushijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->jieshushijian(), output);
  }

  // optional int64 KaiShiRiQi = 3;
  if (has_kaishiriqi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->kaishiriqi(), output);
  }

  // optional int64 JieShuRiQi = 4;
  if (has_jieshuriqi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->jieshuriqi(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
}

::google::protobuf::uint8* QuoteMinSingle_JiaoYiShiJianDuanJieGou::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
  // optional int64 KaiShiShiJian = 1;
  if (has_kaishishijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->kaishishijian(), target);
  }

  // optional int64 JieShuShiJian = 2;
  if (has_jieshushijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->jieshushijian(), target);
  }

  // optional int64 KaiShiRiQi = 3;
  if (has_kaishiriqi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->kaishiriqi(), target);
  }

  // optional int64 JieShuRiQi = 4;
  if (has_jieshuriqi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->jieshuriqi(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
  return target;
}

int QuoteMinSingle_JiaoYiShiJianDuanJieGou::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional int64 KaiShiShiJian = 1;
    if (has_kaishishijian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->kaishishijian());
    }

    // optional int64 JieShuShiJian = 2;
    if (has_jieshushijian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jieshushijian());
    }

    // optional int64 KaiShiRiQi = 3;
    if (has_kaishiriqi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->kaishiriqi());
    }

    // optional int64 JieShuRiQi = 4;
    if (has_jieshuriqi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jieshuriqi());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteMinSingle_JiaoYiShiJianDuanJieGou::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteMinSingle_JiaoYiShiJianDuanJieGou* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteMinSingle_JiaoYiShiJianDuanJieGou>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
    MergeFrom(*source);
  }
}

void QuoteMinSingle_JiaoYiShiJianDuanJieGou::MergeFrom(const QuoteMinSingle_JiaoYiShiJianDuanJieGou& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_kaishishijian()) {
      set_kaishishijian(from.kaishishijian());
    }
    if (from.has_jieshushijian()) {
      set_jieshushijian(from.jieshushijian());
    }
    if (from.has_kaishiriqi()) {
      set_kaishiriqi(from.kaishiriqi());
    }
    if (from.has_jieshuriqi()) {
      set_jieshuriqi(from.jieshuriqi());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteMinSingle_JiaoYiShiJianDuanJieGou::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteMinSingle_JiaoYiShiJianDuanJieGou::CopyFrom(const QuoteMinSingle_JiaoYiShiJianDuanJieGou& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteMinSingle_JiaoYiShiJianDuanJieGou::IsInitialized() const {

  return true;
}

void QuoteMinSingle_JiaoYiShiJianDuanJieGou::Swap(QuoteMinSingle_JiaoYiShiJianDuanJieGou* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteMinSingle_JiaoYiShiJianDuanJieGou::InternalSwap(QuoteMinSingle_JiaoYiShiJianDuanJieGou* other) {
  std::swap(kaishishijian_, other->kaishishijian_);
  std::swap(jieshushijian_, other->jieshushijian_);
  std::swap(kaishiriqi_, other->kaishiriqi_);
  std::swap(jieshuriqi_, other->jieshuriqi_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteMinSingle_JiaoYiShiJianDuanJieGou::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteMinSingle_JiaoYiShiJianDuanJieGou_descriptor_;
  metadata.reflection = QuoteMinSingle_JiaoYiShiJianDuanJieGou_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteMinSingle::kObjFieldNumber;
const int QuoteMinSingle::kDataFieldNumber;
const int QuoteMinSingle::kRiQiFieldNumber;
const int QuoteMinSingle::kShiQuFieldNumber;
const int QuoteMinSingle::kJiHeJingJiaDianShuFieldNumber;
const int QuoteMinSingle::kJiaoYiShiJianDuanFieldNumber;
const int QuoteMinSingle::kZuoShouFieldNumber;
const int QuoteMinSingle::kQingPanFieldNumber;
const int QuoteMinSingle::kZuoRiJieSuanJiaFieldNumber;
const int QuoteMinSingle::kLiShiFenShiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteMinSingle::QuoteMinSingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteMinSingle)
}

void QuoteMinSingle::InitAsDefaultInstance() {
}

QuoteMinSingle::QuoteMinSingle(const QuoteMinSingle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteMinSingle)
}

void QuoteMinSingle::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  riqi_ = GOOGLE_LONGLONG(0);
  shiqu_ = GOOGLE_LONGLONG(0);
  jihejingjiadianshu_ = GOOGLE_LONGLONG(0);
  zuoshou_ = GOOGLE_LONGLONG(0);
  qingpan_ = GOOGLE_LONGLONG(0);
  zuorijiesuanjia_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteMinSingle::~QuoteMinSingle() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteMinSingle)
  SharedDtor();
}

void QuoteMinSingle::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QuoteMinSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteMinSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteMinSingle_descriptor_;
}

const QuoteMinSingle& QuoteMinSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteMinSingle* QuoteMinSingle::default_instance_ = NULL;

QuoteMinSingle* QuoteMinSingle::New(::google::protobuf::Arena* arena) const {
  QuoteMinSingle* n = new QuoteMinSingle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteMinSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteMinSingle)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QuoteMinSingle, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QuoteMinSingle*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 221u) {
    ZR_(riqi_, jihejingjiadianshu_);
    ZR_(zuoshou_, qingpan_);
    if (has_obj()) {
      obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  zuorijiesuanjia_ = GOOGLE_LONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

  data_.Clear();
  jiaoyishijianduan_.Clear();
  lishifenshi_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteMinSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteMinSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QuoteMinSingle.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .dzhyun.FenShi Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_RiQi;
        break;
      }

      // optional int64 RiQi = 3;
      case 3: {
        if (tag == 24) {
         parse_RiQi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &riqi_)));
          set_has_riqi();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ShiQu;
        break;
      }

      // optional int64 ShiQu = 4;
      case 4: {
        if (tag == 32) {
         parse_ShiQu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shiqu_)));
          set_has_shiqu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_JiHeJingJiaDianShu;
        break;
      }

      // optional int64 JiHeJingJiaDianShu = 5;
      case 5: {
        if (tag == 40) {
         parse_JiHeJingJiaDianShu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jihejingjiadianshu_)));
          set_has_jihejingjiadianshu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_JiaoYiShiJianDuan;
        break;
      }

      // repeated .dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou JiaoYiShiJianDuan = 6;
      case 6: {
        if (tag == 50) {
         parse_JiaoYiShiJianDuan:
          DO_(input->IncrementRecursionDepth());
         parse_loop_JiaoYiShiJianDuan:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_jiaoyishijianduan()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_JiaoYiShiJianDuan;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(56)) goto parse_ZuoShou;
        break;
      }

      // optional int64 ZuoShou = 7;
      case 7: {
        if (tag == 56) {
         parse_ZuoShou:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &zuoshou_)));
          set_has_zuoshou();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_QingPan;
        break;
      }

      // optional int64 QingPan = 8;
      case 8: {
        if (tag == 64) {
         parse_QingPan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &qingpan_)));
          set_has_qingpan();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_ZuoRiJieSuanJia;
        break;
      }

      // optional int64 ZuoRiJieSuanJia = 9;
      case 9: {
        if (tag == 72) {
         parse_ZuoRiJieSuanJia:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &zuorijiesuanjia_)));
          set_has_zuorijiesuanjia();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_LiShiFenShi;
        break;
      }

      // repeated .dzhyun.FenShiLishi LiShiFenShi = 10;
      case 10: {
        if (tag == 82) {
         parse_LiShiFenShi:
          DO_(input->IncrementRecursionDepth());
         parse_loop_LiShiFenShi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_lishifenshi()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_LiShiFenShi;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteMinSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteMinSingle)
  return false;
#undef DO_
}

void QuoteMinSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteMinSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteMinSingle.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // repeated .dzhyun.FenShi Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // optional int64 RiQi = 3;
  if (has_riqi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->riqi(), output);
  }

  // optional int64 ShiQu = 4;
  if (has_shiqu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->shiqu(), output);
  }

  // optional int64 JiHeJingJiaDianShu = 5;
  if (has_jihejingjiadianshu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->jihejingjiadianshu(), output);
  }

  // repeated .dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou JiaoYiShiJianDuan = 6;
  for (unsigned int i = 0, n = this->jiaoyishijianduan_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->jiaoyishijianduan(i), output);
  }

  // optional int64 ZuoShou = 7;
  if (has_zuoshou()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->zuoshou(), output);
  }

  // optional int64 QingPan = 8;
  if (has_qingpan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->qingpan(), output);
  }

  // optional int64 ZuoRiJieSuanJia = 9;
  if (has_zuorijiesuanjia()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->zuorijiesuanjia(), output);
  }

  // repeated .dzhyun.FenShiLishi LiShiFenShi = 10;
  for (unsigned int i = 0, n = this->lishifenshi_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->lishifenshi(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteMinSingle)
}

::google::protobuf::uint8* QuoteMinSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteMinSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteMinSingle.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // repeated .dzhyun.FenShi Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  // optional int64 RiQi = 3;
  if (has_riqi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->riqi(), target);
  }

  // optional int64 ShiQu = 4;
  if (has_shiqu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->shiqu(), target);
  }

  // optional int64 JiHeJingJiaDianShu = 5;
  if (has_jihejingjiadianshu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->jihejingjiadianshu(), target);
  }

  // repeated .dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou JiaoYiShiJianDuan = 6;
  for (unsigned int i = 0, n = this->jiaoyishijianduan_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->jiaoyishijianduan(i), target);
  }

  // optional int64 ZuoShou = 7;
  if (has_zuoshou()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->zuoshou(), target);
  }

  // optional int64 QingPan = 8;
  if (has_qingpan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->qingpan(), target);
  }

  // optional int64 ZuoRiJieSuanJia = 9;
  if (has_zuorijiesuanjia()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->zuorijiesuanjia(), target);
  }

  // repeated .dzhyun.FenShiLishi LiShiFenShi = 10;
  for (unsigned int i = 0, n = this->lishifenshi_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->lishifenshi(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteMinSingle)
  return target;
}

int QuoteMinSingle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteMinSingle)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  if (_has_bits_[2 / 32] & 220u) {
    // optional int64 RiQi = 3;
    if (has_riqi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->riqi());
    }

    // optional int64 ShiQu = 4;
    if (has_shiqu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shiqu());
    }

    // optional int64 JiHeJingJiaDianShu = 5;
    if (has_jihejingjiadianshu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jihejingjiadianshu());
    }

    // optional int64 ZuoShou = 7;
    if (has_zuoshou()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->zuoshou());
    }

    // optional int64 QingPan = 8;
    if (has_qingpan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->qingpan());
    }

  }
  // optional int64 ZuoRiJieSuanJia = 9;
  if (has_zuorijiesuanjia()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->zuorijiesuanjia());
  }

  // repeated .dzhyun.FenShi Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  // repeated .dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou JiaoYiShiJianDuan = 6;
  total_size += 1 * this->jiaoyishijianduan_size();
  for (int i = 0; i < this->jiaoyishijianduan_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->jiaoyishijianduan(i));
  }

  // repeated .dzhyun.FenShiLishi LiShiFenShi = 10;
  total_size += 1 * this->lishifenshi_size();
  for (int i = 0; i < this->lishifenshi_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lishifenshi(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteMinSingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteMinSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteMinSingle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteMinSingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteMinSingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteMinSingle)
    MergeFrom(*source);
  }
}

void QuoteMinSingle::MergeFrom(const QuoteMinSingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteMinSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  jiaoyishijianduan_.MergeFrom(from.jiaoyishijianduan_);
  lishifenshi_.MergeFrom(from.lishifenshi_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
    if (from.has_riqi()) {
      set_riqi(from.riqi());
    }
    if (from.has_shiqu()) {
      set_shiqu(from.shiqu());
    }
    if (from.has_jihejingjiadianshu()) {
      set_jihejingjiadianshu(from.jihejingjiadianshu());
    }
    if (from.has_zuoshou()) {
      set_zuoshou(from.zuoshou());
    }
    if (from.has_qingpan()) {
      set_qingpan(from.qingpan());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_zuorijiesuanjia()) {
      set_zuorijiesuanjia(from.zuorijiesuanjia());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteMinSingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteMinSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteMinSingle::CopyFrom(const QuoteMinSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteMinSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteMinSingle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->lishifenshi())) return false;
  return true;
}

void QuoteMinSingle::Swap(QuoteMinSingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteMinSingle::InternalSwap(QuoteMinSingle* other) {
  obj_.Swap(&other->obj_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(riqi_, other->riqi_);
  std::swap(shiqu_, other->shiqu_);
  std::swap(jihejingjiadianshu_, other->jihejingjiadianshu_);
  jiaoyishijianduan_.UnsafeArenaSwap(&other->jiaoyishijianduan_);
  std::swap(zuoshou_, other->zuoshou_);
  std::swap(qingpan_, other->qingpan_);
  std::swap(zuorijiesuanjia_, other->zuorijiesuanjia_);
  lishifenshi_.UnsafeArenaSwap(&other->lishifenshi_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteMinSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteMinSingle_descriptor_;
  metadata.reflection = QuoteMinSingle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteMinSingle_JiaoYiShiJianDuanJieGou

// optional int64 KaiShiShiJian = 1;
bool QuoteMinSingle_JiaoYiShiJianDuanJieGou::has_kaishishijian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteMinSingle_JiaoYiShiJianDuanJieGou::set_has_kaishishijian() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteMinSingle_JiaoYiShiJianDuanJieGou::clear_has_kaishishijian() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteMinSingle_JiaoYiShiJianDuanJieGou::clear_kaishishijian() {
  kaishishijian_ = GOOGLE_LONGLONG(0);
  clear_has_kaishishijian();
}
 ::google::protobuf::int64 QuoteMinSingle_JiaoYiShiJianDuanJieGou::kaishishijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou.KaiShiShiJian)
  return kaishishijian_;
}
 void QuoteMinSingle_JiaoYiShiJianDuanJieGou::set_kaishishijian(::google::protobuf::int64 value) {
  set_has_kaishishijian();
  kaishishijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou.KaiShiShiJian)
}

// optional int64 JieShuShiJian = 2;
bool QuoteMinSingle_JiaoYiShiJianDuanJieGou::has_jieshushijian() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QuoteMinSingle_JiaoYiShiJianDuanJieGou::set_has_jieshushijian() {
  _has_bits_[0] |= 0x00000002u;
}
void QuoteMinSingle_JiaoYiShiJianDuanJieGou::clear_has_jieshushijian() {
  _has_bits_[0] &= ~0x00000002u;
}
void QuoteMinSingle_JiaoYiShiJianDuanJieGou::clear_jieshushijian() {
  jieshushijian_ = GOOGLE_LONGLONG(0);
  clear_has_jieshushijian();
}
 ::google::protobuf::int64 QuoteMinSingle_JiaoYiShiJianDuanJieGou::jieshushijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou.JieShuShiJian)
  return jieshushijian_;
}
 void QuoteMinSingle_JiaoYiShiJianDuanJieGou::set_jieshushijian(::google::protobuf::int64 value) {
  set_has_jieshushijian();
  jieshushijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou.JieShuShiJian)
}

// optional int64 KaiShiRiQi = 3;
bool QuoteMinSingle_JiaoYiShiJianDuanJieGou::has_kaishiriqi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteMinSingle_JiaoYiShiJianDuanJieGou::set_has_kaishiriqi() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteMinSingle_JiaoYiShiJianDuanJieGou::clear_has_kaishiriqi() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteMinSingle_JiaoYiShiJianDuanJieGou::clear_kaishiriqi() {
  kaishiriqi_ = GOOGLE_LONGLONG(0);
  clear_has_kaishiriqi();
}
 ::google::protobuf::int64 QuoteMinSingle_JiaoYiShiJianDuanJieGou::kaishiriqi() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou.KaiShiRiQi)
  return kaishiriqi_;
}
 void QuoteMinSingle_JiaoYiShiJianDuanJieGou::set_kaishiriqi(::google::protobuf::int64 value) {
  set_has_kaishiriqi();
  kaishiriqi_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou.KaiShiRiQi)
}

// optional int64 JieShuRiQi = 4;
bool QuoteMinSingle_JiaoYiShiJianDuanJieGou::has_jieshuriqi() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QuoteMinSingle_JiaoYiShiJianDuanJieGou::set_has_jieshuriqi() {
  _has_bits_[0] |= 0x00000008u;
}
void QuoteMinSingle_JiaoYiShiJianDuanJieGou::clear_has_jieshuriqi() {
  _has_bits_[0] &= ~0x00000008u;
}
void QuoteMinSingle_JiaoYiShiJianDuanJieGou::clear_jieshuriqi() {
  jieshuriqi_ = GOOGLE_LONGLONG(0);
  clear_has_jieshuriqi();
}
 ::google::protobuf::int64 QuoteMinSingle_JiaoYiShiJianDuanJieGou::jieshuriqi() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou.JieShuRiQi)
  return jieshuriqi_;
}
 void QuoteMinSingle_JiaoYiShiJianDuanJieGou::set_jieshuriqi(::google::protobuf::int64 value) {
  set_has_jieshuriqi();
  jieshuriqi_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou.JieShuRiQi)
}

// -------------------------------------------------------------------

// QuoteMinSingle

// required string Obj = 1;
bool QuoteMinSingle::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteMinSingle::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteMinSingle::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteMinSingle::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& QuoteMinSingle::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMinSingle.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteMinSingle::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMinSingle.Obj)
}
 void QuoteMinSingle::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QuoteMinSingle.Obj)
}
 void QuoteMinSingle::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QuoteMinSingle.Obj)
}
 ::std::string* QuoteMinSingle::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteMinSingle.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QuoteMinSingle::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.QuoteMinSingle.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteMinSingle::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QuoteMinSingle.Obj)
}

// repeated .dzhyun.FenShi Data = 2;
int QuoteMinSingle::data_size() const {
  return data_.size();
}
void QuoteMinSingle::clear_data() {
  data_.Clear();
}
const ::dzhyun::FenShi& QuoteMinSingle::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMinSingle.Data)
  return data_.Get(index);
}
::dzhyun::FenShi* QuoteMinSingle::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteMinSingle.Data)
  return data_.Mutable(index);
}
::dzhyun::FenShi* QuoteMinSingle::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteMinSingle.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::FenShi >*
QuoteMinSingle::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteMinSingle.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::FenShi >&
QuoteMinSingle::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteMinSingle.Data)
  return data_;
}

// optional int64 RiQi = 3;
bool QuoteMinSingle::has_riqi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteMinSingle::set_has_riqi() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteMinSingle::clear_has_riqi() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteMinSingle::clear_riqi() {
  riqi_ = GOOGLE_LONGLONG(0);
  clear_has_riqi();
}
 ::google::protobuf::int64 QuoteMinSingle::riqi() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMinSingle.RiQi)
  return riqi_;
}
 void QuoteMinSingle::set_riqi(::google::protobuf::int64 value) {
  set_has_riqi();
  riqi_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMinSingle.RiQi)
}

// optional int64 ShiQu = 4;
bool QuoteMinSingle::has_shiqu() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QuoteMinSingle::set_has_shiqu() {
  _has_bits_[0] |= 0x00000008u;
}
void QuoteMinSingle::clear_has_shiqu() {
  _has_bits_[0] &= ~0x00000008u;
}
void QuoteMinSingle::clear_shiqu() {
  shiqu_ = GOOGLE_LONGLONG(0);
  clear_has_shiqu();
}
 ::google::protobuf::int64 QuoteMinSingle::shiqu() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMinSingle.ShiQu)
  return shiqu_;
}
 void QuoteMinSingle::set_shiqu(::google::protobuf::int64 value) {
  set_has_shiqu();
  shiqu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMinSingle.ShiQu)
}

// optional int64 JiHeJingJiaDianShu = 5;
bool QuoteMinSingle::has_jihejingjiadianshu() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QuoteMinSingle::set_has_jihejingjiadianshu() {
  _has_bits_[0] |= 0x00000010u;
}
void QuoteMinSingle::clear_has_jihejingjiadianshu() {
  _has_bits_[0] &= ~0x00000010u;
}
void QuoteMinSingle::clear_jihejingjiadianshu() {
  jihejingjiadianshu_ = GOOGLE_LONGLONG(0);
  clear_has_jihejingjiadianshu();
}
 ::google::protobuf::int64 QuoteMinSingle::jihejingjiadianshu() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMinSingle.JiHeJingJiaDianShu)
  return jihejingjiadianshu_;
}
 void QuoteMinSingle::set_jihejingjiadianshu(::google::protobuf::int64 value) {
  set_has_jihejingjiadianshu();
  jihejingjiadianshu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMinSingle.JiHeJingJiaDianShu)
}

// repeated .dzhyun.QuoteMinSingle.JiaoYiShiJianDuanJieGou JiaoYiShiJianDuan = 6;
int QuoteMinSingle::jiaoyishijianduan_size() const {
  return jiaoyishijianduan_.size();
}
void QuoteMinSingle::clear_jiaoyishijianduan() {
  jiaoyishijianduan_.Clear();
}
const ::dzhyun::QuoteMinSingle_JiaoYiShiJianDuanJieGou& QuoteMinSingle::jiaoyishijianduan(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMinSingle.JiaoYiShiJianDuan)
  return jiaoyishijianduan_.Get(index);
}
::dzhyun::QuoteMinSingle_JiaoYiShiJianDuanJieGou* QuoteMinSingle::mutable_jiaoyishijianduan(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteMinSingle.JiaoYiShiJianDuan)
  return jiaoyishijianduan_.Mutable(index);
}
::dzhyun::QuoteMinSingle_JiaoYiShiJianDuanJieGou* QuoteMinSingle::add_jiaoyishijianduan() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteMinSingle.JiaoYiShiJianDuan)
  return jiaoyishijianduan_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteMinSingle_JiaoYiShiJianDuanJieGou >*
QuoteMinSingle::mutable_jiaoyishijianduan() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteMinSingle.JiaoYiShiJianDuan)
  return &jiaoyishijianduan_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteMinSingle_JiaoYiShiJianDuanJieGou >&
QuoteMinSingle::jiaoyishijianduan() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteMinSingle.JiaoYiShiJianDuan)
  return jiaoyishijianduan_;
}

// optional int64 ZuoShou = 7;
bool QuoteMinSingle::has_zuoshou() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void QuoteMinSingle::set_has_zuoshou() {
  _has_bits_[0] |= 0x00000040u;
}
void QuoteMinSingle::clear_has_zuoshou() {
  _has_bits_[0] &= ~0x00000040u;
}
void QuoteMinSingle::clear_zuoshou() {
  zuoshou_ = GOOGLE_LONGLONG(0);
  clear_has_zuoshou();
}
 ::google::protobuf::int64 QuoteMinSingle::zuoshou() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMinSingle.ZuoShou)
  return zuoshou_;
}
 void QuoteMinSingle::set_zuoshou(::google::protobuf::int64 value) {
  set_has_zuoshou();
  zuoshou_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMinSingle.ZuoShou)
}

// optional int64 QingPan = 8;
bool QuoteMinSingle::has_qingpan() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void QuoteMinSingle::set_has_qingpan() {
  _has_bits_[0] |= 0x00000080u;
}
void QuoteMinSingle::clear_has_qingpan() {
  _has_bits_[0] &= ~0x00000080u;
}
void QuoteMinSingle::clear_qingpan() {
  qingpan_ = GOOGLE_LONGLONG(0);
  clear_has_qingpan();
}
 ::google::protobuf::int64 QuoteMinSingle::qingpan() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMinSingle.QingPan)
  return qingpan_;
}
 void QuoteMinSingle::set_qingpan(::google::protobuf::int64 value) {
  set_has_qingpan();
  qingpan_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMinSingle.QingPan)
}

// optional int64 ZuoRiJieSuanJia = 9;
bool QuoteMinSingle::has_zuorijiesuanjia() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void QuoteMinSingle::set_has_zuorijiesuanjia() {
  _has_bits_[0] |= 0x00000100u;
}
void QuoteMinSingle::clear_has_zuorijiesuanjia() {
  _has_bits_[0] &= ~0x00000100u;
}
void QuoteMinSingle::clear_zuorijiesuanjia() {
  zuorijiesuanjia_ = GOOGLE_LONGLONG(0);
  clear_has_zuorijiesuanjia();
}
 ::google::protobuf::int64 QuoteMinSingle::zuorijiesuanjia() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMinSingle.ZuoRiJieSuanJia)
  return zuorijiesuanjia_;
}
 void QuoteMinSingle::set_zuorijiesuanjia(::google::protobuf::int64 value) {
  set_has_zuorijiesuanjia();
  zuorijiesuanjia_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteMinSingle.ZuoRiJieSuanJia)
}

// repeated .dzhyun.FenShiLishi LiShiFenShi = 10;
int QuoteMinSingle::lishifenshi_size() const {
  return lishifenshi_.size();
}
void QuoteMinSingle::clear_lishifenshi() {
  lishifenshi_.Clear();
}
const ::dzhyun::FenShiLishi& QuoteMinSingle::lishifenshi(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMinSingle.LiShiFenShi)
  return lishifenshi_.Get(index);
}
::dzhyun::FenShiLishi* QuoteMinSingle::mutable_lishifenshi(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteMinSingle.LiShiFenShi)
  return lishifenshi_.Mutable(index);
}
::dzhyun::FenShiLishi* QuoteMinSingle::add_lishifenshi() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteMinSingle.LiShiFenShi)
  return lishifenshi_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::FenShiLishi >*
QuoteMinSingle::mutable_lishifenshi() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteMinSingle.LiShiFenShi)
  return &lishifenshi_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::FenShiLishi >&
QuoteMinSingle::lishifenshi() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteMinSingle.LiShiFenShi)
  return lishifenshi_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteMinOutput::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteMinOutput::QuoteMinOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteMinOutput)
}

void QuoteMinOutput::InitAsDefaultInstance() {
}

QuoteMinOutput::QuoteMinOutput(const QuoteMinOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteMinOutput)
}

void QuoteMinOutput::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteMinOutput::~QuoteMinOutput() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteMinOutput)
  SharedDtor();
}

void QuoteMinOutput::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuoteMinOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteMinOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteMinOutput_descriptor_;
}

const QuoteMinOutput& QuoteMinOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteMinOutput* QuoteMinOutput::default_instance_ = NULL;

QuoteMinOutput* QuoteMinOutput::New(::google::protobuf::Arena* arena) const {
  QuoteMinOutput* n = new QuoteMinOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteMinOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteMinOutput)
  results_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteMinOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteMinOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dzhyun.QuoteMinSingle Results = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_Results;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteMinOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteMinOutput)
  return false;
#undef DO_
}

void QuoteMinOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteMinOutput)
  // repeated .dzhyun.QuoteMinSingle Results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->results(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteMinOutput)
}

::google::protobuf::uint8* QuoteMinOutput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteMinOutput)
  // repeated .dzhyun.QuoteMinSingle Results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->results(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteMinOutput)
  return target;
}

int QuoteMinOutput::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteMinOutput)
  int total_size = 0;

  // repeated .dzhyun.QuoteMinSingle Results = 1;
  total_size += 1 * this->results_size();
  for (int i = 0; i < this->results_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->results(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteMinOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteMinOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteMinOutput* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteMinOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteMinOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteMinOutput)
    MergeFrom(*source);
  }
}

void QuoteMinOutput::MergeFrom(const QuoteMinOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteMinOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  results_.MergeFrom(from.results_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteMinOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteMinOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteMinOutput::CopyFrom(const QuoteMinOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteMinOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteMinOutput::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->results())) return false;
  return true;
}

void QuoteMinOutput::Swap(QuoteMinOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteMinOutput::InternalSwap(QuoteMinOutput* other) {
  results_.UnsafeArenaSwap(&other->results_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteMinOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteMinOutput_descriptor_;
  metadata.reflection = QuoteMinOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteMinOutput

// repeated .dzhyun.QuoteMinSingle Results = 1;
int QuoteMinOutput::results_size() const {
  return results_.size();
}
void QuoteMinOutput::clear_results() {
  results_.Clear();
}
const ::dzhyun::QuoteMinSingle& QuoteMinOutput::results(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteMinOutput.Results)
  return results_.Get(index);
}
::dzhyun::QuoteMinSingle* QuoteMinOutput::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteMinOutput.Results)
  return results_.Mutable(index);
}
::dzhyun::QuoteMinSingle* QuoteMinOutput::add_results() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteMinOutput.Results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteMinSingle >*
QuoteMinOutput::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteMinOutput.Results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteMinSingle >&
QuoteMinOutput::results() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteMinOutput.Results)
  return results_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteBOrder::kShiJianFieldNumber;
const int QuoteBOrder::kWeiTuoMaiRuFieldNumber;
const int QuoteBOrder::kWeiTuoMaiChuFieldNumber;
const int QuoteBOrder::kMaiRuZhongDanBiLiFieldNumber;
const int QuoteBOrder::kMaiRuDaDanBiLiFieldNumber;
const int QuoteBOrder::kMaiRuTeDaDanBiLiFieldNumber;
const int QuoteBOrder::kMaiChuZhongDanBiLiFieldNumber;
const int QuoteBOrder::kMaiChuDaDanBiLiFieldNumber;
const int QuoteBOrder::kMaiChuTeDaDanBiLiFieldNumber;
const int QuoteBOrder::kDuanXianMaiRuFieldNumber;
const int QuoteBOrder::kDuanXianMaiChuFieldNumber;
const int QuoteBOrder::kDuanXianChiHuoFieldNumber;
const int QuoteBOrder::kDuanXianTuHuoFieldNumber;
const int QuoteBOrder::kDaDanLiuRuJinEFieldNumber;
const int QuoteBOrder::kDaDanLiuChuJinEFieldNumber;
const int QuoteBOrder::kDaDanJingLiuRuJinEFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteBOrder::QuoteBOrder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteBOrder)
}

void QuoteBOrder::InitAsDefaultInstance() {
}

QuoteBOrder::QuoteBOrder(const QuoteBOrder& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteBOrder)
}

void QuoteBOrder::SharedCtor() {
  _cached_size_ = 0;
  shijian_ = GOOGLE_LONGLONG(0);
  weituomairu_ = GOOGLE_LONGLONG(0);
  weituomaichu_ = GOOGLE_LONGLONG(0);
  mairuzhongdanbili_ = GOOGLE_LONGLONG(0);
  mairudadanbili_ = GOOGLE_LONGLONG(0);
  mairutedadanbili_ = GOOGLE_LONGLONG(0);
  maichuzhongdanbili_ = GOOGLE_LONGLONG(0);
  maichudadanbili_ = GOOGLE_LONGLONG(0);
  maichutedadanbili_ = GOOGLE_LONGLONG(0);
  duanxianmairu_ = GOOGLE_LONGLONG(0);
  duanxianmaichu_ = GOOGLE_LONGLONG(0);
  duanxianchihuo_ = GOOGLE_LONGLONG(0);
  duanxiantuhuo_ = GOOGLE_LONGLONG(0);
  dadanliurujine_ = GOOGLE_LONGLONG(0);
  dadanliuchujine_ = GOOGLE_LONGLONG(0);
  dadanjingliurujine_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteBOrder::~QuoteBOrder() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteBOrder)
  SharedDtor();
}

void QuoteBOrder::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuoteBOrder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteBOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteBOrder_descriptor_;
}

const QuoteBOrder& QuoteBOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteBOrder* QuoteBOrder::default_instance_ = NULL;

QuoteBOrder* QuoteBOrder::New(::google::protobuf::Arena* arena) const {
  QuoteBOrder* n = new QuoteBOrder;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteBOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteBOrder)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QuoteBOrder, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QuoteBOrder*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(shijian_, maichudadanbili_);
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(maichutedadanbili_, dadanjingliurujine_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteBOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteBOrder)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ShiJian = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shijian_)));
          set_has_shijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_WeiTuoMaiRu;
        break;
      }

      // optional int64 WeiTuoMaiRu = 2;
      case 2: {
        if (tag == 16) {
         parse_WeiTuoMaiRu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weituomairu_)));
          set_has_weituomairu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_WeiTuoMaiChu;
        break;
      }

      // optional int64 WeiTuoMaiChu = 3;
      case 3: {
        if (tag == 24) {
         parse_WeiTuoMaiChu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weituomaichu_)));
          set_has_weituomaichu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_MaiRuZhongDanBiLi;
        break;
      }

      // optional int64 MaiRuZhongDanBiLi = 4;
      case 4: {
        if (tag == 32) {
         parse_MaiRuZhongDanBiLi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mairuzhongdanbili_)));
          set_has_mairuzhongdanbili();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_MaiRuDaDanBiLi;
        break;
      }

      // optional int64 MaiRuDaDanBiLi = 5;
      case 5: {
        if (tag == 40) {
         parse_MaiRuDaDanBiLi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mairudadanbili_)));
          set_has_mairudadanbili();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_MaiRuTeDaDanBiLi;
        break;
      }

      // optional int64 MaiRuTeDaDanBiLi = 6;
      case 6: {
        if (tag == 48) {
         parse_MaiRuTeDaDanBiLi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mairutedadanbili_)));
          set_has_mairutedadanbili();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_MaiChuZhongDanBiLi;
        break;
      }

      // optional int64 MaiChuZhongDanBiLi = 7;
      case 7: {
        if (tag == 56) {
         parse_MaiChuZhongDanBiLi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maichuzhongdanbili_)));
          set_has_maichuzhongdanbili();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_MaiChuDaDanBiLi;
        break;
      }

      // optional int64 MaiChuDaDanBiLi = 8;
      case 8: {
        if (tag == 64) {
         parse_MaiChuDaDanBiLi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maichudadanbili_)));
          set_has_maichudadanbili();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_MaiChuTeDaDanBiLi;
        break;
      }

      // optional int64 MaiChuTeDaDanBiLi = 9;
      case 9: {
        if (tag == 72) {
         parse_MaiChuTeDaDanBiLi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maichutedadanbili_)));
          set_has_maichutedadanbili();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_DuanXianMaiRu;
        break;
      }

      // optional int64 DuanXianMaiRu = 10;
      case 10: {
        if (tag == 80) {
         parse_DuanXianMaiRu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &duanxianmairu_)));
          set_has_duanxianmairu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_DuanXianMaiChu;
        break;
      }

      // optional int64 DuanXianMaiChu = 11;
      case 11: {
        if (tag == 88) {
         parse_DuanXianMaiChu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &duanxianmaichu_)));
          set_has_duanxianmaichu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_DuanXianChiHuo;
        break;
      }

      // optional int64 DuanXianChiHuo = 12;
      case 12: {
        if (tag == 96) {
         parse_DuanXianChiHuo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &duanxianchihuo_)));
          set_has_duanxianchihuo();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_DuanXianTuHuo;
        break;
      }

      // optional int64 DuanXianTuHuo = 13;
      case 13: {
        if (tag == 104) {
         parse_DuanXianTuHuo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &duanxiantuhuo_)));
          set_has_duanxiantuhuo();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_DaDanLiuRuJinE;
        break;
      }

      // optional int64 DaDanLiuRuJinE = 14;
      case 14: {
        if (tag == 112) {
         parse_DaDanLiuRuJinE:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dadanliurujine_)));
          set_has_dadanliurujine();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_DaDanLiuChuJinE;
        break;
      }

      // optional int64 DaDanLiuChuJinE = 15;
      case 15: {
        if (tag == 120) {
         parse_DaDanLiuChuJinE:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dadanliuchujine_)));
          set_has_dadanliuchujine();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_DaDanJingLiuRuJinE;
        break;
      }

      // optional int64 DaDanJingLiuRuJinE = 16;
      case 16: {
        if (tag == 128) {
         parse_DaDanJingLiuRuJinE:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dadanjingliurujine_)));
          set_has_dadanjingliurujine();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteBOrder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteBOrder)
  return false;
#undef DO_
}

void QuoteBOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteBOrder)
  // optional int64 ShiJian = 1;
  if (has_shijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shijian(), output);
  }

  // optional int64 WeiTuoMaiRu = 2;
  if (has_weituomairu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->weituomairu(), output);
  }

  // optional int64 WeiTuoMaiChu = 3;
  if (has_weituomaichu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->weituomaichu(), output);
  }

  // optional int64 MaiRuZhongDanBiLi = 4;
  if (has_mairuzhongdanbili()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->mairuzhongdanbili(), output);
  }

  // optional int64 MaiRuDaDanBiLi = 5;
  if (has_mairudadanbili()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->mairudadanbili(), output);
  }

  // optional int64 MaiRuTeDaDanBiLi = 6;
  if (has_mairutedadanbili()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->mairutedadanbili(), output);
  }

  // optional int64 MaiChuZhongDanBiLi = 7;
  if (has_maichuzhongdanbili()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->maichuzhongdanbili(), output);
  }

  // optional int64 MaiChuDaDanBiLi = 8;
  if (has_maichudadanbili()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->maichudadanbili(), output);
  }

  // optional int64 MaiChuTeDaDanBiLi = 9;
  if (has_maichutedadanbili()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->maichutedadanbili(), output);
  }

  // optional int64 DuanXianMaiRu = 10;
  if (has_duanxianmairu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->duanxianmairu(), output);
  }

  // optional int64 DuanXianMaiChu = 11;
  if (has_duanxianmaichu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->duanxianmaichu(), output);
  }

  // optional int64 DuanXianChiHuo = 12;
  if (has_duanxianchihuo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->duanxianchihuo(), output);
  }

  // optional int64 DuanXianTuHuo = 13;
  if (has_duanxiantuhuo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->duanxiantuhuo(), output);
  }

  // optional int64 DaDanLiuRuJinE = 14;
  if (has_dadanliurujine()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->dadanliurujine(), output);
  }

  // optional int64 DaDanLiuChuJinE = 15;
  if (has_dadanliuchujine()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->dadanliuchujine(), output);
  }

  // optional int64 DaDanJingLiuRuJinE = 16;
  if (has_dadanjingliurujine()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->dadanjingliurujine(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteBOrder)
}

::google::protobuf::uint8* QuoteBOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteBOrder)
  // optional int64 ShiJian = 1;
  if (has_shijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shijian(), target);
  }

  // optional int64 WeiTuoMaiRu = 2;
  if (has_weituomairu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->weituomairu(), target);
  }

  // optional int64 WeiTuoMaiChu = 3;
  if (has_weituomaichu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->weituomaichu(), target);
  }

  // optional int64 MaiRuZhongDanBiLi = 4;
  if (has_mairuzhongdanbili()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->mairuzhongdanbili(), target);
  }

  // optional int64 MaiRuDaDanBiLi = 5;
  if (has_mairudadanbili()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->mairudadanbili(), target);
  }

  // optional int64 MaiRuTeDaDanBiLi = 6;
  if (has_mairutedadanbili()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->mairutedadanbili(), target);
  }

  // optional int64 MaiChuZhongDanBiLi = 7;
  if (has_maichuzhongdanbili()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->maichuzhongdanbili(), target);
  }

  // optional int64 MaiChuDaDanBiLi = 8;
  if (has_maichudadanbili()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->maichudadanbili(), target);
  }

  // optional int64 MaiChuTeDaDanBiLi = 9;
  if (has_maichutedadanbili()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->maichutedadanbili(), target);
  }

  // optional int64 DuanXianMaiRu = 10;
  if (has_duanxianmairu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->duanxianmairu(), target);
  }

  // optional int64 DuanXianMaiChu = 11;
  if (has_duanxianmaichu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->duanxianmaichu(), target);
  }

  // optional int64 DuanXianChiHuo = 12;
  if (has_duanxianchihuo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->duanxianchihuo(), target);
  }

  // optional int64 DuanXianTuHuo = 13;
  if (has_duanxiantuhuo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->duanxiantuhuo(), target);
  }

  // optional int64 DaDanLiuRuJinE = 14;
  if (has_dadanliurujine()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->dadanliurujine(), target);
  }

  // optional int64 DaDanLiuChuJinE = 15;
  if (has_dadanliuchujine()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->dadanliuchujine(), target);
  }

  // optional int64 DaDanJingLiuRuJinE = 16;
  if (has_dadanjingliurujine()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->dadanjingliurujine(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteBOrder)
  return target;
}

int QuoteBOrder::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteBOrder)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional int64 ShiJian = 1;
    if (has_shijian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shijian());
    }

    // optional int64 WeiTuoMaiRu = 2;
    if (has_weituomairu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->weituomairu());
    }

    // optional int64 WeiTuoMaiChu = 3;
    if (has_weituomaichu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->weituomaichu());
    }

    // optional int64 MaiRuZhongDanBiLi = 4;
    if (has_mairuzhongdanbili()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mairuzhongdanbili());
    }

    // optional int64 MaiRuDaDanBiLi = 5;
    if (has_mairudadanbili()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mairudadanbili());
    }

    // optional int64 MaiRuTeDaDanBiLi = 6;
    if (has_mairutedadanbili()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mairutedadanbili());
    }

    // optional int64 MaiChuZhongDanBiLi = 7;
    if (has_maichuzhongdanbili()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->maichuzhongdanbili());
    }

    // optional int64 MaiChuDaDanBiLi = 8;
    if (has_maichudadanbili()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->maichudadanbili());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int64 MaiChuTeDaDanBiLi = 9;
    if (has_maichutedadanbili()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->maichutedadanbili());
    }

    // optional int64 DuanXianMaiRu = 10;
    if (has_duanxianmairu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->duanxianmairu());
    }

    // optional int64 DuanXianMaiChu = 11;
    if (has_duanxianmaichu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->duanxianmaichu());
    }

    // optional int64 DuanXianChiHuo = 12;
    if (has_duanxianchihuo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->duanxianchihuo());
    }

    // optional int64 DuanXianTuHuo = 13;
    if (has_duanxiantuhuo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->duanxiantuhuo());
    }

    // optional int64 DaDanLiuRuJinE = 14;
    if (has_dadanliurujine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dadanliurujine());
    }

    // optional int64 DaDanLiuChuJinE = 15;
    if (has_dadanliuchujine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dadanliuchujine());
    }

    // optional int64 DaDanJingLiuRuJinE = 16;
    if (has_dadanjingliurujine()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dadanjingliurujine());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteBOrder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteBOrder)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteBOrder* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteBOrder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteBOrder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteBOrder)
    MergeFrom(*source);
  }
}

void QuoteBOrder::MergeFrom(const QuoteBOrder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteBOrder)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shijian()) {
      set_shijian(from.shijian());
    }
    if (from.has_weituomairu()) {
      set_weituomairu(from.weituomairu());
    }
    if (from.has_weituomaichu()) {
      set_weituomaichu(from.weituomaichu());
    }
    if (from.has_mairuzhongdanbili()) {
      set_mairuzhongdanbili(from.mairuzhongdanbili());
    }
    if (from.has_mairudadanbili()) {
      set_mairudadanbili(from.mairudadanbili());
    }
    if (from.has_mairutedadanbili()) {
      set_mairutedadanbili(from.mairutedadanbili());
    }
    if (from.has_maichuzhongdanbili()) {
      set_maichuzhongdanbili(from.maichuzhongdanbili());
    }
    if (from.has_maichudadanbili()) {
      set_maichudadanbili(from.maichudadanbili());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_maichutedadanbili()) {
      set_maichutedadanbili(from.maichutedadanbili());
    }
    if (from.has_duanxianmairu()) {
      set_duanxianmairu(from.duanxianmairu());
    }
    if (from.has_duanxianmaichu()) {
      set_duanxianmaichu(from.duanxianmaichu());
    }
    if (from.has_duanxianchihuo()) {
      set_duanxianchihuo(from.duanxianchihuo());
    }
    if (from.has_duanxiantuhuo()) {
      set_duanxiantuhuo(from.duanxiantuhuo());
    }
    if (from.has_dadanliurujine()) {
      set_dadanliurujine(from.dadanliurujine());
    }
    if (from.has_dadanliuchujine()) {
      set_dadanliuchujine(from.dadanliuchujine());
    }
    if (from.has_dadanjingliurujine()) {
      set_dadanjingliurujine(from.dadanjingliurujine());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteBOrder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteBOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteBOrder::CopyFrom(const QuoteBOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteBOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteBOrder::IsInitialized() const {

  return true;
}

void QuoteBOrder::Swap(QuoteBOrder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteBOrder::InternalSwap(QuoteBOrder* other) {
  std::swap(shijian_, other->shijian_);
  std::swap(weituomairu_, other->weituomairu_);
  std::swap(weituomaichu_, other->weituomaichu_);
  std::swap(mairuzhongdanbili_, other->mairuzhongdanbili_);
  std::swap(mairudadanbili_, other->mairudadanbili_);
  std::swap(mairutedadanbili_, other->mairutedadanbili_);
  std::swap(maichuzhongdanbili_, other->maichuzhongdanbili_);
  std::swap(maichudadanbili_, other->maichudadanbili_);
  std::swap(maichutedadanbili_, other->maichutedadanbili_);
  std::swap(duanxianmairu_, other->duanxianmairu_);
  std::swap(duanxianmaichu_, other->duanxianmaichu_);
  std::swap(duanxianchihuo_, other->duanxianchihuo_);
  std::swap(duanxiantuhuo_, other->duanxiantuhuo_);
  std::swap(dadanliurujine_, other->dadanliurujine_);
  std::swap(dadanliuchujine_, other->dadanliuchujine_);
  std::swap(dadanjingliurujine_, other->dadanjingliurujine_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteBOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteBOrder_descriptor_;
  metadata.reflection = QuoteBOrder_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteBOrder

// optional int64 ShiJian = 1;
bool QuoteBOrder::has_shijian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteBOrder::set_has_shijian() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteBOrder::clear_has_shijian() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteBOrder::clear_shijian() {
  shijian_ = GOOGLE_LONGLONG(0);
  clear_has_shijian();
}
 ::google::protobuf::int64 QuoteBOrder::shijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.ShiJian)
  return shijian_;
}
 void QuoteBOrder::set_shijian(::google::protobuf::int64 value) {
  set_has_shijian();
  shijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.ShiJian)
}

// optional int64 WeiTuoMaiRu = 2;
bool QuoteBOrder::has_weituomairu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QuoteBOrder::set_has_weituomairu() {
  _has_bits_[0] |= 0x00000002u;
}
void QuoteBOrder::clear_has_weituomairu() {
  _has_bits_[0] &= ~0x00000002u;
}
void QuoteBOrder::clear_weituomairu() {
  weituomairu_ = GOOGLE_LONGLONG(0);
  clear_has_weituomairu();
}
 ::google::protobuf::int64 QuoteBOrder::weituomairu() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.WeiTuoMaiRu)
  return weituomairu_;
}
 void QuoteBOrder::set_weituomairu(::google::protobuf::int64 value) {
  set_has_weituomairu();
  weituomairu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.WeiTuoMaiRu)
}

// optional int64 WeiTuoMaiChu = 3;
bool QuoteBOrder::has_weituomaichu() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteBOrder::set_has_weituomaichu() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteBOrder::clear_has_weituomaichu() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteBOrder::clear_weituomaichu() {
  weituomaichu_ = GOOGLE_LONGLONG(0);
  clear_has_weituomaichu();
}
 ::google::protobuf::int64 QuoteBOrder::weituomaichu() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.WeiTuoMaiChu)
  return weituomaichu_;
}
 void QuoteBOrder::set_weituomaichu(::google::protobuf::int64 value) {
  set_has_weituomaichu();
  weituomaichu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.WeiTuoMaiChu)
}

// optional int64 MaiRuZhongDanBiLi = 4;
bool QuoteBOrder::has_mairuzhongdanbili() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QuoteBOrder::set_has_mairuzhongdanbili() {
  _has_bits_[0] |= 0x00000008u;
}
void QuoteBOrder::clear_has_mairuzhongdanbili() {
  _has_bits_[0] &= ~0x00000008u;
}
void QuoteBOrder::clear_mairuzhongdanbili() {
  mairuzhongdanbili_ = GOOGLE_LONGLONG(0);
  clear_has_mairuzhongdanbili();
}
 ::google::protobuf::int64 QuoteBOrder::mairuzhongdanbili() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.MaiRuZhongDanBiLi)
  return mairuzhongdanbili_;
}
 void QuoteBOrder::set_mairuzhongdanbili(::google::protobuf::int64 value) {
  set_has_mairuzhongdanbili();
  mairuzhongdanbili_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.MaiRuZhongDanBiLi)
}

// optional int64 MaiRuDaDanBiLi = 5;
bool QuoteBOrder::has_mairudadanbili() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QuoteBOrder::set_has_mairudadanbili() {
  _has_bits_[0] |= 0x00000010u;
}
void QuoteBOrder::clear_has_mairudadanbili() {
  _has_bits_[0] &= ~0x00000010u;
}
void QuoteBOrder::clear_mairudadanbili() {
  mairudadanbili_ = GOOGLE_LONGLONG(0);
  clear_has_mairudadanbili();
}
 ::google::protobuf::int64 QuoteBOrder::mairudadanbili() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.MaiRuDaDanBiLi)
  return mairudadanbili_;
}
 void QuoteBOrder::set_mairudadanbili(::google::protobuf::int64 value) {
  set_has_mairudadanbili();
  mairudadanbili_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.MaiRuDaDanBiLi)
}

// optional int64 MaiRuTeDaDanBiLi = 6;
bool QuoteBOrder::has_mairutedadanbili() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void QuoteBOrder::set_has_mairutedadanbili() {
  _has_bits_[0] |= 0x00000020u;
}
void QuoteBOrder::clear_has_mairutedadanbili() {
  _has_bits_[0] &= ~0x00000020u;
}
void QuoteBOrder::clear_mairutedadanbili() {
  mairutedadanbili_ = GOOGLE_LONGLONG(0);
  clear_has_mairutedadanbili();
}
 ::google::protobuf::int64 QuoteBOrder::mairutedadanbili() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.MaiRuTeDaDanBiLi)
  return mairutedadanbili_;
}
 void QuoteBOrder::set_mairutedadanbili(::google::protobuf::int64 value) {
  set_has_mairutedadanbili();
  mairutedadanbili_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.MaiRuTeDaDanBiLi)
}

// optional int64 MaiChuZhongDanBiLi = 7;
bool QuoteBOrder::has_maichuzhongdanbili() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void QuoteBOrder::set_has_maichuzhongdanbili() {
  _has_bits_[0] |= 0x00000040u;
}
void QuoteBOrder::clear_has_maichuzhongdanbili() {
  _has_bits_[0] &= ~0x00000040u;
}
void QuoteBOrder::clear_maichuzhongdanbili() {
  maichuzhongdanbili_ = GOOGLE_LONGLONG(0);
  clear_has_maichuzhongdanbili();
}
 ::google::protobuf::int64 QuoteBOrder::maichuzhongdanbili() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.MaiChuZhongDanBiLi)
  return maichuzhongdanbili_;
}
 void QuoteBOrder::set_maichuzhongdanbili(::google::protobuf::int64 value) {
  set_has_maichuzhongdanbili();
  maichuzhongdanbili_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.MaiChuZhongDanBiLi)
}

// optional int64 MaiChuDaDanBiLi = 8;
bool QuoteBOrder::has_maichudadanbili() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void QuoteBOrder::set_has_maichudadanbili() {
  _has_bits_[0] |= 0x00000080u;
}
void QuoteBOrder::clear_has_maichudadanbili() {
  _has_bits_[0] &= ~0x00000080u;
}
void QuoteBOrder::clear_maichudadanbili() {
  maichudadanbili_ = GOOGLE_LONGLONG(0);
  clear_has_maichudadanbili();
}
 ::google::protobuf::int64 QuoteBOrder::maichudadanbili() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.MaiChuDaDanBiLi)
  return maichudadanbili_;
}
 void QuoteBOrder::set_maichudadanbili(::google::protobuf::int64 value) {
  set_has_maichudadanbili();
  maichudadanbili_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.MaiChuDaDanBiLi)
}

// optional int64 MaiChuTeDaDanBiLi = 9;
bool QuoteBOrder::has_maichutedadanbili() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void QuoteBOrder::set_has_maichutedadanbili() {
  _has_bits_[0] |= 0x00000100u;
}
void QuoteBOrder::clear_has_maichutedadanbili() {
  _has_bits_[0] &= ~0x00000100u;
}
void QuoteBOrder::clear_maichutedadanbili() {
  maichutedadanbili_ = GOOGLE_LONGLONG(0);
  clear_has_maichutedadanbili();
}
 ::google::protobuf::int64 QuoteBOrder::maichutedadanbili() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.MaiChuTeDaDanBiLi)
  return maichutedadanbili_;
}
 void QuoteBOrder::set_maichutedadanbili(::google::protobuf::int64 value) {
  set_has_maichutedadanbili();
  maichutedadanbili_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.MaiChuTeDaDanBiLi)
}

// optional int64 DuanXianMaiRu = 10;
bool QuoteBOrder::has_duanxianmairu() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void QuoteBOrder::set_has_duanxianmairu() {
  _has_bits_[0] |= 0x00000200u;
}
void QuoteBOrder::clear_has_duanxianmairu() {
  _has_bits_[0] &= ~0x00000200u;
}
void QuoteBOrder::clear_duanxianmairu() {
  duanxianmairu_ = GOOGLE_LONGLONG(0);
  clear_has_duanxianmairu();
}
 ::google::protobuf::int64 QuoteBOrder::duanxianmairu() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.DuanXianMaiRu)
  return duanxianmairu_;
}
 void QuoteBOrder::set_duanxianmairu(::google::protobuf::int64 value) {
  set_has_duanxianmairu();
  duanxianmairu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.DuanXianMaiRu)
}

// optional int64 DuanXianMaiChu = 11;
bool QuoteBOrder::has_duanxianmaichu() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void QuoteBOrder::set_has_duanxianmaichu() {
  _has_bits_[0] |= 0x00000400u;
}
void QuoteBOrder::clear_has_duanxianmaichu() {
  _has_bits_[0] &= ~0x00000400u;
}
void QuoteBOrder::clear_duanxianmaichu() {
  duanxianmaichu_ = GOOGLE_LONGLONG(0);
  clear_has_duanxianmaichu();
}
 ::google::protobuf::int64 QuoteBOrder::duanxianmaichu() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.DuanXianMaiChu)
  return duanxianmaichu_;
}
 void QuoteBOrder::set_duanxianmaichu(::google::protobuf::int64 value) {
  set_has_duanxianmaichu();
  duanxianmaichu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.DuanXianMaiChu)
}

// optional int64 DuanXianChiHuo = 12;
bool QuoteBOrder::has_duanxianchihuo() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void QuoteBOrder::set_has_duanxianchihuo() {
  _has_bits_[0] |= 0x00000800u;
}
void QuoteBOrder::clear_has_duanxianchihuo() {
  _has_bits_[0] &= ~0x00000800u;
}
void QuoteBOrder::clear_duanxianchihuo() {
  duanxianchihuo_ = GOOGLE_LONGLONG(0);
  clear_has_duanxianchihuo();
}
 ::google::protobuf::int64 QuoteBOrder::duanxianchihuo() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.DuanXianChiHuo)
  return duanxianchihuo_;
}
 void QuoteBOrder::set_duanxianchihuo(::google::protobuf::int64 value) {
  set_has_duanxianchihuo();
  duanxianchihuo_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.DuanXianChiHuo)
}

// optional int64 DuanXianTuHuo = 13;
bool QuoteBOrder::has_duanxiantuhuo() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void QuoteBOrder::set_has_duanxiantuhuo() {
  _has_bits_[0] |= 0x00001000u;
}
void QuoteBOrder::clear_has_duanxiantuhuo() {
  _has_bits_[0] &= ~0x00001000u;
}
void QuoteBOrder::clear_duanxiantuhuo() {
  duanxiantuhuo_ = GOOGLE_LONGLONG(0);
  clear_has_duanxiantuhuo();
}
 ::google::protobuf::int64 QuoteBOrder::duanxiantuhuo() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.DuanXianTuHuo)
  return duanxiantuhuo_;
}
 void QuoteBOrder::set_duanxiantuhuo(::google::protobuf::int64 value) {
  set_has_duanxiantuhuo();
  duanxiantuhuo_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.DuanXianTuHuo)
}

// optional int64 DaDanLiuRuJinE = 14;
bool QuoteBOrder::has_dadanliurujine() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void QuoteBOrder::set_has_dadanliurujine() {
  _has_bits_[0] |= 0x00002000u;
}
void QuoteBOrder::clear_has_dadanliurujine() {
  _has_bits_[0] &= ~0x00002000u;
}
void QuoteBOrder::clear_dadanliurujine() {
  dadanliurujine_ = GOOGLE_LONGLONG(0);
  clear_has_dadanliurujine();
}
 ::google::protobuf::int64 QuoteBOrder::dadanliurujine() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.DaDanLiuRuJinE)
  return dadanliurujine_;
}
 void QuoteBOrder::set_dadanliurujine(::google::protobuf::int64 value) {
  set_has_dadanliurujine();
  dadanliurujine_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.DaDanLiuRuJinE)
}

// optional int64 DaDanLiuChuJinE = 15;
bool QuoteBOrder::has_dadanliuchujine() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void QuoteBOrder::set_has_dadanliuchujine() {
  _has_bits_[0] |= 0x00004000u;
}
void QuoteBOrder::clear_has_dadanliuchujine() {
  _has_bits_[0] &= ~0x00004000u;
}
void QuoteBOrder::clear_dadanliuchujine() {
  dadanliuchujine_ = GOOGLE_LONGLONG(0);
  clear_has_dadanliuchujine();
}
 ::google::protobuf::int64 QuoteBOrder::dadanliuchujine() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.DaDanLiuChuJinE)
  return dadanliuchujine_;
}
 void QuoteBOrder::set_dadanliuchujine(::google::protobuf::int64 value) {
  set_has_dadanliuchujine();
  dadanliuchujine_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.DaDanLiuChuJinE)
}

// optional int64 DaDanJingLiuRuJinE = 16;
bool QuoteBOrder::has_dadanjingliurujine() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void QuoteBOrder::set_has_dadanjingliurujine() {
  _has_bits_[0] |= 0x00008000u;
}
void QuoteBOrder::clear_has_dadanjingliurujine() {
  _has_bits_[0] &= ~0x00008000u;
}
void QuoteBOrder::clear_dadanjingliurujine() {
  dadanjingliurujine_ = GOOGLE_LONGLONG(0);
  clear_has_dadanjingliurujine();
}
 ::google::protobuf::int64 QuoteBOrder::dadanjingliurujine() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrder.DaDanJingLiuRuJinE)
  return dadanjingliurujine_;
}
 void QuoteBOrder::set_dadanjingliurujine(::google::protobuf::int64 value) {
  set_has_dadanjingliurujine();
  dadanjingliurujine_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrder.DaDanJingLiuRuJinE)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteBOrderSingle::kObjFieldNumber;
const int QuoteBOrderSingle::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteBOrderSingle::QuoteBOrderSingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteBOrderSingle)
}

void QuoteBOrderSingle::InitAsDefaultInstance() {
}

QuoteBOrderSingle::QuoteBOrderSingle(const QuoteBOrderSingle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteBOrderSingle)
}

void QuoteBOrderSingle::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteBOrderSingle::~QuoteBOrderSingle() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteBOrderSingle)
  SharedDtor();
}

void QuoteBOrderSingle::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QuoteBOrderSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteBOrderSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteBOrderSingle_descriptor_;
}

const QuoteBOrderSingle& QuoteBOrderSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteBOrderSingle* QuoteBOrderSingle::default_instance_ = NULL;

QuoteBOrderSingle* QuoteBOrderSingle::New(::google::protobuf::Arena* arena) const {
  QuoteBOrderSingle* n = new QuoteBOrderSingle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteBOrderSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteBOrderSingle)
  if (has_obj()) {
    obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteBOrderSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteBOrderSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QuoteBOrderSingle.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .dzhyun.QuoteBOrder Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteBOrderSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteBOrderSingle)
  return false;
#undef DO_
}

void QuoteBOrderSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteBOrderSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteBOrderSingle.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // repeated .dzhyun.QuoteBOrder Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteBOrderSingle)
}

::google::protobuf::uint8* QuoteBOrderSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteBOrderSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteBOrderSingle.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // repeated .dzhyun.QuoteBOrder Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteBOrderSingle)
  return target;
}

int QuoteBOrderSingle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteBOrderSingle)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  // repeated .dzhyun.QuoteBOrder Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteBOrderSingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteBOrderSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteBOrderSingle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteBOrderSingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteBOrderSingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteBOrderSingle)
    MergeFrom(*source);
  }
}

void QuoteBOrderSingle::MergeFrom(const QuoteBOrderSingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteBOrderSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteBOrderSingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteBOrderSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteBOrderSingle::CopyFrom(const QuoteBOrderSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteBOrderSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteBOrderSingle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void QuoteBOrderSingle::Swap(QuoteBOrderSingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteBOrderSingle::InternalSwap(QuoteBOrderSingle* other) {
  obj_.Swap(&other->obj_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteBOrderSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteBOrderSingle_descriptor_;
  metadata.reflection = QuoteBOrderSingle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteBOrderSingle

// required string Obj = 1;
bool QuoteBOrderSingle::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteBOrderSingle::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteBOrderSingle::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteBOrderSingle::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& QuoteBOrderSingle::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrderSingle.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteBOrderSingle::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrderSingle.Obj)
}
 void QuoteBOrderSingle::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QuoteBOrderSingle.Obj)
}
 void QuoteBOrderSingle::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QuoteBOrderSingle.Obj)
}
 ::std::string* QuoteBOrderSingle::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteBOrderSingle.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QuoteBOrderSingle::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.QuoteBOrderSingle.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteBOrderSingle::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QuoteBOrderSingle.Obj)
}

// repeated .dzhyun.QuoteBOrder Data = 2;
int QuoteBOrderSingle::data_size() const {
  return data_.size();
}
void QuoteBOrderSingle::clear_data() {
  data_.Clear();
}
const ::dzhyun::QuoteBOrder& QuoteBOrderSingle::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrderSingle.Data)
  return data_.Get(index);
}
::dzhyun::QuoteBOrder* QuoteBOrderSingle::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteBOrderSingle.Data)
  return data_.Mutable(index);
}
::dzhyun::QuoteBOrder* QuoteBOrderSingle::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteBOrderSingle.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteBOrder >*
QuoteBOrderSingle::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteBOrderSingle.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteBOrder >&
QuoteBOrderSingle::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteBOrderSingle.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteBOrderOutput::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteBOrderOutput::QuoteBOrderOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteBOrderOutput)
}

void QuoteBOrderOutput::InitAsDefaultInstance() {
}

QuoteBOrderOutput::QuoteBOrderOutput(const QuoteBOrderOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteBOrderOutput)
}

void QuoteBOrderOutput::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteBOrderOutput::~QuoteBOrderOutput() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteBOrderOutput)
  SharedDtor();
}

void QuoteBOrderOutput::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuoteBOrderOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteBOrderOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteBOrderOutput_descriptor_;
}

const QuoteBOrderOutput& QuoteBOrderOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteBOrderOutput* QuoteBOrderOutput::default_instance_ = NULL;

QuoteBOrderOutput* QuoteBOrderOutput::New(::google::protobuf::Arena* arena) const {
  QuoteBOrderOutput* n = new QuoteBOrderOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteBOrderOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteBOrderOutput)
  results_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteBOrderOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteBOrderOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dzhyun.QuoteBOrderSingle Results = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_Results;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteBOrderOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteBOrderOutput)
  return false;
#undef DO_
}

void QuoteBOrderOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteBOrderOutput)
  // repeated .dzhyun.QuoteBOrderSingle Results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->results(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteBOrderOutput)
}

::google::protobuf::uint8* QuoteBOrderOutput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteBOrderOutput)
  // repeated .dzhyun.QuoteBOrderSingle Results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->results(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteBOrderOutput)
  return target;
}

int QuoteBOrderOutput::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteBOrderOutput)
  int total_size = 0;

  // repeated .dzhyun.QuoteBOrderSingle Results = 1;
  total_size += 1 * this->results_size();
  for (int i = 0; i < this->results_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->results(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteBOrderOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteBOrderOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteBOrderOutput* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteBOrderOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteBOrderOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteBOrderOutput)
    MergeFrom(*source);
  }
}

void QuoteBOrderOutput::MergeFrom(const QuoteBOrderOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteBOrderOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  results_.MergeFrom(from.results_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteBOrderOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteBOrderOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteBOrderOutput::CopyFrom(const QuoteBOrderOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteBOrderOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteBOrderOutput::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->results())) return false;
  return true;
}

void QuoteBOrderOutput::Swap(QuoteBOrderOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteBOrderOutput::InternalSwap(QuoteBOrderOutput* other) {
  results_.UnsafeArenaSwap(&other->results_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteBOrderOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteBOrderOutput_descriptor_;
  metadata.reflection = QuoteBOrderOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteBOrderOutput

// repeated .dzhyun.QuoteBOrderSingle Results = 1;
int QuoteBOrderOutput::results_size() const {
  return results_.size();
}
void QuoteBOrderOutput::clear_results() {
  results_.Clear();
}
const ::dzhyun::QuoteBOrderSingle& QuoteBOrderOutput::results(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrderOutput.Results)
  return results_.Get(index);
}
::dzhyun::QuoteBOrderSingle* QuoteBOrderOutput::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteBOrderOutput.Results)
  return results_.Mutable(index);
}
::dzhyun::QuoteBOrderSingle* QuoteBOrderOutput::add_results() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteBOrderOutput.Results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteBOrderSingle >*
QuoteBOrderOutput::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteBOrderOutput.Results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteBOrderSingle >&
QuoteBOrderOutput::results() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteBOrderOutput.Results)
  return results_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteDivid::kShiJianFieldNumber;
const int QuoteDivid::kChuQuanChengShuFieldNumber;
const int QuoteDivid::kChuQuanPianYiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteDivid::QuoteDivid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteDivid)
}

void QuoteDivid::InitAsDefaultInstance() {
}

QuoteDivid::QuoteDivid(const QuoteDivid& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteDivid)
}

void QuoteDivid::SharedCtor() {
  _cached_size_ = 0;
  shijian_ = GOOGLE_LONGLONG(0);
  chuquanchengshu_ = GOOGLE_LONGLONG(0);
  chuquanpianyi_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteDivid::~QuoteDivid() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteDivid)
  SharedDtor();
}

void QuoteDivid::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuoteDivid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteDivid::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteDivid_descriptor_;
}

const QuoteDivid& QuoteDivid::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteDivid* QuoteDivid::default_instance_ = NULL;

QuoteDivid* QuoteDivid::New(::google::protobuf::Arena* arena) const {
  QuoteDivid* n = new QuoteDivid;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteDivid::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteDivid)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QuoteDivid, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QuoteDivid*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(shijian_, chuquanpianyi_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteDivid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteDivid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ShiJian = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shijian_)));
          set_has_shijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ChuQuanChengShu;
        break;
      }

      // optional int64 ChuQuanChengShu = 2;
      case 2: {
        if (tag == 16) {
         parse_ChuQuanChengShu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &chuquanchengshu_)));
          set_has_chuquanchengshu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ChuQuanPianYi;
        break;
      }

      // optional int64 ChuQuanPianYi = 3;
      case 3: {
        if (tag == 24) {
         parse_ChuQuanPianYi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &chuquanpianyi_)));
          set_has_chuquanpianyi();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteDivid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteDivid)
  return false;
#undef DO_
}

void QuoteDivid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteDivid)
  // optional int64 ShiJian = 1;
  if (has_shijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shijian(), output);
  }

  // optional int64 ChuQuanChengShu = 2;
  if (has_chuquanchengshu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->chuquanchengshu(), output);
  }

  // optional int64 ChuQuanPianYi = 3;
  if (has_chuquanpianyi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->chuquanpianyi(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteDivid)
}

::google::protobuf::uint8* QuoteDivid::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteDivid)
  // optional int64 ShiJian = 1;
  if (has_shijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shijian(), target);
  }

  // optional int64 ChuQuanChengShu = 2;
  if (has_chuquanchengshu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->chuquanchengshu(), target);
  }

  // optional int64 ChuQuanPianYi = 3;
  if (has_chuquanpianyi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->chuquanpianyi(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteDivid)
  return target;
}

int QuoteDivid::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteDivid)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int64 ShiJian = 1;
    if (has_shijian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shijian());
    }

    // optional int64 ChuQuanChengShu = 2;
    if (has_chuquanchengshu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->chuquanchengshu());
    }

    // optional int64 ChuQuanPianYi = 3;
    if (has_chuquanpianyi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->chuquanpianyi());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteDivid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteDivid)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteDivid* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteDivid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteDivid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteDivid)
    MergeFrom(*source);
  }
}

void QuoteDivid::MergeFrom(const QuoteDivid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteDivid)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shijian()) {
      set_shijian(from.shijian());
    }
    if (from.has_chuquanchengshu()) {
      set_chuquanchengshu(from.chuquanchengshu());
    }
    if (from.has_chuquanpianyi()) {
      set_chuquanpianyi(from.chuquanpianyi());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteDivid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteDivid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteDivid::CopyFrom(const QuoteDivid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteDivid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteDivid::IsInitialized() const {

  return true;
}

void QuoteDivid::Swap(QuoteDivid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteDivid::InternalSwap(QuoteDivid* other) {
  std::swap(shijian_, other->shijian_);
  std::swap(chuquanchengshu_, other->chuquanchengshu_);
  std::swap(chuquanpianyi_, other->chuquanpianyi_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteDivid::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteDivid_descriptor_;
  metadata.reflection = QuoteDivid_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteDivid

// optional int64 ShiJian = 1;
bool QuoteDivid::has_shijian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteDivid::set_has_shijian() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteDivid::clear_has_shijian() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteDivid::clear_shijian() {
  shijian_ = GOOGLE_LONGLONG(0);
  clear_has_shijian();
}
 ::google::protobuf::int64 QuoteDivid::shijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDivid.ShiJian)
  return shijian_;
}
 void QuoteDivid::set_shijian(::google::protobuf::int64 value) {
  set_has_shijian();
  shijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteDivid.ShiJian)
}

// optional int64 ChuQuanChengShu = 2;
bool QuoteDivid::has_chuquanchengshu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QuoteDivid::set_has_chuquanchengshu() {
  _has_bits_[0] |= 0x00000002u;
}
void QuoteDivid::clear_has_chuquanchengshu() {
  _has_bits_[0] &= ~0x00000002u;
}
void QuoteDivid::clear_chuquanchengshu() {
  chuquanchengshu_ = GOOGLE_LONGLONG(0);
  clear_has_chuquanchengshu();
}
 ::google::protobuf::int64 QuoteDivid::chuquanchengshu() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDivid.ChuQuanChengShu)
  return chuquanchengshu_;
}
 void QuoteDivid::set_chuquanchengshu(::google::protobuf::int64 value) {
  set_has_chuquanchengshu();
  chuquanchengshu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteDivid.ChuQuanChengShu)
}

// optional int64 ChuQuanPianYi = 3;
bool QuoteDivid::has_chuquanpianyi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteDivid::set_has_chuquanpianyi() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteDivid::clear_has_chuquanpianyi() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteDivid::clear_chuquanpianyi() {
  chuquanpianyi_ = GOOGLE_LONGLONG(0);
  clear_has_chuquanpianyi();
}
 ::google::protobuf::int64 QuoteDivid::chuquanpianyi() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDivid.ChuQuanPianYi)
  return chuquanpianyi_;
}
 void QuoteDivid::set_chuquanpianyi(::google::protobuf::int64 value) {
  set_has_chuquanpianyi();
  chuquanpianyi_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteDivid.ChuQuanPianYi)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteDividSingle::kObjFieldNumber;
const int QuoteDividSingle::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteDividSingle::QuoteDividSingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteDividSingle)
}

void QuoteDividSingle::InitAsDefaultInstance() {
}

QuoteDividSingle::QuoteDividSingle(const QuoteDividSingle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteDividSingle)
}

void QuoteDividSingle::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteDividSingle::~QuoteDividSingle() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteDividSingle)
  SharedDtor();
}

void QuoteDividSingle::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QuoteDividSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteDividSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteDividSingle_descriptor_;
}

const QuoteDividSingle& QuoteDividSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteDividSingle* QuoteDividSingle::default_instance_ = NULL;

QuoteDividSingle* QuoteDividSingle::New(::google::protobuf::Arena* arena) const {
  QuoteDividSingle* n = new QuoteDividSingle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteDividSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteDividSingle)
  if (has_obj()) {
    obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteDividSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteDividSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QuoteDividSingle.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .dzhyun.QuoteDivid Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteDividSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteDividSingle)
  return false;
#undef DO_
}

void QuoteDividSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteDividSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteDividSingle.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // repeated .dzhyun.QuoteDivid Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteDividSingle)
}

::google::protobuf::uint8* QuoteDividSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteDividSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteDividSingle.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // repeated .dzhyun.QuoteDivid Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteDividSingle)
  return target;
}

int QuoteDividSingle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteDividSingle)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  // repeated .dzhyun.QuoteDivid Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteDividSingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteDividSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteDividSingle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteDividSingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteDividSingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteDividSingle)
    MergeFrom(*source);
  }
}

void QuoteDividSingle::MergeFrom(const QuoteDividSingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteDividSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteDividSingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteDividSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteDividSingle::CopyFrom(const QuoteDividSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteDividSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteDividSingle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void QuoteDividSingle::Swap(QuoteDividSingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteDividSingle::InternalSwap(QuoteDividSingle* other) {
  obj_.Swap(&other->obj_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteDividSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteDividSingle_descriptor_;
  metadata.reflection = QuoteDividSingle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteDividSingle

// required string Obj = 1;
bool QuoteDividSingle::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteDividSingle::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteDividSingle::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteDividSingle::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& QuoteDividSingle::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDividSingle.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteDividSingle::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteDividSingle.Obj)
}
 void QuoteDividSingle::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QuoteDividSingle.Obj)
}
 void QuoteDividSingle::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QuoteDividSingle.Obj)
}
 ::std::string* QuoteDividSingle::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteDividSingle.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QuoteDividSingle::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.QuoteDividSingle.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteDividSingle::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QuoteDividSingle.Obj)
}

// repeated .dzhyun.QuoteDivid Data = 2;
int QuoteDividSingle::data_size() const {
  return data_.size();
}
void QuoteDividSingle::clear_data() {
  data_.Clear();
}
const ::dzhyun::QuoteDivid& QuoteDividSingle::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDividSingle.Data)
  return data_.Get(index);
}
::dzhyun::QuoteDivid* QuoteDividSingle::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteDividSingle.Data)
  return data_.Mutable(index);
}
::dzhyun::QuoteDivid* QuoteDividSingle::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteDividSingle.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteDivid >*
QuoteDividSingle::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteDividSingle.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteDivid >&
QuoteDividSingle::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteDividSingle.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteDividOutput::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteDividOutput::QuoteDividOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteDividOutput)
}

void QuoteDividOutput::InitAsDefaultInstance() {
}

QuoteDividOutput::QuoteDividOutput(const QuoteDividOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteDividOutput)
}

void QuoteDividOutput::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteDividOutput::~QuoteDividOutput() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteDividOutput)
  SharedDtor();
}

void QuoteDividOutput::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuoteDividOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteDividOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteDividOutput_descriptor_;
}

const QuoteDividOutput& QuoteDividOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteDividOutput* QuoteDividOutput::default_instance_ = NULL;

QuoteDividOutput* QuoteDividOutput::New(::google::protobuf::Arena* arena) const {
  QuoteDividOutput* n = new QuoteDividOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteDividOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteDividOutput)
  results_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteDividOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteDividOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dzhyun.QuoteDividSingle Results = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_Results;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteDividOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteDividOutput)
  return false;
#undef DO_
}

void QuoteDividOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteDividOutput)
  // repeated .dzhyun.QuoteDividSingle Results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->results(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteDividOutput)
}

::google::protobuf::uint8* QuoteDividOutput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteDividOutput)
  // repeated .dzhyun.QuoteDividSingle Results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->results(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteDividOutput)
  return target;
}

int QuoteDividOutput::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteDividOutput)
  int total_size = 0;

  // repeated .dzhyun.QuoteDividSingle Results = 1;
  total_size += 1 * this->results_size();
  for (int i = 0; i < this->results_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->results(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteDividOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteDividOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteDividOutput* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteDividOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteDividOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteDividOutput)
    MergeFrom(*source);
  }
}

void QuoteDividOutput::MergeFrom(const QuoteDividOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteDividOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  results_.MergeFrom(from.results_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteDividOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteDividOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteDividOutput::CopyFrom(const QuoteDividOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteDividOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteDividOutput::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->results())) return false;
  return true;
}

void QuoteDividOutput::Swap(QuoteDividOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteDividOutput::InternalSwap(QuoteDividOutput* other) {
  results_.UnsafeArenaSwap(&other->results_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteDividOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteDividOutput_descriptor_;
  metadata.reflection = QuoteDividOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteDividOutput

// repeated .dzhyun.QuoteDividSingle Results = 1;
int QuoteDividOutput::results_size() const {
  return results_.size();
}
void QuoteDividOutput::clear_results() {
  results_.Clear();
}
const ::dzhyun::QuoteDividSingle& QuoteDividOutput::results(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDividOutput.Results)
  return results_.Get(index);
}
::dzhyun::QuoteDividSingle* QuoteDividOutput::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteDividOutput.Results)
  return results_.Mutable(index);
}
::dzhyun::QuoteDividSingle* QuoteDividOutput::add_results() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteDividOutput.Results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteDividSingle >*
QuoteDividOutput::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteDividOutput.Results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteDividSingle >&
QuoteDividOutput::results() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteDividOutput.Results)
  return results_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteDynaMinSingle::kObjFieldNumber;
const int QuoteDynaMinSingle::kDataFieldNumber;
const int QuoteDynaMinSingle::kQingPanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteDynaMinSingle::QuoteDynaMinSingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteDynaMinSingle)
}

void QuoteDynaMinSingle::InitAsDefaultInstance() {
}

QuoteDynaMinSingle::QuoteDynaMinSingle(const QuoteDynaMinSingle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteDynaMinSingle)
}

void QuoteDynaMinSingle::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qingpan_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteDynaMinSingle::~QuoteDynaMinSingle() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteDynaMinSingle)
  SharedDtor();
}

void QuoteDynaMinSingle::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QuoteDynaMinSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteDynaMinSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteDynaMinSingle_descriptor_;
}

const QuoteDynaMinSingle& QuoteDynaMinSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteDynaMinSingle* QuoteDynaMinSingle::default_instance_ = NULL;

QuoteDynaMinSingle* QuoteDynaMinSingle::New(::google::protobuf::Arena* arena) const {
  QuoteDynaMinSingle* n = new QuoteDynaMinSingle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteDynaMinSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteDynaMinSingle)
  if (_has_bits_[0 / 32] & 5u) {
    if (has_obj()) {
      obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    qingpan_ = GOOGLE_LONGLONG(0);
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteDynaMinSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteDynaMinSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QuoteDynaMinSingle.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .dzhyun.GeGuDongTai Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_QingPan;
        break;
      }

      // optional int64 QingPan = 3;
      case 3: {
        if (tag == 24) {
         parse_QingPan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &qingpan_)));
          set_has_qingpan();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteDynaMinSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteDynaMinSingle)
  return false;
#undef DO_
}

void QuoteDynaMinSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteDynaMinSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteDynaMinSingle.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // repeated .dzhyun.GeGuDongTai Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // optional int64 QingPan = 3;
  if (has_qingpan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->qingpan(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteDynaMinSingle)
}

::google::protobuf::uint8* QuoteDynaMinSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteDynaMinSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteDynaMinSingle.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // repeated .dzhyun.GeGuDongTai Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  // optional int64 QingPan = 3;
  if (has_qingpan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->qingpan(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteDynaMinSingle)
  return target;
}

int QuoteDynaMinSingle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteDynaMinSingle)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  // optional int64 QingPan = 3;
  if (has_qingpan()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->qingpan());
  }

  // repeated .dzhyun.GeGuDongTai Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteDynaMinSingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteDynaMinSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteDynaMinSingle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteDynaMinSingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteDynaMinSingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteDynaMinSingle)
    MergeFrom(*source);
  }
}

void QuoteDynaMinSingle::MergeFrom(const QuoteDynaMinSingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteDynaMinSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
    if (from.has_qingpan()) {
      set_qingpan(from.qingpan());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteDynaMinSingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteDynaMinSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteDynaMinSingle::CopyFrom(const QuoteDynaMinSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteDynaMinSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteDynaMinSingle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void QuoteDynaMinSingle::Swap(QuoteDynaMinSingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteDynaMinSingle::InternalSwap(QuoteDynaMinSingle* other) {
  obj_.Swap(&other->obj_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(qingpan_, other->qingpan_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteDynaMinSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteDynaMinSingle_descriptor_;
  metadata.reflection = QuoteDynaMinSingle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteDynaMinSingle

// required string Obj = 1;
bool QuoteDynaMinSingle::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteDynaMinSingle::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteDynaMinSingle::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteDynaMinSingle::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& QuoteDynaMinSingle::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDynaMinSingle.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteDynaMinSingle::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteDynaMinSingle.Obj)
}
 void QuoteDynaMinSingle::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QuoteDynaMinSingle.Obj)
}
 void QuoteDynaMinSingle::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QuoteDynaMinSingle.Obj)
}
 ::std::string* QuoteDynaMinSingle::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteDynaMinSingle.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QuoteDynaMinSingle::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.QuoteDynaMinSingle.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteDynaMinSingle::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QuoteDynaMinSingle.Obj)
}

// repeated .dzhyun.GeGuDongTai Data = 2;
int QuoteDynaMinSingle::data_size() const {
  return data_.size();
}
void QuoteDynaMinSingle::clear_data() {
  data_.Clear();
}
const ::dzhyun::GeGuDongTai& QuoteDynaMinSingle::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDynaMinSingle.Data)
  return data_.Get(index);
}
::dzhyun::GeGuDongTai* QuoteDynaMinSingle::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteDynaMinSingle.Data)
  return data_.Mutable(index);
}
::dzhyun::GeGuDongTai* QuoteDynaMinSingle::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteDynaMinSingle.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::GeGuDongTai >*
QuoteDynaMinSingle::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteDynaMinSingle.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::GeGuDongTai >&
QuoteDynaMinSingle::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteDynaMinSingle.Data)
  return data_;
}

// optional int64 QingPan = 3;
bool QuoteDynaMinSingle::has_qingpan() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteDynaMinSingle::set_has_qingpan() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteDynaMinSingle::clear_has_qingpan() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteDynaMinSingle::clear_qingpan() {
  qingpan_ = GOOGLE_LONGLONG(0);
  clear_has_qingpan();
}
 ::google::protobuf::int64 QuoteDynaMinSingle::qingpan() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteDynaMinSingle.QingPan)
  return qingpan_;
}
 void QuoteDynaMinSingle::set_qingpan(::google::protobuf::int64 value) {
  set_has_qingpan();
  qingpan_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteDynaMinSingle.QingPan)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteReportSingle::kObjFieldNumber;
const int QuoteReportSingle::kDataFieldNumber;
const int QuoteReportSingle::kQingPanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteReportSingle::QuoteReportSingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteReportSingle)
}

void QuoteReportSingle::InitAsDefaultInstance() {
}

QuoteReportSingle::QuoteReportSingle(const QuoteReportSingle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteReportSingle)
}

void QuoteReportSingle::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qingpan_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteReportSingle::~QuoteReportSingle() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteReportSingle)
  SharedDtor();
}

void QuoteReportSingle::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QuoteReportSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteReportSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteReportSingle_descriptor_;
}

const QuoteReportSingle& QuoteReportSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteReportSingle* QuoteReportSingle::default_instance_ = NULL;

QuoteReportSingle* QuoteReportSingle::New(::google::protobuf::Arena* arena) const {
  QuoteReportSingle* n = new QuoteReportSingle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteReportSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteReportSingle)
  if (_has_bits_[0 / 32] & 5u) {
    if (has_obj()) {
      obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    qingpan_ = GOOGLE_LONGLONG(0);
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteReportSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteReportSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QuoteReportSingle.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .dzhyun.ZhubiDangri Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_QingPan;
        break;
      }

      // optional int64 QingPan = 3;
      case 3: {
        if (tag == 24) {
         parse_QingPan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &qingpan_)));
          set_has_qingpan();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteReportSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteReportSingle)
  return false;
#undef DO_
}

void QuoteReportSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteReportSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteReportSingle.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // repeated .dzhyun.ZhubiDangri Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // optional int64 QingPan = 3;
  if (has_qingpan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->qingpan(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteReportSingle)
}

::google::protobuf::uint8* QuoteReportSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteReportSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteReportSingle.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // repeated .dzhyun.ZhubiDangri Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  // optional int64 QingPan = 3;
  if (has_qingpan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->qingpan(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteReportSingle)
  return target;
}

int QuoteReportSingle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteReportSingle)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  // optional int64 QingPan = 3;
  if (has_qingpan()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->qingpan());
  }

  // repeated .dzhyun.ZhubiDangri Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteReportSingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteReportSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteReportSingle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteReportSingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteReportSingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteReportSingle)
    MergeFrom(*source);
  }
}

void QuoteReportSingle::MergeFrom(const QuoteReportSingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteReportSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
    if (from.has_qingpan()) {
      set_qingpan(from.qingpan());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteReportSingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteReportSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteReportSingle::CopyFrom(const QuoteReportSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteReportSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteReportSingle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void QuoteReportSingle::Swap(QuoteReportSingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteReportSingle::InternalSwap(QuoteReportSingle* other) {
  obj_.Swap(&other->obj_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(qingpan_, other->qingpan_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteReportSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteReportSingle_descriptor_;
  metadata.reflection = QuoteReportSingle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteReportSingle

// required string Obj = 1;
bool QuoteReportSingle::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteReportSingle::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteReportSingle::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteReportSingle::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& QuoteReportSingle::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteReportSingle.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteReportSingle::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteReportSingle.Obj)
}
 void QuoteReportSingle::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QuoteReportSingle.Obj)
}
 void QuoteReportSingle::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QuoteReportSingle.Obj)
}
 ::std::string* QuoteReportSingle::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteReportSingle.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QuoteReportSingle::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.QuoteReportSingle.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteReportSingle::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QuoteReportSingle.Obj)
}

// repeated .dzhyun.ZhubiDangri Data = 2;
int QuoteReportSingle::data_size() const {
  return data_.size();
}
void QuoteReportSingle::clear_data() {
  data_.Clear();
}
const ::dzhyun::ZhubiDangri& QuoteReportSingle::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteReportSingle.Data)
  return data_.Get(index);
}
::dzhyun::ZhubiDangri* QuoteReportSingle::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteReportSingle.Data)
  return data_.Mutable(index);
}
::dzhyun::ZhubiDangri* QuoteReportSingle::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteReportSingle.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::ZhubiDangri >*
QuoteReportSingle::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteReportSingle.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::ZhubiDangri >&
QuoteReportSingle::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteReportSingle.Data)
  return data_;
}

// optional int64 QingPan = 3;
bool QuoteReportSingle::has_qingpan() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteReportSingle::set_has_qingpan() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteReportSingle::clear_has_qingpan() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteReportSingle::clear_qingpan() {
  qingpan_ = GOOGLE_LONGLONG(0);
  clear_has_qingpan();
}
 ::google::protobuf::int64 QuoteReportSingle::qingpan() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteReportSingle.QingPan)
  return qingpan_;
}
 void QuoteReportSingle::set_qingpan(::google::protobuf::int64 value) {
  set_has_qingpan();
  qingpan_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteReportSingle.QingPan)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteQueueSingle::kObjFieldNumber;
const int QuoteQueueSingle::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteQueueSingle::QuoteQueueSingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteQueueSingle)
}

void QuoteQueueSingle::InitAsDefaultInstance() {
}

QuoteQueueSingle::QuoteQueueSingle(const QuoteQueueSingle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteQueueSingle)
}

void QuoteQueueSingle::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteQueueSingle::~QuoteQueueSingle() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteQueueSingle)
  SharedDtor();
}

void QuoteQueueSingle::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QuoteQueueSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteQueueSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteQueueSingle_descriptor_;
}

const QuoteQueueSingle& QuoteQueueSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteQueueSingle* QuoteQueueSingle::default_instance_ = NULL;

QuoteQueueSingle* QuoteQueueSingle::New(::google::protobuf::Arena* arena) const {
  QuoteQueueSingle* n = new QuoteQueueSingle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteQueueSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteQueueSingle)
  if (has_obj()) {
    obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteQueueSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteQueueSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QuoteQueueSingle.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .dzhyun.WeiTuoDuiLie Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteQueueSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteQueueSingle)
  return false;
#undef DO_
}

void QuoteQueueSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteQueueSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteQueueSingle.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // repeated .dzhyun.WeiTuoDuiLie Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteQueueSingle)
}

::google::protobuf::uint8* QuoteQueueSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteQueueSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteQueueSingle.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // repeated .dzhyun.WeiTuoDuiLie Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteQueueSingle)
  return target;
}

int QuoteQueueSingle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteQueueSingle)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  // repeated .dzhyun.WeiTuoDuiLie Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteQueueSingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteQueueSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteQueueSingle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteQueueSingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteQueueSingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteQueueSingle)
    MergeFrom(*source);
  }
}

void QuoteQueueSingle::MergeFrom(const QuoteQueueSingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteQueueSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteQueueSingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteQueueSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteQueueSingle::CopyFrom(const QuoteQueueSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteQueueSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteQueueSingle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void QuoteQueueSingle::Swap(QuoteQueueSingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteQueueSingle::InternalSwap(QuoteQueueSingle* other) {
  obj_.Swap(&other->obj_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteQueueSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteQueueSingle_descriptor_;
  metadata.reflection = QuoteQueueSingle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteQueueSingle

// required string Obj = 1;
bool QuoteQueueSingle::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteQueueSingle::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteQueueSingle::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteQueueSingle::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& QuoteQueueSingle::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteQueueSingle.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteQueueSingle::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteQueueSingle.Obj)
}
 void QuoteQueueSingle::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QuoteQueueSingle.Obj)
}
 void QuoteQueueSingle::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QuoteQueueSingle.Obj)
}
 ::std::string* QuoteQueueSingle::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteQueueSingle.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QuoteQueueSingle::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.QuoteQueueSingle.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteQueueSingle::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QuoteQueueSingle.Obj)
}

// repeated .dzhyun.WeiTuoDuiLie Data = 2;
int QuoteQueueSingle::data_size() const {
  return data_.size();
}
void QuoteQueueSingle::clear_data() {
  data_.Clear();
}
const ::dzhyun::WeiTuoDuiLie& QuoteQueueSingle::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteQueueSingle.Data)
  return data_.Get(index);
}
::dzhyun::WeiTuoDuiLie* QuoteQueueSingle::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteQueueSingle.Data)
  return data_.Mutable(index);
}
::dzhyun::WeiTuoDuiLie* QuoteQueueSingle::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteQueueSingle.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::WeiTuoDuiLie >*
QuoteQueueSingle::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteQueueSingle.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::WeiTuoDuiLie >&
QuoteQueueSingle::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteQueueSingle.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteHistoryMinSingle::kObjFieldNumber;
const int QuoteHistoryMinSingle::kDataFieldNumber;
const int QuoteHistoryMinSingle::kZuoShouFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteHistoryMinSingle::QuoteHistoryMinSingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteHistoryMinSingle)
}

void QuoteHistoryMinSingle::InitAsDefaultInstance() {
}

QuoteHistoryMinSingle::QuoteHistoryMinSingle(const QuoteHistoryMinSingle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteHistoryMinSingle)
}

void QuoteHistoryMinSingle::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zuoshou_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteHistoryMinSingle::~QuoteHistoryMinSingle() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteHistoryMinSingle)
  SharedDtor();
}

void QuoteHistoryMinSingle::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QuoteHistoryMinSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteHistoryMinSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteHistoryMinSingle_descriptor_;
}

const QuoteHistoryMinSingle& QuoteHistoryMinSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteHistoryMinSingle* QuoteHistoryMinSingle::default_instance_ = NULL;

QuoteHistoryMinSingle* QuoteHistoryMinSingle::New(::google::protobuf::Arena* arena) const {
  QuoteHistoryMinSingle* n = new QuoteHistoryMinSingle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteHistoryMinSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteHistoryMinSingle)
  if (_has_bits_[0 / 32] & 5u) {
    if (has_obj()) {
      obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    zuoshou_ = GOOGLE_LONGLONG(0);
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteHistoryMinSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteHistoryMinSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QuoteHistoryMinSingle.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .dzhyun.FenShiLishi Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_ZuoShou;
        break;
      }

      // optional int64 ZuoShou = 3;
      case 3: {
        if (tag == 24) {
         parse_ZuoShou:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &zuoshou_)));
          set_has_zuoshou();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteHistoryMinSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteHistoryMinSingle)
  return false;
#undef DO_
}

void QuoteHistoryMinSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteHistoryMinSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteHistoryMinSingle.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // repeated .dzhyun.FenShiLishi Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // optional int64 ZuoShou = 3;
  if (has_zuoshou()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->zuoshou(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteHistoryMinSingle)
}

::google::protobuf::uint8* QuoteHistoryMinSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteHistoryMinSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteHistoryMinSingle.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // repeated .dzhyun.FenShiLishi Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  // optional int64 ZuoShou = 3;
  if (has_zuoshou()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->zuoshou(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteHistoryMinSingle)
  return target;
}

int QuoteHistoryMinSingle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteHistoryMinSingle)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  // optional int64 ZuoShou = 3;
  if (has_zuoshou()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->zuoshou());
  }

  // repeated .dzhyun.FenShiLishi Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteHistoryMinSingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteHistoryMinSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteHistoryMinSingle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteHistoryMinSingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteHistoryMinSingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteHistoryMinSingle)
    MergeFrom(*source);
  }
}

void QuoteHistoryMinSingle::MergeFrom(const QuoteHistoryMinSingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteHistoryMinSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
    if (from.has_zuoshou()) {
      set_zuoshou(from.zuoshou());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteHistoryMinSingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteHistoryMinSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteHistoryMinSingle::CopyFrom(const QuoteHistoryMinSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteHistoryMinSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteHistoryMinSingle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void QuoteHistoryMinSingle::Swap(QuoteHistoryMinSingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteHistoryMinSingle::InternalSwap(QuoteHistoryMinSingle* other) {
  obj_.Swap(&other->obj_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(zuoshou_, other->zuoshou_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteHistoryMinSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteHistoryMinSingle_descriptor_;
  metadata.reflection = QuoteHistoryMinSingle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteHistoryMinSingle

// required string Obj = 1;
bool QuoteHistoryMinSingle::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteHistoryMinSingle::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteHistoryMinSingle::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteHistoryMinSingle::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& QuoteHistoryMinSingle::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteHistoryMinSingle.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteHistoryMinSingle::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteHistoryMinSingle.Obj)
}
 void QuoteHistoryMinSingle::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QuoteHistoryMinSingle.Obj)
}
 void QuoteHistoryMinSingle::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QuoteHistoryMinSingle.Obj)
}
 ::std::string* QuoteHistoryMinSingle::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteHistoryMinSingle.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QuoteHistoryMinSingle::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.QuoteHistoryMinSingle.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteHistoryMinSingle::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QuoteHistoryMinSingle.Obj)
}

// repeated .dzhyun.FenShiLishi Data = 2;
int QuoteHistoryMinSingle::data_size() const {
  return data_.size();
}
void QuoteHistoryMinSingle::clear_data() {
  data_.Clear();
}
const ::dzhyun::FenShiLishi& QuoteHistoryMinSingle::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteHistoryMinSingle.Data)
  return data_.Get(index);
}
::dzhyun::FenShiLishi* QuoteHistoryMinSingle::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteHistoryMinSingle.Data)
  return data_.Mutable(index);
}
::dzhyun::FenShiLishi* QuoteHistoryMinSingle::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteHistoryMinSingle.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::FenShiLishi >*
QuoteHistoryMinSingle::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteHistoryMinSingle.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::FenShiLishi >&
QuoteHistoryMinSingle::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteHistoryMinSingle.Data)
  return data_;
}

// optional int64 ZuoShou = 3;
bool QuoteHistoryMinSingle::has_zuoshou() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteHistoryMinSingle::set_has_zuoshou() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteHistoryMinSingle::clear_has_zuoshou() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteHistoryMinSingle::clear_zuoshou() {
  zuoshou_ = GOOGLE_LONGLONG(0);
  clear_has_zuoshou();
}
 ::google::protobuf::int64 QuoteHistoryMinSingle::zuoshou() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteHistoryMinSingle.ZuoShou)
  return zuoshou_;
}
 void QuoteHistoryMinSingle::set_zuoshou(::google::protobuf::int64 value) {
  set_has_zuoshou();
  zuoshou_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteHistoryMinSingle.ZuoShou)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteFundFlow::kShiJianFieldNumber;
const int QuoteFundFlow::kDaDanLiuRuJinEFieldNumber;
const int QuoteFundFlow::kDaDanLiuChuJinEFieldNumber;
const int QuoteFundFlow::kDaDanJingLiuRuJinEFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteFundFlow::QuoteFundFlow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteFundFlow)
}

void QuoteFundFlow::InitAsDefaultInstance() {
}

QuoteFundFlow::QuoteFundFlow(const QuoteFundFlow& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteFundFlow)
}

void QuoteFundFlow::SharedCtor() {
  _cached_size_ = 0;
  shijian_ = GOOGLE_LONGLONG(0);
  dadanliurujine_ = GOOGLE_LONGLONG(0);
  dadanliuchujine_ = GOOGLE_LONGLONG(0);
  dadanjingliurujine_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteFundFlow::~QuoteFundFlow() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteFundFlow)
  SharedDtor();
}

void QuoteFundFlow::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuoteFundFlow::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteFundFlow::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteFundFlow_descriptor_;
}

const QuoteFundFlow& QuoteFundFlow::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteFundFlow* QuoteFundFlow::default_instance_ = NULL;

QuoteFundFlow* QuoteFundFlow::New(::google::protobuf::Arena* arena) const {
  QuoteFundFlow* n = new QuoteFundFlow;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteFundFlow::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteFundFlow)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QuoteFundFlow, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QuoteFundFlow*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(shijian_, dadanjingliurujine_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteFundFlow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteFundFlow)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ShiJian = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shijian_)));
          set_has_shijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DaDanLiuRuJinE;
        break;
      }

      // optional int64 DaDanLiuRuJinE = 2;
      case 2: {
        if (tag == 16) {
         parse_DaDanLiuRuJinE:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dadanliurujine_)));
          set_has_dadanliurujine();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_DaDanLiuChuJinE;
        break;
      }

      // optional int64 DaDanLiuChuJinE = 3;
      case 3: {
        if (tag == 24) {
         parse_DaDanLiuChuJinE:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dadanliuchujine_)));
          set_has_dadanliuchujine();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_DaDanJingLiuRuJinE;
        break;
      }

      // optional int64 DaDanJingLiuRuJinE = 4;
      case 4: {
        if (tag == 32) {
         parse_DaDanJingLiuRuJinE:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dadanjingliurujine_)));
          set_has_dadanjingliurujine();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteFundFlow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteFundFlow)
  return false;
#undef DO_
}

void QuoteFundFlow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteFundFlow)
  // optional int64 ShiJian = 1;
  if (has_shijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shijian(), output);
  }

  // optional int64 DaDanLiuRuJinE = 2;
  if (has_dadanliurujine()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->dadanliurujine(), output);
  }

  // optional int64 DaDanLiuChuJinE = 3;
  if (has_dadanliuchujine()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->dadanliuchujine(), output);
  }

  // optional int64 DaDanJingLiuRuJinE = 4;
  if (has_dadanjingliurujine()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->dadanjingliurujine(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteFundFlow)
}

::google::protobuf::uint8* QuoteFundFlow::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteFundFlow)
  // optional int64 ShiJian = 1;
  if (has_shijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shijian(), target);
  }

  // optional int64 DaDanLiuRuJinE = 2;
  if (has_dadanliurujine()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->dadanliurujine(), target);
  }

  // optional int64 DaDanLiuChuJinE = 3;
  if (has_dadanliuchujine()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->dadanliuchujine(), target);
  }

  // optional int64 DaDanJingLiuRuJinE = 4;
  if (has_dadanjingliurujine()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->dadanjingliurujine(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteFundFlow)
  return target;
}

int QuoteFundFlow::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteFundFlow)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional int64 ShiJian = 1;
    if (has_shijian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shijian());
    }

    // optional int64 DaDanLiuRuJinE = 2;
    if (has_dadanliurujine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dadanliurujine());
    }

    // optional int64 DaDanLiuChuJinE = 3;
    if (has_dadanliuchujine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dadanliuchujine());
    }

    // optional int64 DaDanJingLiuRuJinE = 4;
    if (has_dadanjingliurujine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dadanjingliurujine());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteFundFlow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteFundFlow)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteFundFlow* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteFundFlow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteFundFlow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteFundFlow)
    MergeFrom(*source);
  }
}

void QuoteFundFlow::MergeFrom(const QuoteFundFlow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteFundFlow)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shijian()) {
      set_shijian(from.shijian());
    }
    if (from.has_dadanliurujine()) {
      set_dadanliurujine(from.dadanliurujine());
    }
    if (from.has_dadanliuchujine()) {
      set_dadanliuchujine(from.dadanliuchujine());
    }
    if (from.has_dadanjingliurujine()) {
      set_dadanjingliurujine(from.dadanjingliurujine());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteFundFlow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteFundFlow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteFundFlow::CopyFrom(const QuoteFundFlow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteFundFlow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteFundFlow::IsInitialized() const {

  return true;
}

void QuoteFundFlow::Swap(QuoteFundFlow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteFundFlow::InternalSwap(QuoteFundFlow* other) {
  std::swap(shijian_, other->shijian_);
  std::swap(dadanliurujine_, other->dadanliurujine_);
  std::swap(dadanliuchujine_, other->dadanliuchujine_);
  std::swap(dadanjingliurujine_, other->dadanjingliurujine_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteFundFlow::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteFundFlow_descriptor_;
  metadata.reflection = QuoteFundFlow_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteFundFlow

// optional int64 ShiJian = 1;
bool QuoteFundFlow::has_shijian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteFundFlow::set_has_shijian() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteFundFlow::clear_has_shijian() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteFundFlow::clear_shijian() {
  shijian_ = GOOGLE_LONGLONG(0);
  clear_has_shijian();
}
 ::google::protobuf::int64 QuoteFundFlow::shijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteFundFlow.ShiJian)
  return shijian_;
}
 void QuoteFundFlow::set_shijian(::google::protobuf::int64 value) {
  set_has_shijian();
  shijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteFundFlow.ShiJian)
}

// optional int64 DaDanLiuRuJinE = 2;
bool QuoteFundFlow::has_dadanliurujine() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QuoteFundFlow::set_has_dadanliurujine() {
  _has_bits_[0] |= 0x00000002u;
}
void QuoteFundFlow::clear_has_dadanliurujine() {
  _has_bits_[0] &= ~0x00000002u;
}
void QuoteFundFlow::clear_dadanliurujine() {
  dadanliurujine_ = GOOGLE_LONGLONG(0);
  clear_has_dadanliurujine();
}
 ::google::protobuf::int64 QuoteFundFlow::dadanliurujine() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteFundFlow.DaDanLiuRuJinE)
  return dadanliurujine_;
}
 void QuoteFundFlow::set_dadanliurujine(::google::protobuf::int64 value) {
  set_has_dadanliurujine();
  dadanliurujine_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteFundFlow.DaDanLiuRuJinE)
}

// optional int64 DaDanLiuChuJinE = 3;
bool QuoteFundFlow::has_dadanliuchujine() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteFundFlow::set_has_dadanliuchujine() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteFundFlow::clear_has_dadanliuchujine() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteFundFlow::clear_dadanliuchujine() {
  dadanliuchujine_ = GOOGLE_LONGLONG(0);
  clear_has_dadanliuchujine();
}
 ::google::protobuf::int64 QuoteFundFlow::dadanliuchujine() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteFundFlow.DaDanLiuChuJinE)
  return dadanliuchujine_;
}
 void QuoteFundFlow::set_dadanliuchujine(::google::protobuf::int64 value) {
  set_has_dadanliuchujine();
  dadanliuchujine_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteFundFlow.DaDanLiuChuJinE)
}

// optional int64 DaDanJingLiuRuJinE = 4;
bool QuoteFundFlow::has_dadanjingliurujine() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QuoteFundFlow::set_has_dadanjingliurujine() {
  _has_bits_[0] |= 0x00000008u;
}
void QuoteFundFlow::clear_has_dadanjingliurujine() {
  _has_bits_[0] &= ~0x00000008u;
}
void QuoteFundFlow::clear_dadanjingliurujine() {
  dadanjingliurujine_ = GOOGLE_LONGLONG(0);
  clear_has_dadanjingliurujine();
}
 ::google::protobuf::int64 QuoteFundFlow::dadanjingliurujine() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteFundFlow.DaDanJingLiuRuJinE)
  return dadanjingliurujine_;
}
 void QuoteFundFlow::set_dadanjingliurujine(::google::protobuf::int64 value) {
  set_has_dadanjingliurujine();
  dadanjingliurujine_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteFundFlow.DaDanJingLiuRuJinE)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteFundFlowSingle::kObjFieldNumber;
const int QuoteFundFlowSingle::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteFundFlowSingle::QuoteFundFlowSingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteFundFlowSingle)
}

void QuoteFundFlowSingle::InitAsDefaultInstance() {
}

QuoteFundFlowSingle::QuoteFundFlowSingle(const QuoteFundFlowSingle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteFundFlowSingle)
}

void QuoteFundFlowSingle::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteFundFlowSingle::~QuoteFundFlowSingle() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteFundFlowSingle)
  SharedDtor();
}

void QuoteFundFlowSingle::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QuoteFundFlowSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteFundFlowSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteFundFlowSingle_descriptor_;
}

const QuoteFundFlowSingle& QuoteFundFlowSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteFundFlowSingle* QuoteFundFlowSingle::default_instance_ = NULL;

QuoteFundFlowSingle* QuoteFundFlowSingle::New(::google::protobuf::Arena* arena) const {
  QuoteFundFlowSingle* n = new QuoteFundFlowSingle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteFundFlowSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteFundFlowSingle)
  if (has_obj()) {
    obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteFundFlowSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteFundFlowSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QuoteFundFlowSingle.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .dzhyun.QuoteFundFlow Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteFundFlowSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteFundFlowSingle)
  return false;
#undef DO_
}

void QuoteFundFlowSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteFundFlowSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteFundFlowSingle.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // repeated .dzhyun.QuoteFundFlow Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteFundFlowSingle)
}

::google::protobuf::uint8* QuoteFundFlowSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteFundFlowSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteFundFlowSingle.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // repeated .dzhyun.QuoteFundFlow Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteFundFlowSingle)
  return target;
}

int QuoteFundFlowSingle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteFundFlowSingle)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  // repeated .dzhyun.QuoteFundFlow Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteFundFlowSingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteFundFlowSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteFundFlowSingle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteFundFlowSingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteFundFlowSingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteFundFlowSingle)
    MergeFrom(*source);
  }
}

void QuoteFundFlowSingle::MergeFrom(const QuoteFundFlowSingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteFundFlowSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteFundFlowSingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteFundFlowSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteFundFlowSingle::CopyFrom(const QuoteFundFlowSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteFundFlowSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteFundFlowSingle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void QuoteFundFlowSingle::Swap(QuoteFundFlowSingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteFundFlowSingle::InternalSwap(QuoteFundFlowSingle* other) {
  obj_.Swap(&other->obj_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteFundFlowSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteFundFlowSingle_descriptor_;
  metadata.reflection = QuoteFundFlowSingle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteFundFlowSingle

// required string Obj = 1;
bool QuoteFundFlowSingle::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteFundFlowSingle::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteFundFlowSingle::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteFundFlowSingle::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& QuoteFundFlowSingle::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteFundFlowSingle.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteFundFlowSingle::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteFundFlowSingle.Obj)
}
 void QuoteFundFlowSingle::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QuoteFundFlowSingle.Obj)
}
 void QuoteFundFlowSingle::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QuoteFundFlowSingle.Obj)
}
 ::std::string* QuoteFundFlowSingle::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteFundFlowSingle.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QuoteFundFlowSingle::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.QuoteFundFlowSingle.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteFundFlowSingle::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QuoteFundFlowSingle.Obj)
}

// repeated .dzhyun.QuoteFundFlow Data = 2;
int QuoteFundFlowSingle::data_size() const {
  return data_.size();
}
void QuoteFundFlowSingle::clear_data() {
  data_.Clear();
}
const ::dzhyun::QuoteFundFlow& QuoteFundFlowSingle::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteFundFlowSingle.Data)
  return data_.Get(index);
}
::dzhyun::QuoteFundFlow* QuoteFundFlowSingle::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteFundFlowSingle.Data)
  return data_.Mutable(index);
}
::dzhyun::QuoteFundFlow* QuoteFundFlowSingle::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteFundFlowSingle.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteFundFlow >*
QuoteFundFlowSingle::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteFundFlowSingle.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteFundFlow >&
QuoteFundFlowSingle::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteFundFlowSingle.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteQueueMinSingle::kObjFieldNumber;
const int QuoteQueueMinSingle::kDataFieldNumber;
const int QuoteQueueMinSingle::kQingPanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteQueueMinSingle::QuoteQueueMinSingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteQueueMinSingle)
}

void QuoteQueueMinSingle::InitAsDefaultInstance() {
}

QuoteQueueMinSingle::QuoteQueueMinSingle(const QuoteQueueMinSingle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteQueueMinSingle)
}

void QuoteQueueMinSingle::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qingpan_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteQueueMinSingle::~QuoteQueueMinSingle() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteQueueMinSingle)
  SharedDtor();
}

void QuoteQueueMinSingle::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QuoteQueueMinSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteQueueMinSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteQueueMinSingle_descriptor_;
}

const QuoteQueueMinSingle& QuoteQueueMinSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteQueueMinSingle* QuoteQueueMinSingle::default_instance_ = NULL;

QuoteQueueMinSingle* QuoteQueueMinSingle::New(::google::protobuf::Arena* arena) const {
  QuoteQueueMinSingle* n = new QuoteQueueMinSingle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteQueueMinSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteQueueMinSingle)
  if (_has_bits_[0 / 32] & 5u) {
    if (has_obj()) {
      obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    qingpan_ = GOOGLE_LONGLONG(0);
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteQueueMinSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteQueueMinSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QuoteQueueMinSingle.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .dzhyun.WeiTuoDuiLie Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_QingPan;
        break;
      }

      // optional int64 QingPan = 3;
      case 3: {
        if (tag == 24) {
         parse_QingPan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &qingpan_)));
          set_has_qingpan();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteQueueMinSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteQueueMinSingle)
  return false;
#undef DO_
}

void QuoteQueueMinSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteQueueMinSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteQueueMinSingle.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // repeated .dzhyun.WeiTuoDuiLie Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // optional int64 QingPan = 3;
  if (has_qingpan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->qingpan(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteQueueMinSingle)
}

::google::protobuf::uint8* QuoteQueueMinSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteQueueMinSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteQueueMinSingle.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // repeated .dzhyun.WeiTuoDuiLie Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  // optional int64 QingPan = 3;
  if (has_qingpan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->qingpan(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteQueueMinSingle)
  return target;
}

int QuoteQueueMinSingle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteQueueMinSingle)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  // optional int64 QingPan = 3;
  if (has_qingpan()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->qingpan());
  }

  // repeated .dzhyun.WeiTuoDuiLie Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteQueueMinSingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteQueueMinSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteQueueMinSingle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteQueueMinSingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteQueueMinSingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteQueueMinSingle)
    MergeFrom(*source);
  }
}

void QuoteQueueMinSingle::MergeFrom(const QuoteQueueMinSingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteQueueMinSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
    if (from.has_qingpan()) {
      set_qingpan(from.qingpan());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteQueueMinSingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteQueueMinSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteQueueMinSingle::CopyFrom(const QuoteQueueMinSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteQueueMinSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteQueueMinSingle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void QuoteQueueMinSingle::Swap(QuoteQueueMinSingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteQueueMinSingle::InternalSwap(QuoteQueueMinSingle* other) {
  obj_.Swap(&other->obj_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(qingpan_, other->qingpan_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteQueueMinSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteQueueMinSingle_descriptor_;
  metadata.reflection = QuoteQueueMinSingle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteQueueMinSingle

// required string Obj = 1;
bool QuoteQueueMinSingle::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteQueueMinSingle::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteQueueMinSingle::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteQueueMinSingle::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& QuoteQueueMinSingle::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteQueueMinSingle.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteQueueMinSingle::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteQueueMinSingle.Obj)
}
 void QuoteQueueMinSingle::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QuoteQueueMinSingle.Obj)
}
 void QuoteQueueMinSingle::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QuoteQueueMinSingle.Obj)
}
 ::std::string* QuoteQueueMinSingle::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteQueueMinSingle.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QuoteQueueMinSingle::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.QuoteQueueMinSingle.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteQueueMinSingle::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QuoteQueueMinSingle.Obj)
}

// repeated .dzhyun.WeiTuoDuiLie Data = 2;
int QuoteQueueMinSingle::data_size() const {
  return data_.size();
}
void QuoteQueueMinSingle::clear_data() {
  data_.Clear();
}
const ::dzhyun::WeiTuoDuiLie& QuoteQueueMinSingle::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteQueueMinSingle.Data)
  return data_.Get(index);
}
::dzhyun::WeiTuoDuiLie* QuoteQueueMinSingle::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteQueueMinSingle.Data)
  return data_.Mutable(index);
}
::dzhyun::WeiTuoDuiLie* QuoteQueueMinSingle::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteQueueMinSingle.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::WeiTuoDuiLie >*
QuoteQueueMinSingle::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteQueueMinSingle.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::WeiTuoDuiLie >&
QuoteQueueMinSingle::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteQueueMinSingle.Data)
  return data_;
}

// optional int64 QingPan = 3;
bool QuoteQueueMinSingle::has_qingpan() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteQueueMinSingle::set_has_qingpan() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteQueueMinSingle::clear_has_qingpan() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteQueueMinSingle::clear_qingpan() {
  qingpan_ = GOOGLE_LONGLONG(0);
  clear_has_qingpan();
}
 ::google::protobuf::int64 QuoteQueueMinSingle::qingpan() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteQueueMinSingle.QingPan)
  return qingpan_;
}
 void QuoteQueueMinSingle::set_qingpan(::google::protobuf::int64 value) {
  set_has_qingpan();
  qingpan_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteQueueMinSingle.QingPan)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteBOrderMin::kShiJianFieldNumber;
const int QuoteBOrderMin::kJingMaiRuTeDaDanBiLiFieldNumber;
const int QuoteBOrderMin::kJingMaiRuDaDanBiLiFieldNumber;
const int QuoteBOrderMin::kJingMaiRuZhongDanBiLiFieldNumber;
const int QuoteBOrderMin::kJingMaiRuXiaoDanBiLiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteBOrderMin::QuoteBOrderMin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteBOrderMin)
}

void QuoteBOrderMin::InitAsDefaultInstance() {
}

QuoteBOrderMin::QuoteBOrderMin(const QuoteBOrderMin& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteBOrderMin)
}

void QuoteBOrderMin::SharedCtor() {
  _cached_size_ = 0;
  shijian_ = GOOGLE_LONGLONG(0);
  jingmairutedadanbili_ = GOOGLE_LONGLONG(0);
  jingmairudadanbili_ = GOOGLE_LONGLONG(0);
  jingmairuzhongdanbili_ = GOOGLE_LONGLONG(0);
  jingmairuxiaodanbili_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteBOrderMin::~QuoteBOrderMin() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteBOrderMin)
  SharedDtor();
}

void QuoteBOrderMin::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuoteBOrderMin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteBOrderMin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteBOrderMin_descriptor_;
}

const QuoteBOrderMin& QuoteBOrderMin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteBOrderMin* QuoteBOrderMin::default_instance_ = NULL;

QuoteBOrderMin* QuoteBOrderMin::New(::google::protobuf::Arena* arena) const {
  QuoteBOrderMin* n = new QuoteBOrderMin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteBOrderMin::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteBOrderMin)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QuoteBOrderMin, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QuoteBOrderMin*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(shijian_, jingmairuxiaodanbili_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteBOrderMin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteBOrderMin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ShiJian = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shijian_)));
          set_has_shijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_JingMaiRuTeDaDanBiLi;
        break;
      }

      // optional int64 JingMaiRuTeDaDanBiLi = 2;
      case 2: {
        if (tag == 16) {
         parse_JingMaiRuTeDaDanBiLi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jingmairutedadanbili_)));
          set_has_jingmairutedadanbili();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_JingMaiRuDaDanBiLi;
        break;
      }

      // optional int64 JingMaiRuDaDanBiLi = 3;
      case 3: {
        if (tag == 24) {
         parse_JingMaiRuDaDanBiLi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jingmairudadanbili_)));
          set_has_jingmairudadanbili();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_JingMaiRuZhongDanBiLi;
        break;
      }

      // optional int64 JingMaiRuZhongDanBiLi = 4;
      case 4: {
        if (tag == 32) {
         parse_JingMaiRuZhongDanBiLi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jingmairuzhongdanbili_)));
          set_has_jingmairuzhongdanbili();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_JingMaiRuXiaoDanBiLi;
        break;
      }

      // optional int64 JingMaiRuXiaoDanBiLi = 5;
      case 5: {
        if (tag == 40) {
         parse_JingMaiRuXiaoDanBiLi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jingmairuxiaodanbili_)));
          set_has_jingmairuxiaodanbili();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteBOrderMin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteBOrderMin)
  return false;
#undef DO_
}

void QuoteBOrderMin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteBOrderMin)
  // optional int64 ShiJian = 1;
  if (has_shijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shijian(), output);
  }

  // optional int64 JingMaiRuTeDaDanBiLi = 2;
  if (has_jingmairutedadanbili()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->jingmairutedadanbili(), output);
  }

  // optional int64 JingMaiRuDaDanBiLi = 3;
  if (has_jingmairudadanbili()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->jingmairudadanbili(), output);
  }

  // optional int64 JingMaiRuZhongDanBiLi = 4;
  if (has_jingmairuzhongdanbili()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->jingmairuzhongdanbili(), output);
  }

  // optional int64 JingMaiRuXiaoDanBiLi = 5;
  if (has_jingmairuxiaodanbili()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->jingmairuxiaodanbili(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteBOrderMin)
}

::google::protobuf::uint8* QuoteBOrderMin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteBOrderMin)
  // optional int64 ShiJian = 1;
  if (has_shijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shijian(), target);
  }

  // optional int64 JingMaiRuTeDaDanBiLi = 2;
  if (has_jingmairutedadanbili()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->jingmairutedadanbili(), target);
  }

  // optional int64 JingMaiRuDaDanBiLi = 3;
  if (has_jingmairudadanbili()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->jingmairudadanbili(), target);
  }

  // optional int64 JingMaiRuZhongDanBiLi = 4;
  if (has_jingmairuzhongdanbili()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->jingmairuzhongdanbili(), target);
  }

  // optional int64 JingMaiRuXiaoDanBiLi = 5;
  if (has_jingmairuxiaodanbili()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->jingmairuxiaodanbili(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteBOrderMin)
  return target;
}

int QuoteBOrderMin::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteBOrderMin)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional int64 ShiJian = 1;
    if (has_shijian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shijian());
    }

    // optional int64 JingMaiRuTeDaDanBiLi = 2;
    if (has_jingmairutedadanbili()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jingmairutedadanbili());
    }

    // optional int64 JingMaiRuDaDanBiLi = 3;
    if (has_jingmairudadanbili()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jingmairudadanbili());
    }

    // optional int64 JingMaiRuZhongDanBiLi = 4;
    if (has_jingmairuzhongdanbili()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jingmairuzhongdanbili());
    }

    // optional int64 JingMaiRuXiaoDanBiLi = 5;
    if (has_jingmairuxiaodanbili()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jingmairuxiaodanbili());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteBOrderMin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteBOrderMin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteBOrderMin* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteBOrderMin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteBOrderMin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteBOrderMin)
    MergeFrom(*source);
  }
}

void QuoteBOrderMin::MergeFrom(const QuoteBOrderMin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteBOrderMin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shijian()) {
      set_shijian(from.shijian());
    }
    if (from.has_jingmairutedadanbili()) {
      set_jingmairutedadanbili(from.jingmairutedadanbili());
    }
    if (from.has_jingmairudadanbili()) {
      set_jingmairudadanbili(from.jingmairudadanbili());
    }
    if (from.has_jingmairuzhongdanbili()) {
      set_jingmairuzhongdanbili(from.jingmairuzhongdanbili());
    }
    if (from.has_jingmairuxiaodanbili()) {
      set_jingmairuxiaodanbili(from.jingmairuxiaodanbili());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteBOrderMin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteBOrderMin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteBOrderMin::CopyFrom(const QuoteBOrderMin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteBOrderMin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteBOrderMin::IsInitialized() const {

  return true;
}

void QuoteBOrderMin::Swap(QuoteBOrderMin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteBOrderMin::InternalSwap(QuoteBOrderMin* other) {
  std::swap(shijian_, other->shijian_);
  std::swap(jingmairutedadanbili_, other->jingmairutedadanbili_);
  std::swap(jingmairudadanbili_, other->jingmairudadanbili_);
  std::swap(jingmairuzhongdanbili_, other->jingmairuzhongdanbili_);
  std::swap(jingmairuxiaodanbili_, other->jingmairuxiaodanbili_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteBOrderMin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteBOrderMin_descriptor_;
  metadata.reflection = QuoteBOrderMin_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteBOrderMin

// optional int64 ShiJian = 1;
bool QuoteBOrderMin::has_shijian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteBOrderMin::set_has_shijian() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteBOrderMin::clear_has_shijian() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteBOrderMin::clear_shijian() {
  shijian_ = GOOGLE_LONGLONG(0);
  clear_has_shijian();
}
 ::google::protobuf::int64 QuoteBOrderMin::shijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrderMin.ShiJian)
  return shijian_;
}
 void QuoteBOrderMin::set_shijian(::google::protobuf::int64 value) {
  set_has_shijian();
  shijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrderMin.ShiJian)
}

// optional int64 JingMaiRuTeDaDanBiLi = 2;
bool QuoteBOrderMin::has_jingmairutedadanbili() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QuoteBOrderMin::set_has_jingmairutedadanbili() {
  _has_bits_[0] |= 0x00000002u;
}
void QuoteBOrderMin::clear_has_jingmairutedadanbili() {
  _has_bits_[0] &= ~0x00000002u;
}
void QuoteBOrderMin::clear_jingmairutedadanbili() {
  jingmairutedadanbili_ = GOOGLE_LONGLONG(0);
  clear_has_jingmairutedadanbili();
}
 ::google::protobuf::int64 QuoteBOrderMin::jingmairutedadanbili() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrderMin.JingMaiRuTeDaDanBiLi)
  return jingmairutedadanbili_;
}
 void QuoteBOrderMin::set_jingmairutedadanbili(::google::protobuf::int64 value) {
  set_has_jingmairutedadanbili();
  jingmairutedadanbili_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrderMin.JingMaiRuTeDaDanBiLi)
}

// optional int64 JingMaiRuDaDanBiLi = 3;
bool QuoteBOrderMin::has_jingmairudadanbili() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteBOrderMin::set_has_jingmairudadanbili() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteBOrderMin::clear_has_jingmairudadanbili() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteBOrderMin::clear_jingmairudadanbili() {
  jingmairudadanbili_ = GOOGLE_LONGLONG(0);
  clear_has_jingmairudadanbili();
}
 ::google::protobuf::int64 QuoteBOrderMin::jingmairudadanbili() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrderMin.JingMaiRuDaDanBiLi)
  return jingmairudadanbili_;
}
 void QuoteBOrderMin::set_jingmairudadanbili(::google::protobuf::int64 value) {
  set_has_jingmairudadanbili();
  jingmairudadanbili_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrderMin.JingMaiRuDaDanBiLi)
}

// optional int64 JingMaiRuZhongDanBiLi = 4;
bool QuoteBOrderMin::has_jingmairuzhongdanbili() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QuoteBOrderMin::set_has_jingmairuzhongdanbili() {
  _has_bits_[0] |= 0x00000008u;
}
void QuoteBOrderMin::clear_has_jingmairuzhongdanbili() {
  _has_bits_[0] &= ~0x00000008u;
}
void QuoteBOrderMin::clear_jingmairuzhongdanbili() {
  jingmairuzhongdanbili_ = GOOGLE_LONGLONG(0);
  clear_has_jingmairuzhongdanbili();
}
 ::google::protobuf::int64 QuoteBOrderMin::jingmairuzhongdanbili() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrderMin.JingMaiRuZhongDanBiLi)
  return jingmairuzhongdanbili_;
}
 void QuoteBOrderMin::set_jingmairuzhongdanbili(::google::protobuf::int64 value) {
  set_has_jingmairuzhongdanbili();
  jingmairuzhongdanbili_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrderMin.JingMaiRuZhongDanBiLi)
}

// optional int64 JingMaiRuXiaoDanBiLi = 5;
bool QuoteBOrderMin::has_jingmairuxiaodanbili() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QuoteBOrderMin::set_has_jingmairuxiaodanbili() {
  _has_bits_[0] |= 0x00000010u;
}
void QuoteBOrderMin::clear_has_jingmairuxiaodanbili() {
  _has_bits_[0] &= ~0x00000010u;
}
void QuoteBOrderMin::clear_jingmairuxiaodanbili() {
  jingmairuxiaodanbili_ = GOOGLE_LONGLONG(0);
  clear_has_jingmairuxiaodanbili();
}
 ::google::protobuf::int64 QuoteBOrderMin::jingmairuxiaodanbili() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrderMin.JingMaiRuXiaoDanBiLi)
  return jingmairuxiaodanbili_;
}
 void QuoteBOrderMin::set_jingmairuxiaodanbili(::google::protobuf::int64 value) {
  set_has_jingmairuxiaodanbili();
  jingmairuxiaodanbili_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrderMin.JingMaiRuXiaoDanBiLi)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteBOrderMinSingle::kObjFieldNumber;
const int QuoteBOrderMinSingle::kDataFieldNumber;
const int QuoteBOrderMinSingle::kQingPanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteBOrderMinSingle::QuoteBOrderMinSingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteBOrderMinSingle)
}

void QuoteBOrderMinSingle::InitAsDefaultInstance() {
}

QuoteBOrderMinSingle::QuoteBOrderMinSingle(const QuoteBOrderMinSingle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteBOrderMinSingle)
}

void QuoteBOrderMinSingle::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qingpan_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteBOrderMinSingle::~QuoteBOrderMinSingle() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteBOrderMinSingle)
  SharedDtor();
}

void QuoteBOrderMinSingle::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QuoteBOrderMinSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteBOrderMinSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteBOrderMinSingle_descriptor_;
}

const QuoteBOrderMinSingle& QuoteBOrderMinSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteBOrderMinSingle* QuoteBOrderMinSingle::default_instance_ = NULL;

QuoteBOrderMinSingle* QuoteBOrderMinSingle::New(::google::protobuf::Arena* arena) const {
  QuoteBOrderMinSingle* n = new QuoteBOrderMinSingle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteBOrderMinSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteBOrderMinSingle)
  if (_has_bits_[0 / 32] & 5u) {
    if (has_obj()) {
      obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    qingpan_ = GOOGLE_LONGLONG(0);
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteBOrderMinSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteBOrderMinSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QuoteBOrderMinSingle.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .dzhyun.QuoteBOrderMin Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_QingPan;
        break;
      }

      // optional int64 QingPan = 3;
      case 3: {
        if (tag == 24) {
         parse_QingPan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &qingpan_)));
          set_has_qingpan();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteBOrderMinSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteBOrderMinSingle)
  return false;
#undef DO_
}

void QuoteBOrderMinSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteBOrderMinSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteBOrderMinSingle.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // repeated .dzhyun.QuoteBOrderMin Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // optional int64 QingPan = 3;
  if (has_qingpan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->qingpan(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteBOrderMinSingle)
}

::google::protobuf::uint8* QuoteBOrderMinSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteBOrderMinSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteBOrderMinSingle.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // repeated .dzhyun.QuoteBOrderMin Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  // optional int64 QingPan = 3;
  if (has_qingpan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->qingpan(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteBOrderMinSingle)
  return target;
}

int QuoteBOrderMinSingle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteBOrderMinSingle)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  // optional int64 QingPan = 3;
  if (has_qingpan()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->qingpan());
  }

  // repeated .dzhyun.QuoteBOrderMin Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteBOrderMinSingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteBOrderMinSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteBOrderMinSingle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteBOrderMinSingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteBOrderMinSingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteBOrderMinSingle)
    MergeFrom(*source);
  }
}

void QuoteBOrderMinSingle::MergeFrom(const QuoteBOrderMinSingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteBOrderMinSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
    if (from.has_qingpan()) {
      set_qingpan(from.qingpan());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteBOrderMinSingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteBOrderMinSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteBOrderMinSingle::CopyFrom(const QuoteBOrderMinSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteBOrderMinSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteBOrderMinSingle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void QuoteBOrderMinSingle::Swap(QuoteBOrderMinSingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteBOrderMinSingle::InternalSwap(QuoteBOrderMinSingle* other) {
  obj_.Swap(&other->obj_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(qingpan_, other->qingpan_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteBOrderMinSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteBOrderMinSingle_descriptor_;
  metadata.reflection = QuoteBOrderMinSingle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteBOrderMinSingle

// required string Obj = 1;
bool QuoteBOrderMinSingle::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteBOrderMinSingle::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteBOrderMinSingle::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteBOrderMinSingle::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& QuoteBOrderMinSingle::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrderMinSingle.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteBOrderMinSingle::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrderMinSingle.Obj)
}
 void QuoteBOrderMinSingle::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QuoteBOrderMinSingle.Obj)
}
 void QuoteBOrderMinSingle::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QuoteBOrderMinSingle.Obj)
}
 ::std::string* QuoteBOrderMinSingle::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteBOrderMinSingle.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QuoteBOrderMinSingle::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.QuoteBOrderMinSingle.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteBOrderMinSingle::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QuoteBOrderMinSingle.Obj)
}

// repeated .dzhyun.QuoteBOrderMin Data = 2;
int QuoteBOrderMinSingle::data_size() const {
  return data_.size();
}
void QuoteBOrderMinSingle::clear_data() {
  data_.Clear();
}
const ::dzhyun::QuoteBOrderMin& QuoteBOrderMinSingle::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrderMinSingle.Data)
  return data_.Get(index);
}
::dzhyun::QuoteBOrderMin* QuoteBOrderMinSingle::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteBOrderMinSingle.Data)
  return data_.Mutable(index);
}
::dzhyun::QuoteBOrderMin* QuoteBOrderMinSingle::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteBOrderMinSingle.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteBOrderMin >*
QuoteBOrderMinSingle::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteBOrderMinSingle.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::QuoteBOrderMin >&
QuoteBOrderMinSingle::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteBOrderMinSingle.Data)
  return data_;
}

// optional int64 QingPan = 3;
bool QuoteBOrderMinSingle::has_qingpan() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuoteBOrderMinSingle::set_has_qingpan() {
  _has_bits_[0] |= 0x00000004u;
}
void QuoteBOrderMinSingle::clear_has_qingpan() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuoteBOrderMinSingle::clear_qingpan() {
  qingpan_ = GOOGLE_LONGLONG(0);
  clear_has_qingpan();
}
 ::google::protobuf::int64 QuoteBOrderMinSingle::qingpan() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteBOrderMinSingle.QingPan)
  return qingpan_;
}
 void QuoteBOrderMinSingle::set_qingpan(::google::protobuf::int64 value) {
  set_has_qingpan();
  qingpan_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QuoteBOrderMinSingle.QingPan)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteHkQueueSingle::kObjFieldNumber;
const int QuoteHkQueueSingle::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteHkQueueSingle::QuoteHkQueueSingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QuoteHkQueueSingle)
}

void QuoteHkQueueSingle::InitAsDefaultInstance() {
}

QuoteHkQueueSingle::QuoteHkQueueSingle(const QuoteHkQueueSingle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QuoteHkQueueSingle)
}

void QuoteHkQueueSingle::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuoteHkQueueSingle::~QuoteHkQueueSingle() {
  // @@protoc_insertion_point(destructor:dzhyun.QuoteHkQueueSingle)
  SharedDtor();
}

void QuoteHkQueueSingle::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QuoteHkQueueSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteHkQueueSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteHkQueueSingle_descriptor_;
}

const QuoteHkQueueSingle& QuoteHkQueueSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhoutput_2eproto();
  return *default_instance_;
}

QuoteHkQueueSingle* QuoteHkQueueSingle::default_instance_ = NULL;

QuoteHkQueueSingle* QuoteHkQueueSingle::New(::google::protobuf::Arena* arena) const {
  QuoteHkQueueSingle* n = new QuoteHkQueueSingle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteHkQueueSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QuoteHkQueueSingle)
  if (has_obj()) {
    obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuoteHkQueueSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QuoteHkQueueSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QuoteHkQueueSingle.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // repeated .dzhyun.HKDynaInfo Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QuoteHkQueueSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QuoteHkQueueSingle)
  return false;
#undef DO_
}

void QuoteHkQueueSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QuoteHkQueueSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteHkQueueSingle.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // repeated .dzhyun.HKDynaInfo Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QuoteHkQueueSingle)
}

::google::protobuf::uint8* QuoteHkQueueSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QuoteHkQueueSingle)
  // required string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QuoteHkQueueSingle.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // repeated .dzhyun.HKDynaInfo Data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QuoteHkQueueSingle)
  return target;
}

int QuoteHkQueueSingle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QuoteHkQueueSingle)
  int total_size = 0;

  // required string Obj = 1;
  if (has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj());
  }
  // repeated .dzhyun.HKDynaInfo Data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteHkQueueSingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QuoteHkQueueSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteHkQueueSingle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteHkQueueSingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QuoteHkQueueSingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QuoteHkQueueSingle)
    MergeFrom(*source);
  }
}

void QuoteHkQueueSingle::MergeFrom(const QuoteHkQueueSingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QuoteHkQueueSingle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuoteHkQueueSingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QuoteHkQueueSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteHkQueueSingle::CopyFrom(const QuoteHkQueueSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QuoteHkQueueSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteHkQueueSingle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void QuoteHkQueueSingle::Swap(QuoteHkQueueSingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteHkQueueSingle::InternalSwap(QuoteHkQueueSingle* other) {
  obj_.Swap(&other->obj_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteHkQueueSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteHkQueueSingle_descriptor_;
  metadata.reflection = QuoteHkQueueSingle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteHkQueueSingle

// required string Obj = 1;
bool QuoteHkQueueSingle::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuoteHkQueueSingle::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void QuoteHkQueueSingle::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuoteHkQueueSingle::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& QuoteHkQueueSingle::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteHkQueueSingle.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteHkQueueSingle::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QuoteHkQueueSingle.Obj)
}
 void QuoteHkQueueSingle::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QuoteHkQueueSingle.Obj)
}
 void QuoteHkQueueSingle::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QuoteHkQueueSingle.Obj)
}
 ::std::string* QuoteHkQueueSingle::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteHkQueueSingle.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QuoteHkQueueSingle::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.QuoteHkQueueSingle.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QuoteHkQueueSingle::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QuoteHkQueueSingle.Obj)
}

// repeated .dzhyun.HKDynaInfo Data = 2;
int QuoteHkQueueSingle::data_size() const {
  return data_.size();
}
void QuoteHkQueueSingle::clear_data() {
  data_.Clear();
}
const ::dzhyun::HKDynaInfo& QuoteHkQueueSingle::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QuoteHkQueueSingle.Data)
  return data_.Get(index);
}
::dzhyun::HKDynaInfo* QuoteHkQueueSingle::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QuoteHkQueueSingle.Data)
  return data_.Mutable(index);
}
::dzhyun::HKDynaInfo* QuoteHkQueueSingle::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.QuoteHkQueueSingle.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::HKDynaInfo >*
QuoteHkQueueSingle::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QuoteHkQueueSingle.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::HKDynaInfo >&
QuoteHkQueueSingle::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.QuoteHkQueueSingle.Data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dzhyun

// @@protoc_insertion_point(global_scope)
