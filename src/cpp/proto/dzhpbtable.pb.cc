// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dzhpbtable.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dzhpbtable.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dzhyun {

namespace {

const ::google::protobuf::Descriptor* CInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CArray_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CArray_reflection_ = NULL;
const ::google::protobuf::Descriptor* CData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CData_reflection_ = NULL;
const ::google::protobuf::Descriptor* CDataX_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CDataX_reflection_ = NULL;
const ::google::protobuf::Descriptor* Table_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Table_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* InfoType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_dzhpbtable_2eproto() {
  protobuf_AddDesc_dzhpbtable_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dzhpbtable.proto");
  GOOGLE_CHECK(file != NULL);
  CInfo_descriptor_ = file->message_type(0);
  static const int CInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CInfo, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CInfo, ratio_),
  };
  CInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CInfo_descriptor_,
      CInfo::default_instance_,
      CInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(CInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CInfo, _internal_metadata_),
      -1);
  CArray_descriptor_ = file->message_type(1);
  static const int CArray_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CArray, ivalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CArray, fvalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CArray, dvalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CArray, svalues_),
  };
  CArray_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CArray_descriptor_,
      CArray::default_instance_,
      CArray_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CArray, _has_bits_[0]),
      -1,
      -1,
      sizeof(CArray),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CArray, _internal_metadata_),
      -1);
  CData_descriptor_ = file->message_type(2);
  static const int CData_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CData, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CData, ivalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CData, fvalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CData, dvalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CData, svalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CData, bvalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CData, tvalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CData, avalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CData, xvalues_),
  };
  CData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CData_descriptor_,
      CData::default_instance_,
      CData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CData, _has_bits_[0]),
      -1,
      -1,
      sizeof(CData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CData, _internal_metadata_),
      -1);
  CDataX_descriptor_ = file->message_type(3);
  static const int CDataX_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDataX, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDataX, ivalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDataX, fvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDataX, dvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDataX, svalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDataX, bvalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDataX, tvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDataX, avalues_),
  };
  CDataX_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CDataX_descriptor_,
      CDataX::default_instance_,
      CDataX_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDataX, _has_bits_[0]),
      -1,
      -1,
      sizeof(CDataX),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDataX, _internal_metadata_),
      -1);
  Table_descriptor_ = file->message_type(4);
  static const int Table_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, tiid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, datax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, memo_),
  };
  Table_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Table_descriptor_,
      Table::default_instance_,
      Table_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, _has_bits_[0]),
      -1,
      -1,
      sizeof(Table),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, _internal_metadata_),
      -1);
  InfoType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dzhpbtable_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CInfo_descriptor_, &CInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CArray_descriptor_, &CArray::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CData_descriptor_, &CData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CDataX_descriptor_, &CDataX::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Table_descriptor_, &Table::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dzhpbtable_2eproto() {
  delete CInfo::default_instance_;
  delete CInfo_reflection_;
  delete CArray::default_instance_;
  delete CArray_reflection_;
  delete CData::default_instance_;
  delete CData_reflection_;
  delete CDataX::default_instance_;
  delete CDataX_reflection_;
  delete Table::default_instance_;
  delete Table_reflection_;
}

void protobuf_AddDesc_dzhpbtable_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020dzhpbtable.proto\022\006dzhyun\"2\n\005CInfo\022\014\n\004N"
    "ame\030\001 \001(\t\022\014\n\004Type\030\002 \001(\005\022\r\n\005Ratio\030\003 \001(\005\"X"
    "\n\006CArray\022\023\n\007iValues\030\001 \003(\003B\002\020\001\022\023\n\007fValues"
    "\030\002 \003(\002B\002\020\001\022\023\n\007dValues\030\003 \003(\001B\002\020\001\022\017\n\007sValu"
    "es\030\004 \003(\t\"\315\001\n\005CData\022\r\n\005Index\030\001 \002(\005\022\023\n\007iVa"
    "lues\030\002 \003(\003B\002\020\001\022\023\n\007fValues\030\003 \003(\002B\002\020\001\022\023\n\007d"
    "Values\030\004 \003(\001B\002\020\001\022\017\n\007sValues\030\005 \003(\t\022\017\n\007bVa"
    "lues\030\006 \003(\014\022\036\n\007tValues\030\007 \003(\0132\r.dzhyun.Tab"
    "le\022\037\n\007aValues\030\010 \003(\0132\016.dzhyun.CArray\022\023\n\007x"
    "Values\030\t \003(\022B\002\020\001\"\250\001\n\006CDataX\022\r\n\005Index\030\001 \002"
    "(\005\022\016\n\006iValue\030\002 \001(\003\022\016\n\006fValue\030\003 \001(\002\022\016\n\006dV"
    "alue\030\004 \001(\001\022\016\n\006sValue\030\005 \001(\t\022\017\n\007bValues\030\006 "
    "\001(\014\022\035\n\006tValue\030\007 \001(\0132\r.dzhyun.Table\022\037\n\007aV"
    "alues\030\010 \001(\0132\016.dzhyun.CArray\"\212\001\n\005Table\022\014\n"
    "\004Tiid\030\001 \001(\005\022\033\n\004Info\030\002 \003(\0132\r.dzhyun.CInfo"
    "\022\033\n\004Data\030\003 \003(\0132\r.dzhyun.CData\022\035\n\005DataX\030\004"
    " \003(\0132\016.dzhyun.CDataX\022\014\n\004Name\030\005 \001(\t\022\014\n\004Me"
    "mo\030\006 \001(\t*\211\002\n\010InfoType\022\017\n\013Type_Unknow\020\000\022\014"
    "\n\010Type_Int\020i\022\r\n\tType_SInt\020x\022\016\n\nType_Floa"
    "t\020f\022\017\n\013Type_Double\020d\022\017\n\013Type_String\020s\022\017\n"
    "\013Type_Binary\020b\022\016\n\nType_Table\020t\022\017\n\nType_A"
    "rray\020\200\001\022\022\n\rType_ArrayInt\020\351\001\022\023\n\016Type_Arra"
    "ySInt\020\370\001\022\024\n\017Type_ArrayFloat\020\346\001\022\025\n\020Type_A"
    "rrayDouble\020\344\001\022\025\n\020Type_ArrayString\020\363\001B\022\n\020"
    "com.dzhyun.proto", 976);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dzhpbtable.proto", &protobuf_RegisterTypes);
  CInfo::default_instance_ = new CInfo();
  CArray::default_instance_ = new CArray();
  CData::default_instance_ = new CData();
  CDataX::default_instance_ = new CDataX();
  Table::default_instance_ = new Table();
  CInfo::default_instance_->InitAsDefaultInstance();
  CArray::default_instance_->InitAsDefaultInstance();
  CData::default_instance_->InitAsDefaultInstance();
  CDataX::default_instance_->InitAsDefaultInstance();
  Table::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dzhpbtable_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dzhpbtable_2eproto {
  StaticDescriptorInitializer_dzhpbtable_2eproto() {
    protobuf_AddDesc_dzhpbtable_2eproto();
  }
} static_descriptor_initializer_dzhpbtable_2eproto_;
const ::google::protobuf::EnumDescriptor* InfoType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfoType_descriptor_;
}
bool InfoType_IsValid(int value) {
  switch(value) {
    case 0:
    case 98:
    case 100:
    case 102:
    case 105:
    case 115:
    case 116:
    case 120:
    case 128:
    case 228:
    case 230:
    case 233:
    case 243:
    case 248:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CInfo::kNameFieldNumber;
const int CInfo::kTypeFieldNumber;
const int CInfo::kRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CInfo::CInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.CInfo)
}

void CInfo::InitAsDefaultInstance() {
}

CInfo::CInfo(const CInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.CInfo)
}

void CInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  ratio_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CInfo::~CInfo() {
  // @@protoc_insertion_point(destructor:dzhyun.CInfo)
  SharedDtor();
}

void CInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CInfo_descriptor_;
}

const CInfo& CInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhpbtable_2eproto();
  return *default_instance_;
}

CInfo* CInfo::default_instance_ = NULL;

CInfo* CInfo::New(::google::protobuf::Arena* arena) const {
  CInfo* n = new CInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.CInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(type_, ratio_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.CInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.CInfo.Name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Type;
        break;
      }

      // optional int32 Type = 2;
      case 2: {
        if (tag == 16) {
         parse_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Ratio;
        break;
      }

      // optional int32 Ratio = 3;
      case 3: {
        if (tag == 24) {
         parse_Ratio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ratio_)));
          set_has_ratio();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.CInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.CInfo)
  return false;
#undef DO_
}

void CInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.CInfo)
  // optional string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.CInfo.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 Type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional int32 Ratio = 3;
  if (has_ratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ratio(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.CInfo)
}

::google::protobuf::uint8* CInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.CInfo)
  // optional string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.CInfo.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 Type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional int32 Ratio = 3;
  if (has_ratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ratio(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.CInfo)
  return target;
}

int CInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.CInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional string Name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 Type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 Ratio = 3;
    if (has_ratio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ratio());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.CInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.CInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.CInfo)
    MergeFrom(*source);
  }
}

void CInfo::MergeFrom(const CInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.CInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_ratio()) {
      set_ratio(from.ratio());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.CInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CInfo::CopyFrom(const CInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.CInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CInfo::IsInitialized() const {

  return true;
}

void CInfo::Swap(CInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CInfo::InternalSwap(CInfo* other) {
  name_.Swap(&other->name_);
  std::swap(type_, other->type_);
  std::swap(ratio_, other->ratio_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CInfo_descriptor_;
  metadata.reflection = CInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CInfo

// optional string Name = 1;
bool CInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CInfo::name() const {
  // @@protoc_insertion_point(field_get:dzhyun.CInfo.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.CInfo.Name)
}
 void CInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.CInfo.Name)
}
 void CInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.CInfo.Name)
}
 ::std::string* CInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:dzhyun.CInfo.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CInfo::release_name() {
  // @@protoc_insertion_point(field_release:dzhyun.CInfo.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.CInfo.Name)
}

// optional int32 Type = 2;
bool CInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::google::protobuf::int32 CInfo::type() const {
  // @@protoc_insertion_point(field_get:dzhyun.CInfo.Type)
  return type_;
}
 void CInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.CInfo.Type)
}

// optional int32 Ratio = 3;
bool CInfo::has_ratio() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CInfo::set_has_ratio() {
  _has_bits_[0] |= 0x00000004u;
}
void CInfo::clear_has_ratio() {
  _has_bits_[0] &= ~0x00000004u;
}
void CInfo::clear_ratio() {
  ratio_ = 0;
  clear_has_ratio();
}
 ::google::protobuf::int32 CInfo::ratio() const {
  // @@protoc_insertion_point(field_get:dzhyun.CInfo.Ratio)
  return ratio_;
}
 void CInfo::set_ratio(::google::protobuf::int32 value) {
  set_has_ratio();
  ratio_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.CInfo.Ratio)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CArray::kIValuesFieldNumber;
const int CArray::kFValuesFieldNumber;
const int CArray::kDValuesFieldNumber;
const int CArray::kSValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CArray::CArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.CArray)
}

void CArray::InitAsDefaultInstance() {
}

CArray::CArray(const CArray& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.CArray)
}

void CArray::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CArray::~CArray() {
  // @@protoc_insertion_point(destructor:dzhyun.CArray)
  SharedDtor();
}

void CArray::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CArray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CArray::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CArray_descriptor_;
}

const CArray& CArray::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhpbtable_2eproto();
  return *default_instance_;
}

CArray* CArray::default_instance_ = NULL;

CArray* CArray::New(::google::protobuf::Arena* arena) const {
  CArray* n = new CArray;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CArray::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.CArray)
  ivalues_.Clear();
  fvalues_.Clear();
  dvalues_.Clear();
  svalues_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.CArray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 iValues = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ivalues())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10, input, this->mutable_ivalues())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_fValues;
        break;
      }

      // repeated float fValues = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_fValues:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_fvalues())));
        } else if (tag == 21) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18, input, this->mutable_fvalues())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dValues;
        break;
      }

      // repeated double dValues = 3 [packed = true];
      case 3: {
        if (tag == 26) {
         parse_dValues:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_dvalues())));
        } else if (tag == 25) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 26, input, this->mutable_dvalues())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sValues;
        break;
      }

      // repeated string sValues = 4;
      case 4: {
        if (tag == 34) {
         parse_sValues:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_svalues()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->svalues(this->svalues_size() - 1).data(),
            this->svalues(this->svalues_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.CArray.sValues");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sValues;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.CArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.CArray)
  return false;
#undef DO_
}

void CArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.CArray)
  // repeated int64 iValues = 1 [packed = true];
  if (this->ivalues_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_ivalues_cached_byte_size_);
  }
  for (int i = 0; i < this->ivalues_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->ivalues(i), output);
  }

  // repeated float fValues = 2 [packed = true];
  if (this->fvalues_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_fvalues_cached_byte_size_);
  }
  for (int i = 0; i < this->fvalues_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->fvalues(i), output);
  }

  // repeated double dValues = 3 [packed = true];
  if (this->dvalues_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_dvalues_cached_byte_size_);
  }
  for (int i = 0; i < this->dvalues_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->dvalues(i), output);
  }

  // repeated string sValues = 4;
  for (int i = 0; i < this->svalues_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->svalues(i).data(), this->svalues(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.CArray.sValues");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->svalues(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.CArray)
}

::google::protobuf::uint8* CArray::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.CArray)
  // repeated int64 iValues = 1 [packed = true];
  if (this->ivalues_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _ivalues_cached_byte_size_, target);
  }
  for (int i = 0; i < this->ivalues_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->ivalues(i), target);
  }

  // repeated float fValues = 2 [packed = true];
  if (this->fvalues_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _fvalues_cached_byte_size_, target);
  }
  for (int i = 0; i < this->fvalues_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->fvalues(i), target);
  }

  // repeated double dValues = 3 [packed = true];
  if (this->dvalues_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _dvalues_cached_byte_size_, target);
  }
  for (int i = 0; i < this->dvalues_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->dvalues(i), target);
  }

  // repeated string sValues = 4;
  for (int i = 0; i < this->svalues_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->svalues(i).data(), this->svalues(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.CArray.sValues");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->svalues(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.CArray)
  return target;
}

int CArray::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.CArray)
  int total_size = 0;

  // repeated int64 iValues = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->ivalues_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->ivalues(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ivalues_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float fValues = 2 [packed = true];
  {
    int data_size = 0;
    data_size = 4 * this->fvalues_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fvalues_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double dValues = 3 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->dvalues_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dvalues_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string sValues = 4;
  total_size += 1 * this->svalues_size();
  for (int i = 0; i < this->svalues_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->svalues(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.CArray)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CArray* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.CArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.CArray)
    MergeFrom(*source);
  }
}

void CArray::MergeFrom(const CArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.CArray)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  ivalues_.MergeFrom(from.ivalues_);
  fvalues_.MergeFrom(from.fvalues_);
  dvalues_.MergeFrom(from.dvalues_);
  svalues_.MergeFrom(from.svalues_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.CArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CArray::CopyFrom(const CArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.CArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CArray::IsInitialized() const {

  return true;
}

void CArray::Swap(CArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CArray::InternalSwap(CArray* other) {
  ivalues_.UnsafeArenaSwap(&other->ivalues_);
  fvalues_.UnsafeArenaSwap(&other->fvalues_);
  dvalues_.UnsafeArenaSwap(&other->dvalues_);
  svalues_.UnsafeArenaSwap(&other->svalues_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CArray::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CArray_descriptor_;
  metadata.reflection = CArray_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CArray

// repeated int64 iValues = 1 [packed = true];
int CArray::ivalues_size() const {
  return ivalues_.size();
}
void CArray::clear_ivalues() {
  ivalues_.Clear();
}
 ::google::protobuf::int64 CArray::ivalues(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.CArray.iValues)
  return ivalues_.Get(index);
}
 void CArray::set_ivalues(int index, ::google::protobuf::int64 value) {
  ivalues_.Set(index, value);
  // @@protoc_insertion_point(field_set:dzhyun.CArray.iValues)
}
 void CArray::add_ivalues(::google::protobuf::int64 value) {
  ivalues_.Add(value);
  // @@protoc_insertion_point(field_add:dzhyun.CArray.iValues)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
CArray::ivalues() const {
  // @@protoc_insertion_point(field_list:dzhyun.CArray.iValues)
  return ivalues_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
CArray::mutable_ivalues() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.CArray.iValues)
  return &ivalues_;
}

// repeated float fValues = 2 [packed = true];
int CArray::fvalues_size() const {
  return fvalues_.size();
}
void CArray::clear_fvalues() {
  fvalues_.Clear();
}
 float CArray::fvalues(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.CArray.fValues)
  return fvalues_.Get(index);
}
 void CArray::set_fvalues(int index, float value) {
  fvalues_.Set(index, value);
  // @@protoc_insertion_point(field_set:dzhyun.CArray.fValues)
}
 void CArray::add_fvalues(float value) {
  fvalues_.Add(value);
  // @@protoc_insertion_point(field_add:dzhyun.CArray.fValues)
}
 const ::google::protobuf::RepeatedField< float >&
CArray::fvalues() const {
  // @@protoc_insertion_point(field_list:dzhyun.CArray.fValues)
  return fvalues_;
}
 ::google::protobuf::RepeatedField< float >*
CArray::mutable_fvalues() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.CArray.fValues)
  return &fvalues_;
}

// repeated double dValues = 3 [packed = true];
int CArray::dvalues_size() const {
  return dvalues_.size();
}
void CArray::clear_dvalues() {
  dvalues_.Clear();
}
 double CArray::dvalues(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.CArray.dValues)
  return dvalues_.Get(index);
}
 void CArray::set_dvalues(int index, double value) {
  dvalues_.Set(index, value);
  // @@protoc_insertion_point(field_set:dzhyun.CArray.dValues)
}
 void CArray::add_dvalues(double value) {
  dvalues_.Add(value);
  // @@protoc_insertion_point(field_add:dzhyun.CArray.dValues)
}
 const ::google::protobuf::RepeatedField< double >&
CArray::dvalues() const {
  // @@protoc_insertion_point(field_list:dzhyun.CArray.dValues)
  return dvalues_;
}
 ::google::protobuf::RepeatedField< double >*
CArray::mutable_dvalues() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.CArray.dValues)
  return &dvalues_;
}

// repeated string sValues = 4;
int CArray::svalues_size() const {
  return svalues_.size();
}
void CArray::clear_svalues() {
  svalues_.Clear();
}
 const ::std::string& CArray::svalues(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.CArray.sValues)
  return svalues_.Get(index);
}
 ::std::string* CArray::mutable_svalues(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.CArray.sValues)
  return svalues_.Mutable(index);
}
 void CArray::set_svalues(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dzhyun.CArray.sValues)
  svalues_.Mutable(index)->assign(value);
}
 void CArray::set_svalues(int index, const char* value) {
  svalues_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dzhyun.CArray.sValues)
}
 void CArray::set_svalues(int index, const char* value, size_t size) {
  svalues_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dzhyun.CArray.sValues)
}
 ::std::string* CArray::add_svalues() {
  // @@protoc_insertion_point(field_add_mutable:dzhyun.CArray.sValues)
  return svalues_.Add();
}
 void CArray::add_svalues(const ::std::string& value) {
  svalues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dzhyun.CArray.sValues)
}
 void CArray::add_svalues(const char* value) {
  svalues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dzhyun.CArray.sValues)
}
 void CArray::add_svalues(const char* value, size_t size) {
  svalues_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dzhyun.CArray.sValues)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CArray::svalues() const {
  // @@protoc_insertion_point(field_list:dzhyun.CArray.sValues)
  return svalues_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CArray::mutable_svalues() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.CArray.sValues)
  return &svalues_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CData::kIndexFieldNumber;
const int CData::kIValuesFieldNumber;
const int CData::kFValuesFieldNumber;
const int CData::kDValuesFieldNumber;
const int CData::kSValuesFieldNumber;
const int CData::kBValuesFieldNumber;
const int CData::kTValuesFieldNumber;
const int CData::kAValuesFieldNumber;
const int CData::kXValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CData::CData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.CData)
}

void CData::InitAsDefaultInstance() {
}

CData::CData(const CData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.CData)
}

void CData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CData::~CData() {
  // @@protoc_insertion_point(destructor:dzhyun.CData)
  SharedDtor();
}

void CData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CData_descriptor_;
}

const CData& CData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhpbtable_2eproto();
  return *default_instance_;
}

CData* CData::default_instance_ = NULL;

CData* CData::New(::google::protobuf::Arena* arena) const {
  CData* n = new CData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CData::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.CData)
  index_ = 0;
  ivalues_.Clear();
  fvalues_.Clear();
  dvalues_.Clear();
  svalues_.Clear();
  bvalues_.Clear();
  tvalues_.Clear();
  avalues_.Clear();
  xvalues_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.CData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_iValues;
        break;
      }

      // repeated int64 iValues = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_iValues:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ivalues())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18, input, this->mutable_ivalues())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fValues;
        break;
      }

      // repeated float fValues = 3 [packed = true];
      case 3: {
        if (tag == 26) {
         parse_fValues:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_fvalues())));
        } else if (tag == 29) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26, input, this->mutable_fvalues())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_dValues;
        break;
      }

      // repeated double dValues = 4 [packed = true];
      case 4: {
        if (tag == 34) {
         parse_dValues:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_dvalues())));
        } else if (tag == 33) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 34, input, this->mutable_dvalues())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sValues;
        break;
      }

      // repeated string sValues = 5;
      case 5: {
        if (tag == 42) {
         parse_sValues:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_svalues()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->svalues(this->svalues_size() - 1).data(),
            this->svalues(this->svalues_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.CData.sValues");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sValues;
        if (input->ExpectTag(50)) goto parse_bValues;
        break;
      }

      // repeated bytes bValues = 6;
      case 6: {
        if (tag == 50) {
         parse_bValues:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_bvalues()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_bValues;
        if (input->ExpectTag(58)) goto parse_tValues;
        break;
      }

      // repeated .dzhyun.Table tValues = 7;
      case 7: {
        if (tag == 58) {
         parse_tValues:
          DO_(input->IncrementRecursionDepth());
         parse_loop_tValues:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tvalues()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_tValues;
        if (input->ExpectTag(66)) goto parse_loop_aValues;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .dzhyun.CArray aValues = 8;
      case 8: {
        if (tag == 66) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_aValues:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_avalues()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_aValues;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(74)) goto parse_xValues;
        break;
      }

      // repeated sint64 xValues = 9 [packed = true];
      case 9: {
        if (tag == 74) {
         parse_xValues:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_xvalues())));
        } else if (tag == 72) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 74, input, this->mutable_xvalues())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.CData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.CData)
  return false;
#undef DO_
}

void CData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.CData)
  // required int32 Index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // repeated int64 iValues = 2 [packed = true];
  if (this->ivalues_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_ivalues_cached_byte_size_);
  }
  for (int i = 0; i < this->ivalues_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->ivalues(i), output);
  }

  // repeated float fValues = 3 [packed = true];
  if (this->fvalues_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_fvalues_cached_byte_size_);
  }
  for (int i = 0; i < this->fvalues_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->fvalues(i), output);
  }

  // repeated double dValues = 4 [packed = true];
  if (this->dvalues_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_dvalues_cached_byte_size_);
  }
  for (int i = 0; i < this->dvalues_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->dvalues(i), output);
  }

  // repeated string sValues = 5;
  for (int i = 0; i < this->svalues_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->svalues(i).data(), this->svalues(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.CData.sValues");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->svalues(i), output);
  }

  // repeated bytes bValues = 6;
  for (int i = 0; i < this->bvalues_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      6, this->bvalues(i), output);
  }

  // repeated .dzhyun.Table tValues = 7;
  for (unsigned int i = 0, n = this->tvalues_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->tvalues(i), output);
  }

  // repeated .dzhyun.CArray aValues = 8;
  for (unsigned int i = 0, n = this->avalues_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->avalues(i), output);
  }

  // repeated sint64 xValues = 9 [packed = true];
  if (this->xvalues_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_xvalues_cached_byte_size_);
  }
  for (int i = 0; i < this->xvalues_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->xvalues(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.CData)
}

::google::protobuf::uint8* CData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.CData)
  // required int32 Index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // repeated int64 iValues = 2 [packed = true];
  if (this->ivalues_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _ivalues_cached_byte_size_, target);
  }
  for (int i = 0; i < this->ivalues_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->ivalues(i), target);
  }

  // repeated float fValues = 3 [packed = true];
  if (this->fvalues_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _fvalues_cached_byte_size_, target);
  }
  for (int i = 0; i < this->fvalues_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->fvalues(i), target);
  }

  // repeated double dValues = 4 [packed = true];
  if (this->dvalues_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _dvalues_cached_byte_size_, target);
  }
  for (int i = 0; i < this->dvalues_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->dvalues(i), target);
  }

  // repeated string sValues = 5;
  for (int i = 0; i < this->svalues_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->svalues(i).data(), this->svalues(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.CData.sValues");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->svalues(i), target);
  }

  // repeated bytes bValues = 6;
  for (int i = 0; i < this->bvalues_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(6, this->bvalues(i), target);
  }

  // repeated .dzhyun.Table tValues = 7;
  for (unsigned int i = 0, n = this->tvalues_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->tvalues(i), target);
  }

  // repeated .dzhyun.CArray aValues = 8;
  for (unsigned int i = 0, n = this->avalues_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->avalues(i), target);
  }

  // repeated sint64 xValues = 9 [packed = true];
  if (this->xvalues_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _xvalues_cached_byte_size_, target);
  }
  for (int i = 0; i < this->xvalues_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->xvalues(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.CData)
  return target;
}

int CData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.CData)
  int total_size = 0;

  // required int32 Index = 1;
  if (has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }
  // repeated int64 iValues = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->ivalues_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->ivalues(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ivalues_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float fValues = 3 [packed = true];
  {
    int data_size = 0;
    data_size = 4 * this->fvalues_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fvalues_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double dValues = 4 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->dvalues_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dvalues_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string sValues = 5;
  total_size += 1 * this->svalues_size();
  for (int i = 0; i < this->svalues_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->svalues(i));
  }

  // repeated bytes bValues = 6;
  total_size += 1 * this->bvalues_size();
  for (int i = 0; i < this->bvalues_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->bvalues(i));
  }

  // repeated .dzhyun.Table tValues = 7;
  total_size += 1 * this->tvalues_size();
  for (int i = 0; i < this->tvalues_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tvalues(i));
  }

  // repeated .dzhyun.CArray aValues = 8;
  total_size += 1 * this->avalues_size();
  for (int i = 0; i < this->avalues_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->avalues(i));
  }

  // repeated sint64 xValues = 9 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->xvalues_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->xvalues(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _xvalues_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.CData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.CData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.CData)
    MergeFrom(*source);
  }
}

void CData::MergeFrom(const CData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.CData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  ivalues_.MergeFrom(from.ivalues_);
  fvalues_.MergeFrom(from.fvalues_);
  dvalues_.MergeFrom(from.dvalues_);
  svalues_.MergeFrom(from.svalues_);
  bvalues_.MergeFrom(from.bvalues_);
  tvalues_.MergeFrom(from.tvalues_);
  avalues_.MergeFrom(from.avalues_);
  xvalues_.MergeFrom(from.xvalues_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.CData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CData::CopyFrom(const CData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.CData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->tvalues())) return false;
  return true;
}

void CData::Swap(CData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CData::InternalSwap(CData* other) {
  std::swap(index_, other->index_);
  ivalues_.UnsafeArenaSwap(&other->ivalues_);
  fvalues_.UnsafeArenaSwap(&other->fvalues_);
  dvalues_.UnsafeArenaSwap(&other->dvalues_);
  svalues_.UnsafeArenaSwap(&other->svalues_);
  bvalues_.UnsafeArenaSwap(&other->bvalues_);
  tvalues_.UnsafeArenaSwap(&other->tvalues_);
  avalues_.UnsafeArenaSwap(&other->avalues_);
  xvalues_.UnsafeArenaSwap(&other->xvalues_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CData_descriptor_;
  metadata.reflection = CData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CData

// required int32 Index = 1;
bool CData::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CData::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
void CData::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void CData::clear_index() {
  index_ = 0;
  clear_has_index();
}
 ::google::protobuf::int32 CData::index() const {
  // @@protoc_insertion_point(field_get:dzhyun.CData.Index)
  return index_;
}
 void CData::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.CData.Index)
}

// repeated int64 iValues = 2 [packed = true];
int CData::ivalues_size() const {
  return ivalues_.size();
}
void CData::clear_ivalues() {
  ivalues_.Clear();
}
 ::google::protobuf::int64 CData::ivalues(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.CData.iValues)
  return ivalues_.Get(index);
}
 void CData::set_ivalues(int index, ::google::protobuf::int64 value) {
  ivalues_.Set(index, value);
  // @@protoc_insertion_point(field_set:dzhyun.CData.iValues)
}
 void CData::add_ivalues(::google::protobuf::int64 value) {
  ivalues_.Add(value);
  // @@protoc_insertion_point(field_add:dzhyun.CData.iValues)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
CData::ivalues() const {
  // @@protoc_insertion_point(field_list:dzhyun.CData.iValues)
  return ivalues_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
CData::mutable_ivalues() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.CData.iValues)
  return &ivalues_;
}

// repeated float fValues = 3 [packed = true];
int CData::fvalues_size() const {
  return fvalues_.size();
}
void CData::clear_fvalues() {
  fvalues_.Clear();
}
 float CData::fvalues(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.CData.fValues)
  return fvalues_.Get(index);
}
 void CData::set_fvalues(int index, float value) {
  fvalues_.Set(index, value);
  // @@protoc_insertion_point(field_set:dzhyun.CData.fValues)
}
 void CData::add_fvalues(float value) {
  fvalues_.Add(value);
  // @@protoc_insertion_point(field_add:dzhyun.CData.fValues)
}
 const ::google::protobuf::RepeatedField< float >&
CData::fvalues() const {
  // @@protoc_insertion_point(field_list:dzhyun.CData.fValues)
  return fvalues_;
}
 ::google::protobuf::RepeatedField< float >*
CData::mutable_fvalues() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.CData.fValues)
  return &fvalues_;
}

// repeated double dValues = 4 [packed = true];
int CData::dvalues_size() const {
  return dvalues_.size();
}
void CData::clear_dvalues() {
  dvalues_.Clear();
}
 double CData::dvalues(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.CData.dValues)
  return dvalues_.Get(index);
}
 void CData::set_dvalues(int index, double value) {
  dvalues_.Set(index, value);
  // @@protoc_insertion_point(field_set:dzhyun.CData.dValues)
}
 void CData::add_dvalues(double value) {
  dvalues_.Add(value);
  // @@protoc_insertion_point(field_add:dzhyun.CData.dValues)
}
 const ::google::protobuf::RepeatedField< double >&
CData::dvalues() const {
  // @@protoc_insertion_point(field_list:dzhyun.CData.dValues)
  return dvalues_;
}
 ::google::protobuf::RepeatedField< double >*
CData::mutable_dvalues() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.CData.dValues)
  return &dvalues_;
}

// repeated string sValues = 5;
int CData::svalues_size() const {
  return svalues_.size();
}
void CData::clear_svalues() {
  svalues_.Clear();
}
 const ::std::string& CData::svalues(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.CData.sValues)
  return svalues_.Get(index);
}
 ::std::string* CData::mutable_svalues(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.CData.sValues)
  return svalues_.Mutable(index);
}
 void CData::set_svalues(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dzhyun.CData.sValues)
  svalues_.Mutable(index)->assign(value);
}
 void CData::set_svalues(int index, const char* value) {
  svalues_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dzhyun.CData.sValues)
}
 void CData::set_svalues(int index, const char* value, size_t size) {
  svalues_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dzhyun.CData.sValues)
}
 ::std::string* CData::add_svalues() {
  // @@protoc_insertion_point(field_add_mutable:dzhyun.CData.sValues)
  return svalues_.Add();
}
 void CData::add_svalues(const ::std::string& value) {
  svalues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dzhyun.CData.sValues)
}
 void CData::add_svalues(const char* value) {
  svalues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dzhyun.CData.sValues)
}
 void CData::add_svalues(const char* value, size_t size) {
  svalues_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dzhyun.CData.sValues)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CData::svalues() const {
  // @@protoc_insertion_point(field_list:dzhyun.CData.sValues)
  return svalues_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CData::mutable_svalues() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.CData.sValues)
  return &svalues_;
}

// repeated bytes bValues = 6;
int CData::bvalues_size() const {
  return bvalues_.size();
}
void CData::clear_bvalues() {
  bvalues_.Clear();
}
 const ::std::string& CData::bvalues(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.CData.bValues)
  return bvalues_.Get(index);
}
 ::std::string* CData::mutable_bvalues(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.CData.bValues)
  return bvalues_.Mutable(index);
}
 void CData::set_bvalues(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dzhyun.CData.bValues)
  bvalues_.Mutable(index)->assign(value);
}
 void CData::set_bvalues(int index, const char* value) {
  bvalues_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dzhyun.CData.bValues)
}
 void CData::set_bvalues(int index, const void* value, size_t size) {
  bvalues_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dzhyun.CData.bValues)
}
 ::std::string* CData::add_bvalues() {
  // @@protoc_insertion_point(field_add_mutable:dzhyun.CData.bValues)
  return bvalues_.Add();
}
 void CData::add_bvalues(const ::std::string& value) {
  bvalues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dzhyun.CData.bValues)
}
 void CData::add_bvalues(const char* value) {
  bvalues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dzhyun.CData.bValues)
}
 void CData::add_bvalues(const void* value, size_t size) {
  bvalues_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dzhyun.CData.bValues)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CData::bvalues() const {
  // @@protoc_insertion_point(field_list:dzhyun.CData.bValues)
  return bvalues_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CData::mutable_bvalues() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.CData.bValues)
  return &bvalues_;
}

// repeated .dzhyun.Table tValues = 7;
int CData::tvalues_size() const {
  return tvalues_.size();
}
void CData::clear_tvalues() {
  tvalues_.Clear();
}
const ::dzhyun::Table& CData::tvalues(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.CData.tValues)
  return tvalues_.Get(index);
}
::dzhyun::Table* CData::mutable_tvalues(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.CData.tValues)
  return tvalues_.Mutable(index);
}
::dzhyun::Table* CData::add_tvalues() {
  // @@protoc_insertion_point(field_add:dzhyun.CData.tValues)
  return tvalues_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::Table >*
CData::mutable_tvalues() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.CData.tValues)
  return &tvalues_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::Table >&
CData::tvalues() const {
  // @@protoc_insertion_point(field_list:dzhyun.CData.tValues)
  return tvalues_;
}

// repeated .dzhyun.CArray aValues = 8;
int CData::avalues_size() const {
  return avalues_.size();
}
void CData::clear_avalues() {
  avalues_.Clear();
}
const ::dzhyun::CArray& CData::avalues(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.CData.aValues)
  return avalues_.Get(index);
}
::dzhyun::CArray* CData::mutable_avalues(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.CData.aValues)
  return avalues_.Mutable(index);
}
::dzhyun::CArray* CData::add_avalues() {
  // @@protoc_insertion_point(field_add:dzhyun.CData.aValues)
  return avalues_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::CArray >*
CData::mutable_avalues() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.CData.aValues)
  return &avalues_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::CArray >&
CData::avalues() const {
  // @@protoc_insertion_point(field_list:dzhyun.CData.aValues)
  return avalues_;
}

// repeated sint64 xValues = 9 [packed = true];
int CData::xvalues_size() const {
  return xvalues_.size();
}
void CData::clear_xvalues() {
  xvalues_.Clear();
}
 ::google::protobuf::int64 CData::xvalues(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.CData.xValues)
  return xvalues_.Get(index);
}
 void CData::set_xvalues(int index, ::google::protobuf::int64 value) {
  xvalues_.Set(index, value);
  // @@protoc_insertion_point(field_set:dzhyun.CData.xValues)
}
 void CData::add_xvalues(::google::protobuf::int64 value) {
  xvalues_.Add(value);
  // @@protoc_insertion_point(field_add:dzhyun.CData.xValues)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
CData::xvalues() const {
  // @@protoc_insertion_point(field_list:dzhyun.CData.xValues)
  return xvalues_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
CData::mutable_xvalues() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.CData.xValues)
  return &xvalues_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDataX::kIndexFieldNumber;
const int CDataX::kIValueFieldNumber;
const int CDataX::kFValueFieldNumber;
const int CDataX::kDValueFieldNumber;
const int CDataX::kSValueFieldNumber;
const int CDataX::kBValuesFieldNumber;
const int CDataX::kTValueFieldNumber;
const int CDataX::kAValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDataX::CDataX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.CDataX)
}

void CDataX::InitAsDefaultInstance() {
  tvalue_ = const_cast< ::dzhyun::Table*>(&::dzhyun::Table::default_instance());
  avalues_ = const_cast< ::dzhyun::CArray*>(&::dzhyun::CArray::default_instance());
}

CDataX::CDataX(const CDataX& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.CDataX)
}

void CDataX::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  index_ = 0;
  ivalue_ = GOOGLE_LONGLONG(0);
  fvalue_ = 0;
  dvalue_ = 0;
  svalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bvalues_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tvalue_ = NULL;
  avalues_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CDataX::~CDataX() {
  // @@protoc_insertion_point(destructor:dzhyun.CDataX)
  SharedDtor();
}

void CDataX::SharedDtor() {
  svalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bvalues_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete tvalue_;
    delete avalues_;
  }
}

void CDataX::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CDataX::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CDataX_descriptor_;
}

const CDataX& CDataX::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhpbtable_2eproto();
  return *default_instance_;
}

CDataX* CDataX::default_instance_ = NULL;

CDataX* CDataX::New(::google::protobuf::Arena* arena) const {
  CDataX* n = new CDataX;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CDataX::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.CDataX)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CDataX, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CDataX*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(ivalue_, dvalue_);
    if (has_svalue()) {
      svalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_bvalues()) {
      bvalues_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_tvalue()) {
      if (tvalue_ != NULL) tvalue_->::dzhyun::Table::Clear();
    }
    if (has_avalues()) {
      if (avalues_ != NULL) avalues_->::dzhyun::CArray::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CDataX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.CDataX)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iValue;
        break;
      }

      // optional int64 iValue = 2;
      case 2: {
        if (tag == 16) {
         parse_iValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ivalue_)));
          set_has_ivalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_fValue;
        break;
      }

      // optional float fValue = 3;
      case 3: {
        if (tag == 29) {
         parse_fValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fvalue_)));
          set_has_fvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_dValue;
        break;
      }

      // optional double dValue = 4;
      case 4: {
        if (tag == 33) {
         parse_dValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dvalue_)));
          set_has_dvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sValue;
        break;
      }

      // optional string sValue = 5;
      case 5: {
        if (tag == 42) {
         parse_sValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_svalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->svalue().data(), this->svalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.CDataX.sValue");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_bValues;
        break;
      }

      // optional bytes bValues = 6;
      case 6: {
        if (tag == 50) {
         parse_bValues:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bvalues()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_tValue;
        break;
      }

      // optional .dzhyun.Table tValue = 7;
      case 7: {
        if (tag == 58) {
         parse_tValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_aValues;
        break;
      }

      // optional .dzhyun.CArray aValues = 8;
      case 8: {
        if (tag == 66) {
         parse_aValues:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_avalues()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.CDataX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.CDataX)
  return false;
#undef DO_
}

void CDataX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.CDataX)
  // required int32 Index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // optional int64 iValue = 2;
  if (has_ivalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ivalue(), output);
  }

  // optional float fValue = 3;
  if (has_fvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->fvalue(), output);
  }

  // optional double dValue = 4;
  if (has_dvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->dvalue(), output);
  }

  // optional string sValue = 5;
  if (has_svalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->svalue().data(), this->svalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.CDataX.sValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->svalue(), output);
  }

  // optional bytes bValues = 6;
  if (has_bvalues()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->bvalues(), output);
  }

  // optional .dzhyun.Table tValue = 7;
  if (has_tvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->tvalue_, output);
  }

  // optional .dzhyun.CArray aValues = 8;
  if (has_avalues()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->avalues_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.CDataX)
}

::google::protobuf::uint8* CDataX::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.CDataX)
  // required int32 Index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // optional int64 iValue = 2;
  if (has_ivalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ivalue(), target);
  }

  // optional float fValue = 3;
  if (has_fvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->fvalue(), target);
  }

  // optional double dValue = 4;
  if (has_dvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->dvalue(), target);
  }

  // optional string sValue = 5;
  if (has_svalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->svalue().data(), this->svalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.CDataX.sValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->svalue(), target);
  }

  // optional bytes bValues = 6;
  if (has_bvalues()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->bvalues(), target);
  }

  // optional .dzhyun.Table tValue = 7;
  if (has_tvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, *this->tvalue_, target);
  }

  // optional .dzhyun.CArray aValues = 8;
  if (has_avalues()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, *this->avalues_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.CDataX)
  return target;
}

int CDataX::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.CDataX)
  int total_size = 0;

  // required int32 Index = 1;
  if (has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }
  if (_has_bits_[1 / 32] & 254u) {
    // optional int64 iValue = 2;
    if (has_ivalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ivalue());
    }

    // optional float fValue = 3;
    if (has_fvalue()) {
      total_size += 1 + 4;
    }

    // optional double dValue = 4;
    if (has_dvalue()) {
      total_size += 1 + 8;
    }

    // optional string sValue = 5;
    if (has_svalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->svalue());
    }

    // optional bytes bValues = 6;
    if (has_bvalues()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bvalues());
    }

    // optional .dzhyun.Table tValue = 7;
    if (has_tvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->tvalue_);
    }

    // optional .dzhyun.CArray aValues = 8;
    if (has_avalues()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->avalues_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CDataX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.CDataX)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CDataX* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CDataX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.CDataX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.CDataX)
    MergeFrom(*source);
  }
}

void CDataX::MergeFrom(const CDataX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.CDataX)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_ivalue()) {
      set_ivalue(from.ivalue());
    }
    if (from.has_fvalue()) {
      set_fvalue(from.fvalue());
    }
    if (from.has_dvalue()) {
      set_dvalue(from.dvalue());
    }
    if (from.has_svalue()) {
      set_has_svalue();
      svalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.svalue_);
    }
    if (from.has_bvalues()) {
      set_has_bvalues();
      bvalues_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bvalues_);
    }
    if (from.has_tvalue()) {
      mutable_tvalue()->::dzhyun::Table::MergeFrom(from.tvalue());
    }
    if (from.has_avalues()) {
      mutable_avalues()->::dzhyun::CArray::MergeFrom(from.avalues());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CDataX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.CDataX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDataX::CopyFrom(const CDataX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.CDataX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDataX::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_tvalue()) {
    if (!this->tvalue_->IsInitialized()) return false;
  }
  return true;
}

void CDataX::Swap(CDataX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDataX::InternalSwap(CDataX* other) {
  std::swap(index_, other->index_);
  std::swap(ivalue_, other->ivalue_);
  std::swap(fvalue_, other->fvalue_);
  std::swap(dvalue_, other->dvalue_);
  svalue_.Swap(&other->svalue_);
  bvalues_.Swap(&other->bvalues_);
  std::swap(tvalue_, other->tvalue_);
  std::swap(avalues_, other->avalues_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CDataX::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CDataX_descriptor_;
  metadata.reflection = CDataX_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CDataX

// required int32 Index = 1;
bool CDataX::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CDataX::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
void CDataX::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void CDataX::clear_index() {
  index_ = 0;
  clear_has_index();
}
 ::google::protobuf::int32 CDataX::index() const {
  // @@protoc_insertion_point(field_get:dzhyun.CDataX.Index)
  return index_;
}
 void CDataX::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.CDataX.Index)
}

// optional int64 iValue = 2;
bool CDataX::has_ivalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CDataX::set_has_ivalue() {
  _has_bits_[0] |= 0x00000002u;
}
void CDataX::clear_has_ivalue() {
  _has_bits_[0] &= ~0x00000002u;
}
void CDataX::clear_ivalue() {
  ivalue_ = GOOGLE_LONGLONG(0);
  clear_has_ivalue();
}
 ::google::protobuf::int64 CDataX::ivalue() const {
  // @@protoc_insertion_point(field_get:dzhyun.CDataX.iValue)
  return ivalue_;
}
 void CDataX::set_ivalue(::google::protobuf::int64 value) {
  set_has_ivalue();
  ivalue_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.CDataX.iValue)
}

// optional float fValue = 3;
bool CDataX::has_fvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CDataX::set_has_fvalue() {
  _has_bits_[0] |= 0x00000004u;
}
void CDataX::clear_has_fvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
void CDataX::clear_fvalue() {
  fvalue_ = 0;
  clear_has_fvalue();
}
 float CDataX::fvalue() const {
  // @@protoc_insertion_point(field_get:dzhyun.CDataX.fValue)
  return fvalue_;
}
 void CDataX::set_fvalue(float value) {
  set_has_fvalue();
  fvalue_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.CDataX.fValue)
}

// optional double dValue = 4;
bool CDataX::has_dvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CDataX::set_has_dvalue() {
  _has_bits_[0] |= 0x00000008u;
}
void CDataX::clear_has_dvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
void CDataX::clear_dvalue() {
  dvalue_ = 0;
  clear_has_dvalue();
}
 double CDataX::dvalue() const {
  // @@protoc_insertion_point(field_get:dzhyun.CDataX.dValue)
  return dvalue_;
}
 void CDataX::set_dvalue(double value) {
  set_has_dvalue();
  dvalue_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.CDataX.dValue)
}

// optional string sValue = 5;
bool CDataX::has_svalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CDataX::set_has_svalue() {
  _has_bits_[0] |= 0x00000010u;
}
void CDataX::clear_has_svalue() {
  _has_bits_[0] &= ~0x00000010u;
}
void CDataX::clear_svalue() {
  svalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_svalue();
}
 const ::std::string& CDataX::svalue() const {
  // @@protoc_insertion_point(field_get:dzhyun.CDataX.sValue)
  return svalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CDataX::set_svalue(const ::std::string& value) {
  set_has_svalue();
  svalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.CDataX.sValue)
}
 void CDataX::set_svalue(const char* value) {
  set_has_svalue();
  svalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.CDataX.sValue)
}
 void CDataX::set_svalue(const char* value, size_t size) {
  set_has_svalue();
  svalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.CDataX.sValue)
}
 ::std::string* CDataX::mutable_svalue() {
  set_has_svalue();
  // @@protoc_insertion_point(field_mutable:dzhyun.CDataX.sValue)
  return svalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CDataX::release_svalue() {
  // @@protoc_insertion_point(field_release:dzhyun.CDataX.sValue)
  clear_has_svalue();
  return svalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CDataX::set_allocated_svalue(::std::string* svalue) {
  if (svalue != NULL) {
    set_has_svalue();
  } else {
    clear_has_svalue();
  }
  svalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), svalue);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.CDataX.sValue)
}

// optional bytes bValues = 6;
bool CDataX::has_bvalues() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CDataX::set_has_bvalues() {
  _has_bits_[0] |= 0x00000020u;
}
void CDataX::clear_has_bvalues() {
  _has_bits_[0] &= ~0x00000020u;
}
void CDataX::clear_bvalues() {
  bvalues_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bvalues();
}
 const ::std::string& CDataX::bvalues() const {
  // @@protoc_insertion_point(field_get:dzhyun.CDataX.bValues)
  return bvalues_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CDataX::set_bvalues(const ::std::string& value) {
  set_has_bvalues();
  bvalues_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.CDataX.bValues)
}
 void CDataX::set_bvalues(const char* value) {
  set_has_bvalues();
  bvalues_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.CDataX.bValues)
}
 void CDataX::set_bvalues(const void* value, size_t size) {
  set_has_bvalues();
  bvalues_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.CDataX.bValues)
}
 ::std::string* CDataX::mutable_bvalues() {
  set_has_bvalues();
  // @@protoc_insertion_point(field_mutable:dzhyun.CDataX.bValues)
  return bvalues_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CDataX::release_bvalues() {
  // @@protoc_insertion_point(field_release:dzhyun.CDataX.bValues)
  clear_has_bvalues();
  return bvalues_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CDataX::set_allocated_bvalues(::std::string* bvalues) {
  if (bvalues != NULL) {
    set_has_bvalues();
  } else {
    clear_has_bvalues();
  }
  bvalues_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bvalues);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.CDataX.bValues)
}

// optional .dzhyun.Table tValue = 7;
bool CDataX::has_tvalue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CDataX::set_has_tvalue() {
  _has_bits_[0] |= 0x00000040u;
}
void CDataX::clear_has_tvalue() {
  _has_bits_[0] &= ~0x00000040u;
}
void CDataX::clear_tvalue() {
  if (tvalue_ != NULL) tvalue_->::dzhyun::Table::Clear();
  clear_has_tvalue();
}
const ::dzhyun::Table& CDataX::tvalue() const {
  // @@protoc_insertion_point(field_get:dzhyun.CDataX.tValue)
  return tvalue_ != NULL ? *tvalue_ : *default_instance_->tvalue_;
}
::dzhyun::Table* CDataX::mutable_tvalue() {
  set_has_tvalue();
  if (tvalue_ == NULL) {
    tvalue_ = new ::dzhyun::Table;
  }
  // @@protoc_insertion_point(field_mutable:dzhyun.CDataX.tValue)
  return tvalue_;
}
::dzhyun::Table* CDataX::release_tvalue() {
  // @@protoc_insertion_point(field_release:dzhyun.CDataX.tValue)
  clear_has_tvalue();
  ::dzhyun::Table* temp = tvalue_;
  tvalue_ = NULL;
  return temp;
}
void CDataX::set_allocated_tvalue(::dzhyun::Table* tvalue) {
  delete tvalue_;
  tvalue_ = tvalue;
  if (tvalue) {
    set_has_tvalue();
  } else {
    clear_has_tvalue();
  }
  // @@protoc_insertion_point(field_set_allocated:dzhyun.CDataX.tValue)
}

// optional .dzhyun.CArray aValues = 8;
bool CDataX::has_avalues() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CDataX::set_has_avalues() {
  _has_bits_[0] |= 0x00000080u;
}
void CDataX::clear_has_avalues() {
  _has_bits_[0] &= ~0x00000080u;
}
void CDataX::clear_avalues() {
  if (avalues_ != NULL) avalues_->::dzhyun::CArray::Clear();
  clear_has_avalues();
}
const ::dzhyun::CArray& CDataX::avalues() const {
  // @@protoc_insertion_point(field_get:dzhyun.CDataX.aValues)
  return avalues_ != NULL ? *avalues_ : *default_instance_->avalues_;
}
::dzhyun::CArray* CDataX::mutable_avalues() {
  set_has_avalues();
  if (avalues_ == NULL) {
    avalues_ = new ::dzhyun::CArray;
  }
  // @@protoc_insertion_point(field_mutable:dzhyun.CDataX.aValues)
  return avalues_;
}
::dzhyun::CArray* CDataX::release_avalues() {
  // @@protoc_insertion_point(field_release:dzhyun.CDataX.aValues)
  clear_has_avalues();
  ::dzhyun::CArray* temp = avalues_;
  avalues_ = NULL;
  return temp;
}
void CDataX::set_allocated_avalues(::dzhyun::CArray* avalues) {
  delete avalues_;
  avalues_ = avalues;
  if (avalues) {
    set_has_avalues();
  } else {
    clear_has_avalues();
  }
  // @@protoc_insertion_point(field_set_allocated:dzhyun.CDataX.aValues)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Table::kTiidFieldNumber;
const int Table::kInfoFieldNumber;
const int Table::kDataFieldNumber;
const int Table::kDataXFieldNumber;
const int Table::kNameFieldNumber;
const int Table::kMemoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Table::Table()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.Table)
}

void Table::InitAsDefaultInstance() {
}

Table::Table(const Table& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.Table)
}

void Table::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tiid_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Table::~Table() {
  // @@protoc_insertion_point(destructor:dzhyun.Table)
  SharedDtor();
}

void Table::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Table::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Table::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Table_descriptor_;
}

const Table& Table::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhpbtable_2eproto();
  return *default_instance_;
}

Table* Table::default_instance_ = NULL;

Table* Table::New(::google::protobuf::Arena* arena) const {
  Table* n = new Table;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Table::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.Table)
  if (_has_bits_[0 / 32] & 49u) {
    tiid_ = 0;
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_memo()) {
      memo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  info_.Clear();
  data_.Clear();
  datax_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Table::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.Table)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Tiid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tiid_)));
          set_has_tiid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Info;
        break;
      }

      // repeated .dzhyun.CInfo Info = 2;
      case 2: {
        if (tag == 18) {
         parse_Info:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Info;
        if (input->ExpectTag(26)) goto parse_loop_Data;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .dzhyun.CData Data = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_Data;
        if (input->ExpectTag(34)) goto parse_loop_DataX;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .dzhyun.CDataX DataX = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_DataX:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_datax()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_DataX;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_Name;
        break;
      }

      // optional string Name = 5;
      case 5: {
        if (tag == 42) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.Table.Name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Memo;
        break;
      }

      // optional string Memo = 6;
      case 6: {
        if (tag == 50) {
         parse_Memo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_memo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->memo().data(), this->memo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.Table.Memo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.Table)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.Table)
  return false;
#undef DO_
}

void Table::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.Table)
  // optional int32 Tiid = 1;
  if (has_tiid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tiid(), output);
  }

  // repeated .dzhyun.CInfo Info = 2;
  for (unsigned int i = 0, n = this->info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->info(i), output);
  }

  // repeated .dzhyun.CData Data = 3;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  // repeated .dzhyun.CDataX DataX = 4;
  for (unsigned int i = 0, n = this->datax_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->datax(i), output);
  }

  // optional string Name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.Table.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // optional string Memo = 6;
  if (has_memo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->memo().data(), this->memo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.Table.Memo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->memo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.Table)
}

::google::protobuf::uint8* Table::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.Table)
  // optional int32 Tiid = 1;
  if (has_tiid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tiid(), target);
  }

  // repeated .dzhyun.CInfo Info = 2;
  for (unsigned int i = 0, n = this->info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->info(i), target);
  }

  // repeated .dzhyun.CData Data = 3;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  // repeated .dzhyun.CDataX DataX = 4;
  for (unsigned int i = 0, n = this->datax_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->datax(i), target);
  }

  // optional string Name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.Table.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // optional string Memo = 6;
  if (has_memo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->memo().data(), this->memo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.Table.Memo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->memo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.Table)
  return target;
}

int Table::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.Table)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 49u) {
    // optional int32 Tiid = 1;
    if (has_tiid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tiid());
    }

    // optional string Name = 5;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string Memo = 6;
    if (has_memo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->memo());
    }

  }
  // repeated .dzhyun.CInfo Info = 2;
  total_size += 1 * this->info_size();
  for (int i = 0; i < this->info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->info(i));
  }

  // repeated .dzhyun.CData Data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  // repeated .dzhyun.CDataX DataX = 4;
  total_size += 1 * this->datax_size();
  for (int i = 0; i < this->datax_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datax(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Table::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.Table)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Table* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Table>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.Table)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.Table)
    MergeFrom(*source);
  }
}

void Table::MergeFrom(const Table& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.Table)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  info_.MergeFrom(from.info_);
  data_.MergeFrom(from.data_);
  datax_.MergeFrom(from.datax_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tiid()) {
      set_tiid(from.tiid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_memo()) {
      set_has_memo();
      memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Table::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.Table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Table::CopyFrom(const Table& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.Table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Table::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->datax())) return false;
  return true;
}

void Table::Swap(Table* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Table::InternalSwap(Table* other) {
  std::swap(tiid_, other->tiid_);
  info_.UnsafeArenaSwap(&other->info_);
  data_.UnsafeArenaSwap(&other->data_);
  datax_.UnsafeArenaSwap(&other->datax_);
  name_.Swap(&other->name_);
  memo_.Swap(&other->memo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Table::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Table_descriptor_;
  metadata.reflection = Table_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Table

// optional int32 Tiid = 1;
bool Table::has_tiid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Table::set_has_tiid() {
  _has_bits_[0] |= 0x00000001u;
}
void Table::clear_has_tiid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Table::clear_tiid() {
  tiid_ = 0;
  clear_has_tiid();
}
 ::google::protobuf::int32 Table::tiid() const {
  // @@protoc_insertion_point(field_get:dzhyun.Table.Tiid)
  return tiid_;
}
 void Table::set_tiid(::google::protobuf::int32 value) {
  set_has_tiid();
  tiid_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.Table.Tiid)
}

// repeated .dzhyun.CInfo Info = 2;
int Table::info_size() const {
  return info_.size();
}
void Table::clear_info() {
  info_.Clear();
}
const ::dzhyun::CInfo& Table::info(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.Table.Info)
  return info_.Get(index);
}
::dzhyun::CInfo* Table::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.Table.Info)
  return info_.Mutable(index);
}
::dzhyun::CInfo* Table::add_info() {
  // @@protoc_insertion_point(field_add:dzhyun.Table.Info)
  return info_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::CInfo >*
Table::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.Table.Info)
  return &info_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::CInfo >&
Table::info() const {
  // @@protoc_insertion_point(field_list:dzhyun.Table.Info)
  return info_;
}

// repeated .dzhyun.CData Data = 3;
int Table::data_size() const {
  return data_.size();
}
void Table::clear_data() {
  data_.Clear();
}
const ::dzhyun::CData& Table::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.Table.Data)
  return data_.Get(index);
}
::dzhyun::CData* Table::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.Table.Data)
  return data_.Mutable(index);
}
::dzhyun::CData* Table::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.Table.Data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::CData >*
Table::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.Table.Data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::CData >&
Table::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.Table.Data)
  return data_;
}

// repeated .dzhyun.CDataX DataX = 4;
int Table::datax_size() const {
  return datax_.size();
}
void Table::clear_datax() {
  datax_.Clear();
}
const ::dzhyun::CDataX& Table::datax(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.Table.DataX)
  return datax_.Get(index);
}
::dzhyun::CDataX* Table::mutable_datax(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.Table.DataX)
  return datax_.Mutable(index);
}
::dzhyun::CDataX* Table::add_datax() {
  // @@protoc_insertion_point(field_add:dzhyun.Table.DataX)
  return datax_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::CDataX >*
Table::mutable_datax() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.Table.DataX)
  return &datax_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::CDataX >&
Table::datax() const {
  // @@protoc_insertion_point(field_list:dzhyun.Table.DataX)
  return datax_;
}

// optional string Name = 5;
bool Table::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Table::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
void Table::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
void Table::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Table::name() const {
  // @@protoc_insertion_point(field_get:dzhyun.Table.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Table::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.Table.Name)
}
 void Table::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.Table.Name)
}
 void Table::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.Table.Name)
}
 ::std::string* Table::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:dzhyun.Table.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Table::release_name() {
  // @@protoc_insertion_point(field_release:dzhyun.Table.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Table::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.Table.Name)
}

// optional string Memo = 6;
bool Table::has_memo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Table::set_has_memo() {
  _has_bits_[0] |= 0x00000020u;
}
void Table::clear_has_memo() {
  _has_bits_[0] &= ~0x00000020u;
}
void Table::clear_memo() {
  memo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_memo();
}
 const ::std::string& Table::memo() const {
  // @@protoc_insertion_point(field_get:dzhyun.Table.Memo)
  return memo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Table::set_memo(const ::std::string& value) {
  set_has_memo();
  memo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.Table.Memo)
}
 void Table::set_memo(const char* value) {
  set_has_memo();
  memo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.Table.Memo)
}
 void Table::set_memo(const char* value, size_t size) {
  set_has_memo();
  memo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.Table.Memo)
}
 ::std::string* Table::mutable_memo() {
  set_has_memo();
  // @@protoc_insertion_point(field_mutable:dzhyun.Table.Memo)
  return memo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Table::release_memo() {
  // @@protoc_insertion_point(field_release:dzhyun.Table.Memo)
  clear_has_memo();
  return memo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Table::set_allocated_memo(::std::string* memo) {
  if (memo != NULL) {
    set_has_memo();
  } else {
    clear_has_memo();
  }
  memo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), memo);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.Table.Memo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dzhyun

// @@protoc_insertion_point(global_scope)
