// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dzhyun.dxspirit.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dzhyun.dxspirit.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dzhyun {

namespace {

const ::google::protobuf::Descriptor* DXSpirit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DXSpirit_reflection_ = NULL;
const ::google::protobuf::Descriptor* DXSpiritStat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DXSpiritStat_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dzhyun_2edxspirit_2eproto() {
  protobuf_AddDesc_dzhyun_2edxspirit_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dzhyun.dxspirit.proto");
  GOOGLE_CHECK(file != NULL);
  DXSpirit_descriptor_ = file->message_type(0);
  static const int DXSpirit_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpirit, shijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpirit, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpirit, tongzhi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpirit, shuju_),
  };
  DXSpirit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DXSpirit_descriptor_,
      DXSpirit::default_instance_,
      DXSpirit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpirit, _has_bits_[0]),
      -1,
      -1,
      sizeof(DXSpirit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpirit, _internal_metadata_),
      -1);
  DXSpiritStat_descriptor_ = file->message_type(1);
  static const int DXSpiritStat_offsets_[27] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, hjfstotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, ksfttotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, gttstotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, jsxdtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, dbmrtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, dbmrstatistics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, dbmctotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, dbmcstatistics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, fztbtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, fdtbtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, dkzttotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, dkdttotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, ydmcptotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, ydmrptotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, lszstotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, dyzstotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, jgmrgdtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, jgmcgdtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, dcjmrdtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, dcjmcdtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, fdmrgdtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, fdmcgdtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, mrcdtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, mccdtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, mrxdtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, mcxdtotal_),
  };
  DXSpiritStat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DXSpiritStat_descriptor_,
      DXSpiritStat::default_instance_,
      DXSpiritStat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, _has_bits_[0]),
      -1,
      -1,
      sizeof(DXSpiritStat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DXSpiritStat, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dzhyun_2edxspirit_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DXSpirit_descriptor_, &DXSpirit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DXSpiritStat_descriptor_, &DXSpiritStat::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dzhyun_2edxspirit_2eproto() {
  delete DXSpirit::default_instance_;
  delete DXSpirit_reflection_;
  delete DXSpiritStat::default_instance_;
  delete DXSpiritStat_reflection_;
}

void protobuf_AddDesc_dzhyun_2edxspirit_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025dzhyun.dxspirit.proto\022\006dzhyun\"H\n\010DXSpi"
    "rit\022\017\n\007ShiJian\030\001 \002(\003\022\013\n\003Obj\030\002 \001(\t\022\017\n\007Ton"
    "gZhi\030\003 \001(\t\022\r\n\005ShuJu\030\004 \001(\003\"\241\004\n\014DXSpiritSt"
    "at\022\013\n\003Obj\030\001 \001(\t\022\021\n\tHjfsTotal\030\002 \001(\003\022\021\n\tKs"
    "ftTotal\030\003 \001(\003\022\021\n\tGttsTotal\030\004 \001(\003\022\021\n\tJsxd"
    "Total\030\005 \001(\003\022\021\n\tDbmrTotal\030\006 \001(\003\022\026\n\016DbmrSt"
    "atistics\030\007 \001(\003\022\021\n\tDbmcTotal\030\010 \001(\003\022\026\n\016Dbm"
    "cStatistics\030\t \001(\003\022\021\n\tFztbTotal\030\n \001(\003\022\021\n\t"
    "FdtbTotal\030\013 \001(\003\022\021\n\tDkztTotal\030\014 \001(\003\022\021\n\tDk"
    "dtTotal\030\r \001(\003\022\022\n\nYdmcPTotal\030\016 \001(\003\022\022\n\nYdm"
    "rPTotal\030\017 \001(\003\022\021\n\tLszsTotal\030\020 \001(\003\022\021\n\tDyzs"
    "Total\030\021 \001(\003\022\023\n\013JgmrgdTotal\030\022 \001(\003\022\023\n\013Jgmc"
    "gdTotal\030\023 \001(\003\022\023\n\013DcjmrdTotal\030\024 \001(\003\022\023\n\013Dc"
    "jmcdTotal\030\025 \001(\003\022\023\n\013FdmrgdTotal\030\026 \001(\003\022\023\n\013"
    "FdmcgdTotal\030\027 \001(\003\022\021\n\tMrcdTotal\030\030 \001(\003\022\021\n\t"
    "MccdTotal\030\031 \001(\003\022\021\n\tMrxdTotal\030\032 \001(\003\022\021\n\tMc"
    "xdTotal\030\033 \001(\003B\022\n\020com.dzhyun.proto", 673);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dzhyun.dxspirit.proto", &protobuf_RegisterTypes);
  DXSpirit::default_instance_ = new DXSpirit();
  DXSpiritStat::default_instance_ = new DXSpiritStat();
  DXSpirit::default_instance_->InitAsDefaultInstance();
  DXSpiritStat::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dzhyun_2edxspirit_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dzhyun_2edxspirit_2eproto {
  StaticDescriptorInitializer_dzhyun_2edxspirit_2eproto() {
    protobuf_AddDesc_dzhyun_2edxspirit_2eproto();
  }
} static_descriptor_initializer_dzhyun_2edxspirit_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DXSpirit::kShiJianFieldNumber;
const int DXSpirit::kObjFieldNumber;
const int DXSpirit::kTongZhiFieldNumber;
const int DXSpirit::kShuJuFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DXSpirit::DXSpirit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.DXSpirit)
}

void DXSpirit::InitAsDefaultInstance() {
}

DXSpirit::DXSpirit(const DXSpirit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.DXSpirit)
}

void DXSpirit::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  shijian_ = GOOGLE_LONGLONG(0);
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tongzhi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shuju_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DXSpirit::~DXSpirit() {
  // @@protoc_insertion_point(destructor:dzhyun.DXSpirit)
  SharedDtor();
}

void DXSpirit::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tongzhi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DXSpirit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DXSpirit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DXSpirit_descriptor_;
}

const DXSpirit& DXSpirit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2edxspirit_2eproto();
  return *default_instance_;
}

DXSpirit* DXSpirit::default_instance_ = NULL;

DXSpirit* DXSpirit::New(::google::protobuf::Arena* arena) const {
  DXSpirit* n = new DXSpirit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DXSpirit::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.DXSpirit)
  if (_has_bits_[0 / 32] & 15u) {
    shijian_ = GOOGLE_LONGLONG(0);
    if (has_obj()) {
      obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_tongzhi()) {
      tongzhi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    shuju_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DXSpirit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.DXSpirit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 ShiJian = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shijian_)));
          set_has_shijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Obj;
        break;
      }

      // optional string Obj = 2;
      case 2: {
        if (tag == 18) {
         parse_Obj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DXSpirit.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_TongZhi;
        break;
      }

      // optional string TongZhi = 3;
      case 3: {
        if (tag == 26) {
         parse_TongZhi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tongzhi()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tongzhi().data(), this->tongzhi().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DXSpirit.TongZhi");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ShuJu;
        break;
      }

      // optional int64 ShuJu = 4;
      case 4: {
        if (tag == 32) {
         parse_ShuJu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shuju_)));
          set_has_shuju();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.DXSpirit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.DXSpirit)
  return false;
#undef DO_
}

void DXSpirit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.DXSpirit)
  // required int64 ShiJian = 1;
  if (has_shijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shijian(), output);
  }

  // optional string Obj = 2;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DXSpirit.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->obj(), output);
  }

  // optional string TongZhi = 3;
  if (has_tongzhi()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tongzhi().data(), this->tongzhi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DXSpirit.TongZhi");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tongzhi(), output);
  }

  // optional int64 ShuJu = 4;
  if (has_shuju()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->shuju(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.DXSpirit)
}

::google::protobuf::uint8* DXSpirit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.DXSpirit)
  // required int64 ShiJian = 1;
  if (has_shijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shijian(), target);
  }

  // optional string Obj = 2;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DXSpirit.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->obj(), target);
  }

  // optional string TongZhi = 3;
  if (has_tongzhi()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tongzhi().data(), this->tongzhi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DXSpirit.TongZhi");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tongzhi(), target);
  }

  // optional int64 ShuJu = 4;
  if (has_shuju()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->shuju(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.DXSpirit)
  return target;
}

int DXSpirit::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.DXSpirit)
  int total_size = 0;

  // required int64 ShiJian = 1;
  if (has_shijian()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shijian());
  }
  if (_has_bits_[1 / 32] & 14u) {
    // optional string Obj = 2;
    if (has_obj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->obj());
    }

    // optional string TongZhi = 3;
    if (has_tongzhi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tongzhi());
    }

    // optional int64 ShuJu = 4;
    if (has_shuju()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shuju());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DXSpirit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.DXSpirit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DXSpirit* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DXSpirit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.DXSpirit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.DXSpirit)
    MergeFrom(*source);
  }
}

void DXSpirit::MergeFrom(const DXSpirit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.DXSpirit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shijian()) {
      set_shijian(from.shijian());
    }
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
    if (from.has_tongzhi()) {
      set_has_tongzhi();
      tongzhi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tongzhi_);
    }
    if (from.has_shuju()) {
      set_shuju(from.shuju());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DXSpirit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.DXSpirit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DXSpirit::CopyFrom(const DXSpirit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.DXSpirit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DXSpirit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DXSpirit::Swap(DXSpirit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DXSpirit::InternalSwap(DXSpirit* other) {
  std::swap(shijian_, other->shijian_);
  obj_.Swap(&other->obj_);
  tongzhi_.Swap(&other->tongzhi_);
  std::swap(shuju_, other->shuju_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DXSpirit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DXSpirit_descriptor_;
  metadata.reflection = DXSpirit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DXSpirit

// required int64 ShiJian = 1;
bool DXSpirit::has_shijian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DXSpirit::set_has_shijian() {
  _has_bits_[0] |= 0x00000001u;
}
void DXSpirit::clear_has_shijian() {
  _has_bits_[0] &= ~0x00000001u;
}
void DXSpirit::clear_shijian() {
  shijian_ = GOOGLE_LONGLONG(0);
  clear_has_shijian();
}
 ::google::protobuf::int64 DXSpirit::shijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpirit.ShiJian)
  return shijian_;
}
 void DXSpirit::set_shijian(::google::protobuf::int64 value) {
  set_has_shijian();
  shijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpirit.ShiJian)
}

// optional string Obj = 2;
bool DXSpirit::has_obj() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DXSpirit::set_has_obj() {
  _has_bits_[0] |= 0x00000002u;
}
void DXSpirit::clear_has_obj() {
  _has_bits_[0] &= ~0x00000002u;
}
void DXSpirit::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& DXSpirit::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpirit.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DXSpirit::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DXSpirit.Obj)
}
 void DXSpirit::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DXSpirit.Obj)
}
 void DXSpirit::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DXSpirit.Obj)
}
 ::std::string* DXSpirit::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.DXSpirit.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DXSpirit::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.DXSpirit.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DXSpirit::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DXSpirit.Obj)
}

// optional string TongZhi = 3;
bool DXSpirit::has_tongzhi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DXSpirit::set_has_tongzhi() {
  _has_bits_[0] |= 0x00000004u;
}
void DXSpirit::clear_has_tongzhi() {
  _has_bits_[0] &= ~0x00000004u;
}
void DXSpirit::clear_tongzhi() {
  tongzhi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tongzhi();
}
 const ::std::string& DXSpirit::tongzhi() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpirit.TongZhi)
  return tongzhi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DXSpirit::set_tongzhi(const ::std::string& value) {
  set_has_tongzhi();
  tongzhi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DXSpirit.TongZhi)
}
 void DXSpirit::set_tongzhi(const char* value) {
  set_has_tongzhi();
  tongzhi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DXSpirit.TongZhi)
}
 void DXSpirit::set_tongzhi(const char* value, size_t size) {
  set_has_tongzhi();
  tongzhi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DXSpirit.TongZhi)
}
 ::std::string* DXSpirit::mutable_tongzhi() {
  set_has_tongzhi();
  // @@protoc_insertion_point(field_mutable:dzhyun.DXSpirit.TongZhi)
  return tongzhi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DXSpirit::release_tongzhi() {
  // @@protoc_insertion_point(field_release:dzhyun.DXSpirit.TongZhi)
  clear_has_tongzhi();
  return tongzhi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DXSpirit::set_allocated_tongzhi(::std::string* tongzhi) {
  if (tongzhi != NULL) {
    set_has_tongzhi();
  } else {
    clear_has_tongzhi();
  }
  tongzhi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tongzhi);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DXSpirit.TongZhi)
}

// optional int64 ShuJu = 4;
bool DXSpirit::has_shuju() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DXSpirit::set_has_shuju() {
  _has_bits_[0] |= 0x00000008u;
}
void DXSpirit::clear_has_shuju() {
  _has_bits_[0] &= ~0x00000008u;
}
void DXSpirit::clear_shuju() {
  shuju_ = GOOGLE_LONGLONG(0);
  clear_has_shuju();
}
 ::google::protobuf::int64 DXSpirit::shuju() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpirit.ShuJu)
  return shuju_;
}
 void DXSpirit::set_shuju(::google::protobuf::int64 value) {
  set_has_shuju();
  shuju_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpirit.ShuJu)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DXSpiritStat::kObjFieldNumber;
const int DXSpiritStat::kHjfsTotalFieldNumber;
const int DXSpiritStat::kKsftTotalFieldNumber;
const int DXSpiritStat::kGttsTotalFieldNumber;
const int DXSpiritStat::kJsxdTotalFieldNumber;
const int DXSpiritStat::kDbmrTotalFieldNumber;
const int DXSpiritStat::kDbmrStatisticsFieldNumber;
const int DXSpiritStat::kDbmcTotalFieldNumber;
const int DXSpiritStat::kDbmcStatisticsFieldNumber;
const int DXSpiritStat::kFztbTotalFieldNumber;
const int DXSpiritStat::kFdtbTotalFieldNumber;
const int DXSpiritStat::kDkztTotalFieldNumber;
const int DXSpiritStat::kDkdtTotalFieldNumber;
const int DXSpiritStat::kYdmcPTotalFieldNumber;
const int DXSpiritStat::kYdmrPTotalFieldNumber;
const int DXSpiritStat::kLszsTotalFieldNumber;
const int DXSpiritStat::kDyzsTotalFieldNumber;
const int DXSpiritStat::kJgmrgdTotalFieldNumber;
const int DXSpiritStat::kJgmcgdTotalFieldNumber;
const int DXSpiritStat::kDcjmrdTotalFieldNumber;
const int DXSpiritStat::kDcjmcdTotalFieldNumber;
const int DXSpiritStat::kFdmrgdTotalFieldNumber;
const int DXSpiritStat::kFdmcgdTotalFieldNumber;
const int DXSpiritStat::kMrcdTotalFieldNumber;
const int DXSpiritStat::kMccdTotalFieldNumber;
const int DXSpiritStat::kMrxdTotalFieldNumber;
const int DXSpiritStat::kMcxdTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DXSpiritStat::DXSpiritStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.DXSpiritStat)
}

void DXSpiritStat::InitAsDefaultInstance() {
}

DXSpiritStat::DXSpiritStat(const DXSpiritStat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.DXSpiritStat)
}

void DXSpiritStat::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hjfstotal_ = GOOGLE_LONGLONG(0);
  ksfttotal_ = GOOGLE_LONGLONG(0);
  gttstotal_ = GOOGLE_LONGLONG(0);
  jsxdtotal_ = GOOGLE_LONGLONG(0);
  dbmrtotal_ = GOOGLE_LONGLONG(0);
  dbmrstatistics_ = GOOGLE_LONGLONG(0);
  dbmctotal_ = GOOGLE_LONGLONG(0);
  dbmcstatistics_ = GOOGLE_LONGLONG(0);
  fztbtotal_ = GOOGLE_LONGLONG(0);
  fdtbtotal_ = GOOGLE_LONGLONG(0);
  dkzttotal_ = GOOGLE_LONGLONG(0);
  dkdttotal_ = GOOGLE_LONGLONG(0);
  ydmcptotal_ = GOOGLE_LONGLONG(0);
  ydmrptotal_ = GOOGLE_LONGLONG(0);
  lszstotal_ = GOOGLE_LONGLONG(0);
  dyzstotal_ = GOOGLE_LONGLONG(0);
  jgmrgdtotal_ = GOOGLE_LONGLONG(0);
  jgmcgdtotal_ = GOOGLE_LONGLONG(0);
  dcjmrdtotal_ = GOOGLE_LONGLONG(0);
  dcjmcdtotal_ = GOOGLE_LONGLONG(0);
  fdmrgdtotal_ = GOOGLE_LONGLONG(0);
  fdmcgdtotal_ = GOOGLE_LONGLONG(0);
  mrcdtotal_ = GOOGLE_LONGLONG(0);
  mccdtotal_ = GOOGLE_LONGLONG(0);
  mrxdtotal_ = GOOGLE_LONGLONG(0);
  mcxdtotal_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DXSpiritStat::~DXSpiritStat() {
  // @@protoc_insertion_point(destructor:dzhyun.DXSpiritStat)
  SharedDtor();
}

void DXSpiritStat::SharedDtor() {
  obj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DXSpiritStat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DXSpiritStat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DXSpiritStat_descriptor_;
}

const DXSpiritStat& DXSpiritStat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2edxspirit_2eproto();
  return *default_instance_;
}

DXSpiritStat* DXSpiritStat::default_instance_ = NULL;

DXSpiritStat* DXSpiritStat::New(::google::protobuf::Arena* arena) const {
  DXSpiritStat* n = new DXSpiritStat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DXSpiritStat::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.DXSpiritStat)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DXSpiritStat, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DXSpiritStat*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(hjfstotal_, dbmctotal_);
    if (has_obj()) {
      obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(dbmcstatistics_, lszstotal_);
  }
  if (_has_bits_[16 / 32] & 16711680u) {
    ZR_(dyzstotal_, mrcdtotal_);
  }
  ZR_(mccdtotal_, mcxdtotal_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DXSpiritStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.DXSpiritStat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Obj = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj().data(), this->obj().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DXSpiritStat.Obj");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_HjfsTotal;
        break;
      }

      // optional int64 HjfsTotal = 2;
      case 2: {
        if (tag == 16) {
         parse_HjfsTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &hjfstotal_)));
          set_has_hjfstotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_KsftTotal;
        break;
      }

      // optional int64 KsftTotal = 3;
      case 3: {
        if (tag == 24) {
         parse_KsftTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ksfttotal_)));
          set_has_ksfttotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_GttsTotal;
        break;
      }

      // optional int64 GttsTotal = 4;
      case 4: {
        if (tag == 32) {
         parse_GttsTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gttstotal_)));
          set_has_gttstotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_JsxdTotal;
        break;
      }

      // optional int64 JsxdTotal = 5;
      case 5: {
        if (tag == 40) {
         parse_JsxdTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jsxdtotal_)));
          set_has_jsxdtotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_DbmrTotal;
        break;
      }

      // optional int64 DbmrTotal = 6;
      case 6: {
        if (tag == 48) {
         parse_DbmrTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dbmrtotal_)));
          set_has_dbmrtotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_DbmrStatistics;
        break;
      }

      // optional int64 DbmrStatistics = 7;
      case 7: {
        if (tag == 56) {
         parse_DbmrStatistics:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dbmrstatistics_)));
          set_has_dbmrstatistics();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_DbmcTotal;
        break;
      }

      // optional int64 DbmcTotal = 8;
      case 8: {
        if (tag == 64) {
         parse_DbmcTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dbmctotal_)));
          set_has_dbmctotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_DbmcStatistics;
        break;
      }

      // optional int64 DbmcStatistics = 9;
      case 9: {
        if (tag == 72) {
         parse_DbmcStatistics:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dbmcstatistics_)));
          set_has_dbmcstatistics();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_FztbTotal;
        break;
      }

      // optional int64 FztbTotal = 10;
      case 10: {
        if (tag == 80) {
         parse_FztbTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fztbtotal_)));
          set_has_fztbtotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_FdtbTotal;
        break;
      }

      // optional int64 FdtbTotal = 11;
      case 11: {
        if (tag == 88) {
         parse_FdtbTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fdtbtotal_)));
          set_has_fdtbtotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_DkztTotal;
        break;
      }

      // optional int64 DkztTotal = 12;
      case 12: {
        if (tag == 96) {
         parse_DkztTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dkzttotal_)));
          set_has_dkzttotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_DkdtTotal;
        break;
      }

      // optional int64 DkdtTotal = 13;
      case 13: {
        if (tag == 104) {
         parse_DkdtTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dkdttotal_)));
          set_has_dkdttotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_YdmcPTotal;
        break;
      }

      // optional int64 YdmcPTotal = 14;
      case 14: {
        if (tag == 112) {
         parse_YdmcPTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ydmcptotal_)));
          set_has_ydmcptotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_YdmrPTotal;
        break;
      }

      // optional int64 YdmrPTotal = 15;
      case 15: {
        if (tag == 120) {
         parse_YdmrPTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ydmrptotal_)));
          set_has_ydmrptotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_LszsTotal;
        break;
      }

      // optional int64 LszsTotal = 16;
      case 16: {
        if (tag == 128) {
         parse_LszsTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lszstotal_)));
          set_has_lszstotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_DyzsTotal;
        break;
      }

      // optional int64 DyzsTotal = 17;
      case 17: {
        if (tag == 136) {
         parse_DyzsTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dyzstotal_)));
          set_has_dyzstotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_JgmrgdTotal;
        break;
      }

      // optional int64 JgmrgdTotal = 18;
      case 18: {
        if (tag == 144) {
         parse_JgmrgdTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jgmrgdtotal_)));
          set_has_jgmrgdtotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_JgmcgdTotal;
        break;
      }

      // optional int64 JgmcgdTotal = 19;
      case 19: {
        if (tag == 152) {
         parse_JgmcgdTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jgmcgdtotal_)));
          set_has_jgmcgdtotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_DcjmrdTotal;
        break;
      }

      // optional int64 DcjmrdTotal = 20;
      case 20: {
        if (tag == 160) {
         parse_DcjmrdTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dcjmrdtotal_)));
          set_has_dcjmrdtotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_DcjmcdTotal;
        break;
      }

      // optional int64 DcjmcdTotal = 21;
      case 21: {
        if (tag == 168) {
         parse_DcjmcdTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dcjmcdtotal_)));
          set_has_dcjmcdtotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_FdmrgdTotal;
        break;
      }

      // optional int64 FdmrgdTotal = 22;
      case 22: {
        if (tag == 176) {
         parse_FdmrgdTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fdmrgdtotal_)));
          set_has_fdmrgdtotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_FdmcgdTotal;
        break;
      }

      // optional int64 FdmcgdTotal = 23;
      case 23: {
        if (tag == 184) {
         parse_FdmcgdTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fdmcgdtotal_)));
          set_has_fdmcgdtotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_MrcdTotal;
        break;
      }

      // optional int64 MrcdTotal = 24;
      case 24: {
        if (tag == 192) {
         parse_MrcdTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mrcdtotal_)));
          set_has_mrcdtotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_MccdTotal;
        break;
      }

      // optional int64 MccdTotal = 25;
      case 25: {
        if (tag == 200) {
         parse_MccdTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mccdtotal_)));
          set_has_mccdtotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_MrxdTotal;
        break;
      }

      // optional int64 MrxdTotal = 26;
      case 26: {
        if (tag == 208) {
         parse_MrxdTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mrxdtotal_)));
          set_has_mrxdtotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_McxdTotal;
        break;
      }

      // optional int64 McxdTotal = 27;
      case 27: {
        if (tag == 216) {
         parse_McxdTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mcxdtotal_)));
          set_has_mcxdtotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.DXSpiritStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.DXSpiritStat)
  return false;
#undef DO_
}

void DXSpiritStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.DXSpiritStat)
  // optional string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DXSpiritStat.Obj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj(), output);
  }

  // optional int64 HjfsTotal = 2;
  if (has_hjfstotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->hjfstotal(), output);
  }

  // optional int64 KsftTotal = 3;
  if (has_ksfttotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->ksfttotal(), output);
  }

  // optional int64 GttsTotal = 4;
  if (has_gttstotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->gttstotal(), output);
  }

  // optional int64 JsxdTotal = 5;
  if (has_jsxdtotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->jsxdtotal(), output);
  }

  // optional int64 DbmrTotal = 6;
  if (has_dbmrtotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->dbmrtotal(), output);
  }

  // optional int64 DbmrStatistics = 7;
  if (has_dbmrstatistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->dbmrstatistics(), output);
  }

  // optional int64 DbmcTotal = 8;
  if (has_dbmctotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->dbmctotal(), output);
  }

  // optional int64 DbmcStatistics = 9;
  if (has_dbmcstatistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->dbmcstatistics(), output);
  }

  // optional int64 FztbTotal = 10;
  if (has_fztbtotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->fztbtotal(), output);
  }

  // optional int64 FdtbTotal = 11;
  if (has_fdtbtotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->fdtbtotal(), output);
  }

  // optional int64 DkztTotal = 12;
  if (has_dkzttotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->dkzttotal(), output);
  }

  // optional int64 DkdtTotal = 13;
  if (has_dkdttotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->dkdttotal(), output);
  }

  // optional int64 YdmcPTotal = 14;
  if (has_ydmcptotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->ydmcptotal(), output);
  }

  // optional int64 YdmrPTotal = 15;
  if (has_ydmrptotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->ydmrptotal(), output);
  }

  // optional int64 LszsTotal = 16;
  if (has_lszstotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->lszstotal(), output);
  }

  // optional int64 DyzsTotal = 17;
  if (has_dyzstotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->dyzstotal(), output);
  }

  // optional int64 JgmrgdTotal = 18;
  if (has_jgmrgdtotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->jgmrgdtotal(), output);
  }

  // optional int64 JgmcgdTotal = 19;
  if (has_jgmcgdtotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(19, this->jgmcgdtotal(), output);
  }

  // optional int64 DcjmrdTotal = 20;
  if (has_dcjmrdtotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->dcjmrdtotal(), output);
  }

  // optional int64 DcjmcdTotal = 21;
  if (has_dcjmcdtotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->dcjmcdtotal(), output);
  }

  // optional int64 FdmrgdTotal = 22;
  if (has_fdmrgdtotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->fdmrgdtotal(), output);
  }

  // optional int64 FdmcgdTotal = 23;
  if (has_fdmcgdtotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(23, this->fdmcgdtotal(), output);
  }

  // optional int64 MrcdTotal = 24;
  if (has_mrcdtotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(24, this->mrcdtotal(), output);
  }

  // optional int64 MccdTotal = 25;
  if (has_mccdtotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(25, this->mccdtotal(), output);
  }

  // optional int64 MrxdTotal = 26;
  if (has_mrxdtotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(26, this->mrxdtotal(), output);
  }

  // optional int64 McxdTotal = 27;
  if (has_mcxdtotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(27, this->mcxdtotal(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.DXSpiritStat)
}

::google::protobuf::uint8* DXSpiritStat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.DXSpiritStat)
  // optional string Obj = 1;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj().data(), this->obj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DXSpiritStat.Obj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj(), target);
  }

  // optional int64 HjfsTotal = 2;
  if (has_hjfstotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->hjfstotal(), target);
  }

  // optional int64 KsftTotal = 3;
  if (has_ksfttotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->ksfttotal(), target);
  }

  // optional int64 GttsTotal = 4;
  if (has_gttstotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->gttstotal(), target);
  }

  // optional int64 JsxdTotal = 5;
  if (has_jsxdtotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->jsxdtotal(), target);
  }

  // optional int64 DbmrTotal = 6;
  if (has_dbmrtotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->dbmrtotal(), target);
  }

  // optional int64 DbmrStatistics = 7;
  if (has_dbmrstatistics()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->dbmrstatistics(), target);
  }

  // optional int64 DbmcTotal = 8;
  if (has_dbmctotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->dbmctotal(), target);
  }

  // optional int64 DbmcStatistics = 9;
  if (has_dbmcstatistics()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->dbmcstatistics(), target);
  }

  // optional int64 FztbTotal = 10;
  if (has_fztbtotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->fztbtotal(), target);
  }

  // optional int64 FdtbTotal = 11;
  if (has_fdtbtotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->fdtbtotal(), target);
  }

  // optional int64 DkztTotal = 12;
  if (has_dkzttotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->dkzttotal(), target);
  }

  // optional int64 DkdtTotal = 13;
  if (has_dkdttotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->dkdttotal(), target);
  }

  // optional int64 YdmcPTotal = 14;
  if (has_ydmcptotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->ydmcptotal(), target);
  }

  // optional int64 YdmrPTotal = 15;
  if (has_ydmrptotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->ydmrptotal(), target);
  }

  // optional int64 LszsTotal = 16;
  if (has_lszstotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->lszstotal(), target);
  }

  // optional int64 DyzsTotal = 17;
  if (has_dyzstotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->dyzstotal(), target);
  }

  // optional int64 JgmrgdTotal = 18;
  if (has_jgmrgdtotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->jgmrgdtotal(), target);
  }

  // optional int64 JgmcgdTotal = 19;
  if (has_jgmcgdtotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(19, this->jgmcgdtotal(), target);
  }

  // optional int64 DcjmrdTotal = 20;
  if (has_dcjmrdtotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->dcjmrdtotal(), target);
  }

  // optional int64 DcjmcdTotal = 21;
  if (has_dcjmcdtotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->dcjmcdtotal(), target);
  }

  // optional int64 FdmrgdTotal = 22;
  if (has_fdmrgdtotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->fdmrgdtotal(), target);
  }

  // optional int64 FdmcgdTotal = 23;
  if (has_fdmcgdtotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(23, this->fdmcgdtotal(), target);
  }

  // optional int64 MrcdTotal = 24;
  if (has_mrcdtotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(24, this->mrcdtotal(), target);
  }

  // optional int64 MccdTotal = 25;
  if (has_mccdtotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(25, this->mccdtotal(), target);
  }

  // optional int64 MrxdTotal = 26;
  if (has_mrxdtotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(26, this->mrxdtotal(), target);
  }

  // optional int64 McxdTotal = 27;
  if (has_mcxdtotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(27, this->mcxdtotal(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.DXSpiritStat)
  return target;
}

int DXSpiritStat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.DXSpiritStat)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional string Obj = 1;
    if (has_obj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->obj());
    }

    // optional int64 HjfsTotal = 2;
    if (has_hjfstotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->hjfstotal());
    }

    // optional int64 KsftTotal = 3;
    if (has_ksfttotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ksfttotal());
    }

    // optional int64 GttsTotal = 4;
    if (has_gttstotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gttstotal());
    }

    // optional int64 JsxdTotal = 5;
    if (has_jsxdtotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jsxdtotal());
    }

    // optional int64 DbmrTotal = 6;
    if (has_dbmrtotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dbmrtotal());
    }

    // optional int64 DbmrStatistics = 7;
    if (has_dbmrstatistics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dbmrstatistics());
    }

    // optional int64 DbmcTotal = 8;
    if (has_dbmctotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dbmctotal());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int64 DbmcStatistics = 9;
    if (has_dbmcstatistics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dbmcstatistics());
    }

    // optional int64 FztbTotal = 10;
    if (has_fztbtotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fztbtotal());
    }

    // optional int64 FdtbTotal = 11;
    if (has_fdtbtotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fdtbtotal());
    }

    // optional int64 DkztTotal = 12;
    if (has_dkzttotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dkzttotal());
    }

    // optional int64 DkdtTotal = 13;
    if (has_dkdttotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dkdttotal());
    }

    // optional int64 YdmcPTotal = 14;
    if (has_ydmcptotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ydmcptotal());
    }

    // optional int64 YdmrPTotal = 15;
    if (has_ydmrptotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ydmrptotal());
    }

    // optional int64 LszsTotal = 16;
    if (has_lszstotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lszstotal());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional int64 DyzsTotal = 17;
    if (has_dyzstotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dyzstotal());
    }

    // optional int64 JgmrgdTotal = 18;
    if (has_jgmrgdtotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jgmrgdtotal());
    }

    // optional int64 JgmcgdTotal = 19;
    if (has_jgmcgdtotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jgmcgdtotal());
    }

    // optional int64 DcjmrdTotal = 20;
    if (has_dcjmrdtotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dcjmrdtotal());
    }

    // optional int64 DcjmcdTotal = 21;
    if (has_dcjmcdtotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dcjmcdtotal());
    }

    // optional int64 FdmrgdTotal = 22;
    if (has_fdmrgdtotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fdmrgdtotal());
    }

    // optional int64 FdmcgdTotal = 23;
    if (has_fdmcgdtotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fdmcgdtotal());
    }

    // optional int64 MrcdTotal = 24;
    if (has_mrcdtotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mrcdtotal());
    }

  }
  if (_has_bits_[24 / 32] & 117440512u) {
    // optional int64 MccdTotal = 25;
    if (has_mccdtotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mccdtotal());
    }

    // optional int64 MrxdTotal = 26;
    if (has_mrxdtotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mrxdtotal());
    }

    // optional int64 McxdTotal = 27;
    if (has_mcxdtotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mcxdtotal());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DXSpiritStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.DXSpiritStat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DXSpiritStat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DXSpiritStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.DXSpiritStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.DXSpiritStat)
    MergeFrom(*source);
  }
}

void DXSpiritStat::MergeFrom(const DXSpiritStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.DXSpiritStat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj()) {
      set_has_obj();
      obj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_);
    }
    if (from.has_hjfstotal()) {
      set_hjfstotal(from.hjfstotal());
    }
    if (from.has_ksfttotal()) {
      set_ksfttotal(from.ksfttotal());
    }
    if (from.has_gttstotal()) {
      set_gttstotal(from.gttstotal());
    }
    if (from.has_jsxdtotal()) {
      set_jsxdtotal(from.jsxdtotal());
    }
    if (from.has_dbmrtotal()) {
      set_dbmrtotal(from.dbmrtotal());
    }
    if (from.has_dbmrstatistics()) {
      set_dbmrstatistics(from.dbmrstatistics());
    }
    if (from.has_dbmctotal()) {
      set_dbmctotal(from.dbmctotal());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_dbmcstatistics()) {
      set_dbmcstatistics(from.dbmcstatistics());
    }
    if (from.has_fztbtotal()) {
      set_fztbtotal(from.fztbtotal());
    }
    if (from.has_fdtbtotal()) {
      set_fdtbtotal(from.fdtbtotal());
    }
    if (from.has_dkzttotal()) {
      set_dkzttotal(from.dkzttotal());
    }
    if (from.has_dkdttotal()) {
      set_dkdttotal(from.dkdttotal());
    }
    if (from.has_ydmcptotal()) {
      set_ydmcptotal(from.ydmcptotal());
    }
    if (from.has_ydmrptotal()) {
      set_ydmrptotal(from.ydmrptotal());
    }
    if (from.has_lszstotal()) {
      set_lszstotal(from.lszstotal());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_dyzstotal()) {
      set_dyzstotal(from.dyzstotal());
    }
    if (from.has_jgmrgdtotal()) {
      set_jgmrgdtotal(from.jgmrgdtotal());
    }
    if (from.has_jgmcgdtotal()) {
      set_jgmcgdtotal(from.jgmcgdtotal());
    }
    if (from.has_dcjmrdtotal()) {
      set_dcjmrdtotal(from.dcjmrdtotal());
    }
    if (from.has_dcjmcdtotal()) {
      set_dcjmcdtotal(from.dcjmcdtotal());
    }
    if (from.has_fdmrgdtotal()) {
      set_fdmrgdtotal(from.fdmrgdtotal());
    }
    if (from.has_fdmcgdtotal()) {
      set_fdmcgdtotal(from.fdmcgdtotal());
    }
    if (from.has_mrcdtotal()) {
      set_mrcdtotal(from.mrcdtotal());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_mccdtotal()) {
      set_mccdtotal(from.mccdtotal());
    }
    if (from.has_mrxdtotal()) {
      set_mrxdtotal(from.mrxdtotal());
    }
    if (from.has_mcxdtotal()) {
      set_mcxdtotal(from.mcxdtotal());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DXSpiritStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.DXSpiritStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DXSpiritStat::CopyFrom(const DXSpiritStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.DXSpiritStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DXSpiritStat::IsInitialized() const {

  return true;
}

void DXSpiritStat::Swap(DXSpiritStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DXSpiritStat::InternalSwap(DXSpiritStat* other) {
  obj_.Swap(&other->obj_);
  std::swap(hjfstotal_, other->hjfstotal_);
  std::swap(ksfttotal_, other->ksfttotal_);
  std::swap(gttstotal_, other->gttstotal_);
  std::swap(jsxdtotal_, other->jsxdtotal_);
  std::swap(dbmrtotal_, other->dbmrtotal_);
  std::swap(dbmrstatistics_, other->dbmrstatistics_);
  std::swap(dbmctotal_, other->dbmctotal_);
  std::swap(dbmcstatistics_, other->dbmcstatistics_);
  std::swap(fztbtotal_, other->fztbtotal_);
  std::swap(fdtbtotal_, other->fdtbtotal_);
  std::swap(dkzttotal_, other->dkzttotal_);
  std::swap(dkdttotal_, other->dkdttotal_);
  std::swap(ydmcptotal_, other->ydmcptotal_);
  std::swap(ydmrptotal_, other->ydmrptotal_);
  std::swap(lszstotal_, other->lszstotal_);
  std::swap(dyzstotal_, other->dyzstotal_);
  std::swap(jgmrgdtotal_, other->jgmrgdtotal_);
  std::swap(jgmcgdtotal_, other->jgmcgdtotal_);
  std::swap(dcjmrdtotal_, other->dcjmrdtotal_);
  std::swap(dcjmcdtotal_, other->dcjmcdtotal_);
  std::swap(fdmrgdtotal_, other->fdmrgdtotal_);
  std::swap(fdmcgdtotal_, other->fdmcgdtotal_);
  std::swap(mrcdtotal_, other->mrcdtotal_);
  std::swap(mccdtotal_, other->mccdtotal_);
  std::swap(mrxdtotal_, other->mrxdtotal_);
  std::swap(mcxdtotal_, other->mcxdtotal_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DXSpiritStat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DXSpiritStat_descriptor_;
  metadata.reflection = DXSpiritStat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DXSpiritStat

// optional string Obj = 1;
bool DXSpiritStat::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DXSpiritStat::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
void DXSpiritStat::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
void DXSpiritStat::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
 const ::std::string& DXSpiritStat::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DXSpiritStat::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.Obj)
}
 void DXSpiritStat::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DXSpiritStat.Obj)
}
 void DXSpiritStat::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DXSpiritStat.Obj)
}
 ::std::string* DXSpiritStat::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.DXSpiritStat.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DXSpiritStat::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.DXSpiritStat.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DXSpiritStat::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DXSpiritStat.Obj)
}

// optional int64 HjfsTotal = 2;
bool DXSpiritStat::has_hjfstotal() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DXSpiritStat::set_has_hjfstotal() {
  _has_bits_[0] |= 0x00000002u;
}
void DXSpiritStat::clear_has_hjfstotal() {
  _has_bits_[0] &= ~0x00000002u;
}
void DXSpiritStat::clear_hjfstotal() {
  hjfstotal_ = GOOGLE_LONGLONG(0);
  clear_has_hjfstotal();
}
 ::google::protobuf::int64 DXSpiritStat::hjfstotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.HjfsTotal)
  return hjfstotal_;
}
 void DXSpiritStat::set_hjfstotal(::google::protobuf::int64 value) {
  set_has_hjfstotal();
  hjfstotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.HjfsTotal)
}

// optional int64 KsftTotal = 3;
bool DXSpiritStat::has_ksfttotal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DXSpiritStat::set_has_ksfttotal() {
  _has_bits_[0] |= 0x00000004u;
}
void DXSpiritStat::clear_has_ksfttotal() {
  _has_bits_[0] &= ~0x00000004u;
}
void DXSpiritStat::clear_ksfttotal() {
  ksfttotal_ = GOOGLE_LONGLONG(0);
  clear_has_ksfttotal();
}
 ::google::protobuf::int64 DXSpiritStat::ksfttotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.KsftTotal)
  return ksfttotal_;
}
 void DXSpiritStat::set_ksfttotal(::google::protobuf::int64 value) {
  set_has_ksfttotal();
  ksfttotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.KsftTotal)
}

// optional int64 GttsTotal = 4;
bool DXSpiritStat::has_gttstotal() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DXSpiritStat::set_has_gttstotal() {
  _has_bits_[0] |= 0x00000008u;
}
void DXSpiritStat::clear_has_gttstotal() {
  _has_bits_[0] &= ~0x00000008u;
}
void DXSpiritStat::clear_gttstotal() {
  gttstotal_ = GOOGLE_LONGLONG(0);
  clear_has_gttstotal();
}
 ::google::protobuf::int64 DXSpiritStat::gttstotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.GttsTotal)
  return gttstotal_;
}
 void DXSpiritStat::set_gttstotal(::google::protobuf::int64 value) {
  set_has_gttstotal();
  gttstotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.GttsTotal)
}

// optional int64 JsxdTotal = 5;
bool DXSpiritStat::has_jsxdtotal() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DXSpiritStat::set_has_jsxdtotal() {
  _has_bits_[0] |= 0x00000010u;
}
void DXSpiritStat::clear_has_jsxdtotal() {
  _has_bits_[0] &= ~0x00000010u;
}
void DXSpiritStat::clear_jsxdtotal() {
  jsxdtotal_ = GOOGLE_LONGLONG(0);
  clear_has_jsxdtotal();
}
 ::google::protobuf::int64 DXSpiritStat::jsxdtotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.JsxdTotal)
  return jsxdtotal_;
}
 void DXSpiritStat::set_jsxdtotal(::google::protobuf::int64 value) {
  set_has_jsxdtotal();
  jsxdtotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.JsxdTotal)
}

// optional int64 DbmrTotal = 6;
bool DXSpiritStat::has_dbmrtotal() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DXSpiritStat::set_has_dbmrtotal() {
  _has_bits_[0] |= 0x00000020u;
}
void DXSpiritStat::clear_has_dbmrtotal() {
  _has_bits_[0] &= ~0x00000020u;
}
void DXSpiritStat::clear_dbmrtotal() {
  dbmrtotal_ = GOOGLE_LONGLONG(0);
  clear_has_dbmrtotal();
}
 ::google::protobuf::int64 DXSpiritStat::dbmrtotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.DbmrTotal)
  return dbmrtotal_;
}
 void DXSpiritStat::set_dbmrtotal(::google::protobuf::int64 value) {
  set_has_dbmrtotal();
  dbmrtotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.DbmrTotal)
}

// optional int64 DbmrStatistics = 7;
bool DXSpiritStat::has_dbmrstatistics() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void DXSpiritStat::set_has_dbmrstatistics() {
  _has_bits_[0] |= 0x00000040u;
}
void DXSpiritStat::clear_has_dbmrstatistics() {
  _has_bits_[0] &= ~0x00000040u;
}
void DXSpiritStat::clear_dbmrstatistics() {
  dbmrstatistics_ = GOOGLE_LONGLONG(0);
  clear_has_dbmrstatistics();
}
 ::google::protobuf::int64 DXSpiritStat::dbmrstatistics() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.DbmrStatistics)
  return dbmrstatistics_;
}
 void DXSpiritStat::set_dbmrstatistics(::google::protobuf::int64 value) {
  set_has_dbmrstatistics();
  dbmrstatistics_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.DbmrStatistics)
}

// optional int64 DbmcTotal = 8;
bool DXSpiritStat::has_dbmctotal() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void DXSpiritStat::set_has_dbmctotal() {
  _has_bits_[0] |= 0x00000080u;
}
void DXSpiritStat::clear_has_dbmctotal() {
  _has_bits_[0] &= ~0x00000080u;
}
void DXSpiritStat::clear_dbmctotal() {
  dbmctotal_ = GOOGLE_LONGLONG(0);
  clear_has_dbmctotal();
}
 ::google::protobuf::int64 DXSpiritStat::dbmctotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.DbmcTotal)
  return dbmctotal_;
}
 void DXSpiritStat::set_dbmctotal(::google::protobuf::int64 value) {
  set_has_dbmctotal();
  dbmctotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.DbmcTotal)
}

// optional int64 DbmcStatistics = 9;
bool DXSpiritStat::has_dbmcstatistics() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void DXSpiritStat::set_has_dbmcstatistics() {
  _has_bits_[0] |= 0x00000100u;
}
void DXSpiritStat::clear_has_dbmcstatistics() {
  _has_bits_[0] &= ~0x00000100u;
}
void DXSpiritStat::clear_dbmcstatistics() {
  dbmcstatistics_ = GOOGLE_LONGLONG(0);
  clear_has_dbmcstatistics();
}
 ::google::protobuf::int64 DXSpiritStat::dbmcstatistics() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.DbmcStatistics)
  return dbmcstatistics_;
}
 void DXSpiritStat::set_dbmcstatistics(::google::protobuf::int64 value) {
  set_has_dbmcstatistics();
  dbmcstatistics_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.DbmcStatistics)
}

// optional int64 FztbTotal = 10;
bool DXSpiritStat::has_fztbtotal() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void DXSpiritStat::set_has_fztbtotal() {
  _has_bits_[0] |= 0x00000200u;
}
void DXSpiritStat::clear_has_fztbtotal() {
  _has_bits_[0] &= ~0x00000200u;
}
void DXSpiritStat::clear_fztbtotal() {
  fztbtotal_ = GOOGLE_LONGLONG(0);
  clear_has_fztbtotal();
}
 ::google::protobuf::int64 DXSpiritStat::fztbtotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.FztbTotal)
  return fztbtotal_;
}
 void DXSpiritStat::set_fztbtotal(::google::protobuf::int64 value) {
  set_has_fztbtotal();
  fztbtotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.FztbTotal)
}

// optional int64 FdtbTotal = 11;
bool DXSpiritStat::has_fdtbtotal() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void DXSpiritStat::set_has_fdtbtotal() {
  _has_bits_[0] |= 0x00000400u;
}
void DXSpiritStat::clear_has_fdtbtotal() {
  _has_bits_[0] &= ~0x00000400u;
}
void DXSpiritStat::clear_fdtbtotal() {
  fdtbtotal_ = GOOGLE_LONGLONG(0);
  clear_has_fdtbtotal();
}
 ::google::protobuf::int64 DXSpiritStat::fdtbtotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.FdtbTotal)
  return fdtbtotal_;
}
 void DXSpiritStat::set_fdtbtotal(::google::protobuf::int64 value) {
  set_has_fdtbtotal();
  fdtbtotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.FdtbTotal)
}

// optional int64 DkztTotal = 12;
bool DXSpiritStat::has_dkzttotal() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void DXSpiritStat::set_has_dkzttotal() {
  _has_bits_[0] |= 0x00000800u;
}
void DXSpiritStat::clear_has_dkzttotal() {
  _has_bits_[0] &= ~0x00000800u;
}
void DXSpiritStat::clear_dkzttotal() {
  dkzttotal_ = GOOGLE_LONGLONG(0);
  clear_has_dkzttotal();
}
 ::google::protobuf::int64 DXSpiritStat::dkzttotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.DkztTotal)
  return dkzttotal_;
}
 void DXSpiritStat::set_dkzttotal(::google::protobuf::int64 value) {
  set_has_dkzttotal();
  dkzttotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.DkztTotal)
}

// optional int64 DkdtTotal = 13;
bool DXSpiritStat::has_dkdttotal() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void DXSpiritStat::set_has_dkdttotal() {
  _has_bits_[0] |= 0x00001000u;
}
void DXSpiritStat::clear_has_dkdttotal() {
  _has_bits_[0] &= ~0x00001000u;
}
void DXSpiritStat::clear_dkdttotal() {
  dkdttotal_ = GOOGLE_LONGLONG(0);
  clear_has_dkdttotal();
}
 ::google::protobuf::int64 DXSpiritStat::dkdttotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.DkdtTotal)
  return dkdttotal_;
}
 void DXSpiritStat::set_dkdttotal(::google::protobuf::int64 value) {
  set_has_dkdttotal();
  dkdttotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.DkdtTotal)
}

// optional int64 YdmcPTotal = 14;
bool DXSpiritStat::has_ydmcptotal() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void DXSpiritStat::set_has_ydmcptotal() {
  _has_bits_[0] |= 0x00002000u;
}
void DXSpiritStat::clear_has_ydmcptotal() {
  _has_bits_[0] &= ~0x00002000u;
}
void DXSpiritStat::clear_ydmcptotal() {
  ydmcptotal_ = GOOGLE_LONGLONG(0);
  clear_has_ydmcptotal();
}
 ::google::protobuf::int64 DXSpiritStat::ydmcptotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.YdmcPTotal)
  return ydmcptotal_;
}
 void DXSpiritStat::set_ydmcptotal(::google::protobuf::int64 value) {
  set_has_ydmcptotal();
  ydmcptotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.YdmcPTotal)
}

// optional int64 YdmrPTotal = 15;
bool DXSpiritStat::has_ydmrptotal() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void DXSpiritStat::set_has_ydmrptotal() {
  _has_bits_[0] |= 0x00004000u;
}
void DXSpiritStat::clear_has_ydmrptotal() {
  _has_bits_[0] &= ~0x00004000u;
}
void DXSpiritStat::clear_ydmrptotal() {
  ydmrptotal_ = GOOGLE_LONGLONG(0);
  clear_has_ydmrptotal();
}
 ::google::protobuf::int64 DXSpiritStat::ydmrptotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.YdmrPTotal)
  return ydmrptotal_;
}
 void DXSpiritStat::set_ydmrptotal(::google::protobuf::int64 value) {
  set_has_ydmrptotal();
  ydmrptotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.YdmrPTotal)
}

// optional int64 LszsTotal = 16;
bool DXSpiritStat::has_lszstotal() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void DXSpiritStat::set_has_lszstotal() {
  _has_bits_[0] |= 0x00008000u;
}
void DXSpiritStat::clear_has_lszstotal() {
  _has_bits_[0] &= ~0x00008000u;
}
void DXSpiritStat::clear_lszstotal() {
  lszstotal_ = GOOGLE_LONGLONG(0);
  clear_has_lszstotal();
}
 ::google::protobuf::int64 DXSpiritStat::lszstotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.LszsTotal)
  return lszstotal_;
}
 void DXSpiritStat::set_lszstotal(::google::protobuf::int64 value) {
  set_has_lszstotal();
  lszstotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.LszsTotal)
}

// optional int64 DyzsTotal = 17;
bool DXSpiritStat::has_dyzstotal() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void DXSpiritStat::set_has_dyzstotal() {
  _has_bits_[0] |= 0x00010000u;
}
void DXSpiritStat::clear_has_dyzstotal() {
  _has_bits_[0] &= ~0x00010000u;
}
void DXSpiritStat::clear_dyzstotal() {
  dyzstotal_ = GOOGLE_LONGLONG(0);
  clear_has_dyzstotal();
}
 ::google::protobuf::int64 DXSpiritStat::dyzstotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.DyzsTotal)
  return dyzstotal_;
}
 void DXSpiritStat::set_dyzstotal(::google::protobuf::int64 value) {
  set_has_dyzstotal();
  dyzstotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.DyzsTotal)
}

// optional int64 JgmrgdTotal = 18;
bool DXSpiritStat::has_jgmrgdtotal() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void DXSpiritStat::set_has_jgmrgdtotal() {
  _has_bits_[0] |= 0x00020000u;
}
void DXSpiritStat::clear_has_jgmrgdtotal() {
  _has_bits_[0] &= ~0x00020000u;
}
void DXSpiritStat::clear_jgmrgdtotal() {
  jgmrgdtotal_ = GOOGLE_LONGLONG(0);
  clear_has_jgmrgdtotal();
}
 ::google::protobuf::int64 DXSpiritStat::jgmrgdtotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.JgmrgdTotal)
  return jgmrgdtotal_;
}
 void DXSpiritStat::set_jgmrgdtotal(::google::protobuf::int64 value) {
  set_has_jgmrgdtotal();
  jgmrgdtotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.JgmrgdTotal)
}

// optional int64 JgmcgdTotal = 19;
bool DXSpiritStat::has_jgmcgdtotal() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void DXSpiritStat::set_has_jgmcgdtotal() {
  _has_bits_[0] |= 0x00040000u;
}
void DXSpiritStat::clear_has_jgmcgdtotal() {
  _has_bits_[0] &= ~0x00040000u;
}
void DXSpiritStat::clear_jgmcgdtotal() {
  jgmcgdtotal_ = GOOGLE_LONGLONG(0);
  clear_has_jgmcgdtotal();
}
 ::google::protobuf::int64 DXSpiritStat::jgmcgdtotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.JgmcgdTotal)
  return jgmcgdtotal_;
}
 void DXSpiritStat::set_jgmcgdtotal(::google::protobuf::int64 value) {
  set_has_jgmcgdtotal();
  jgmcgdtotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.JgmcgdTotal)
}

// optional int64 DcjmrdTotal = 20;
bool DXSpiritStat::has_dcjmrdtotal() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void DXSpiritStat::set_has_dcjmrdtotal() {
  _has_bits_[0] |= 0x00080000u;
}
void DXSpiritStat::clear_has_dcjmrdtotal() {
  _has_bits_[0] &= ~0x00080000u;
}
void DXSpiritStat::clear_dcjmrdtotal() {
  dcjmrdtotal_ = GOOGLE_LONGLONG(0);
  clear_has_dcjmrdtotal();
}
 ::google::protobuf::int64 DXSpiritStat::dcjmrdtotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.DcjmrdTotal)
  return dcjmrdtotal_;
}
 void DXSpiritStat::set_dcjmrdtotal(::google::protobuf::int64 value) {
  set_has_dcjmrdtotal();
  dcjmrdtotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.DcjmrdTotal)
}

// optional int64 DcjmcdTotal = 21;
bool DXSpiritStat::has_dcjmcdtotal() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void DXSpiritStat::set_has_dcjmcdtotal() {
  _has_bits_[0] |= 0x00100000u;
}
void DXSpiritStat::clear_has_dcjmcdtotal() {
  _has_bits_[0] &= ~0x00100000u;
}
void DXSpiritStat::clear_dcjmcdtotal() {
  dcjmcdtotal_ = GOOGLE_LONGLONG(0);
  clear_has_dcjmcdtotal();
}
 ::google::protobuf::int64 DXSpiritStat::dcjmcdtotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.DcjmcdTotal)
  return dcjmcdtotal_;
}
 void DXSpiritStat::set_dcjmcdtotal(::google::protobuf::int64 value) {
  set_has_dcjmcdtotal();
  dcjmcdtotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.DcjmcdTotal)
}

// optional int64 FdmrgdTotal = 22;
bool DXSpiritStat::has_fdmrgdtotal() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void DXSpiritStat::set_has_fdmrgdtotal() {
  _has_bits_[0] |= 0x00200000u;
}
void DXSpiritStat::clear_has_fdmrgdtotal() {
  _has_bits_[0] &= ~0x00200000u;
}
void DXSpiritStat::clear_fdmrgdtotal() {
  fdmrgdtotal_ = GOOGLE_LONGLONG(0);
  clear_has_fdmrgdtotal();
}
 ::google::protobuf::int64 DXSpiritStat::fdmrgdtotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.FdmrgdTotal)
  return fdmrgdtotal_;
}
 void DXSpiritStat::set_fdmrgdtotal(::google::protobuf::int64 value) {
  set_has_fdmrgdtotal();
  fdmrgdtotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.FdmrgdTotal)
}

// optional int64 FdmcgdTotal = 23;
bool DXSpiritStat::has_fdmcgdtotal() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void DXSpiritStat::set_has_fdmcgdtotal() {
  _has_bits_[0] |= 0x00400000u;
}
void DXSpiritStat::clear_has_fdmcgdtotal() {
  _has_bits_[0] &= ~0x00400000u;
}
void DXSpiritStat::clear_fdmcgdtotal() {
  fdmcgdtotal_ = GOOGLE_LONGLONG(0);
  clear_has_fdmcgdtotal();
}
 ::google::protobuf::int64 DXSpiritStat::fdmcgdtotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.FdmcgdTotal)
  return fdmcgdtotal_;
}
 void DXSpiritStat::set_fdmcgdtotal(::google::protobuf::int64 value) {
  set_has_fdmcgdtotal();
  fdmcgdtotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.FdmcgdTotal)
}

// optional int64 MrcdTotal = 24;
bool DXSpiritStat::has_mrcdtotal() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void DXSpiritStat::set_has_mrcdtotal() {
  _has_bits_[0] |= 0x00800000u;
}
void DXSpiritStat::clear_has_mrcdtotal() {
  _has_bits_[0] &= ~0x00800000u;
}
void DXSpiritStat::clear_mrcdtotal() {
  mrcdtotal_ = GOOGLE_LONGLONG(0);
  clear_has_mrcdtotal();
}
 ::google::protobuf::int64 DXSpiritStat::mrcdtotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.MrcdTotal)
  return mrcdtotal_;
}
 void DXSpiritStat::set_mrcdtotal(::google::protobuf::int64 value) {
  set_has_mrcdtotal();
  mrcdtotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.MrcdTotal)
}

// optional int64 MccdTotal = 25;
bool DXSpiritStat::has_mccdtotal() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void DXSpiritStat::set_has_mccdtotal() {
  _has_bits_[0] |= 0x01000000u;
}
void DXSpiritStat::clear_has_mccdtotal() {
  _has_bits_[0] &= ~0x01000000u;
}
void DXSpiritStat::clear_mccdtotal() {
  mccdtotal_ = GOOGLE_LONGLONG(0);
  clear_has_mccdtotal();
}
 ::google::protobuf::int64 DXSpiritStat::mccdtotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.MccdTotal)
  return mccdtotal_;
}
 void DXSpiritStat::set_mccdtotal(::google::protobuf::int64 value) {
  set_has_mccdtotal();
  mccdtotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.MccdTotal)
}

// optional int64 MrxdTotal = 26;
bool DXSpiritStat::has_mrxdtotal() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void DXSpiritStat::set_has_mrxdtotal() {
  _has_bits_[0] |= 0x02000000u;
}
void DXSpiritStat::clear_has_mrxdtotal() {
  _has_bits_[0] &= ~0x02000000u;
}
void DXSpiritStat::clear_mrxdtotal() {
  mrxdtotal_ = GOOGLE_LONGLONG(0);
  clear_has_mrxdtotal();
}
 ::google::protobuf::int64 DXSpiritStat::mrxdtotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.MrxdTotal)
  return mrxdtotal_;
}
 void DXSpiritStat::set_mrxdtotal(::google::protobuf::int64 value) {
  set_has_mrxdtotal();
  mrxdtotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.MrxdTotal)
}

// optional int64 McxdTotal = 27;
bool DXSpiritStat::has_mcxdtotal() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void DXSpiritStat::set_has_mcxdtotal() {
  _has_bits_[0] |= 0x04000000u;
}
void DXSpiritStat::clear_has_mcxdtotal() {
  _has_bits_[0] &= ~0x04000000u;
}
void DXSpiritStat::clear_mcxdtotal() {
  mcxdtotal_ = GOOGLE_LONGLONG(0);
  clear_has_mcxdtotal();
}
 ::google::protobuf::int64 DXSpiritStat::mcxdtotal() const {
  // @@protoc_insertion_point(field_get:dzhyun.DXSpiritStat.McxdTotal)
  return mcxdtotal_;
}
 void DXSpiritStat::set_mcxdtotal(::google::protobuf::int64 value) {
  set_has_mcxdtotal();
  mcxdtotal_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DXSpiritStat.McxdTotal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dzhyun

// @@protoc_insertion_point(global_scope)
