// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dzhua.proto

#ifndef PROTOBUF_dzhua_2eproto__INCLUDED
#define PROTOBUF_dzhua_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace dzhyun {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_dzhua_2eproto();
void protobuf_AssignDesc_dzhua_2eproto();
void protobuf_ShutdownFile_dzhua_2eproto();

class ChildResponse;
class GroupResponse;
class UAResponse;

// ===================================================================

class UAResponse : public ::google::protobuf::Message {
 public:
  UAResponse();
  virtual ~UAResponse();

  UAResponse(const UAResponse& from);

  inline UAResponse& operator=(const UAResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UAResponse& default_instance();

  void Swap(UAResponse* other);

  // implements Message ----------------------------------------------

  inline UAResponse* New() const { return New(NULL); }

  UAResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UAResponse& from);
  void MergeFrom(const UAResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UAResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string Qid = 1;
  bool has_qid() const;
  void clear_qid();
  static const int kQidFieldNumber = 1;
  const ::std::string& qid() const;
  void set_qid(const ::std::string& value);
  void set_qid(const char* value);
  void set_qid(const char* value, size_t size);
  ::std::string* mutable_qid();
  ::std::string* release_qid();
  void set_allocated_qid(::std::string* qid);

  // required int32 Err = 2;
  bool has_err() const;
  void clear_err();
  static const int kErrFieldNumber = 2;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // required uint32 Counter = 3;
  bool has_counter() const;
  void clear_counter();
  static const int kCounterFieldNumber = 3;
  ::google::protobuf::uint32 counter() const;
  void set_counter(::google::protobuf::uint32 value);

  // optional bytes Data = 4;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:dzhyun.UAResponse)
 private:
  inline void set_has_qid();
  inline void clear_has_qid();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_counter();
  inline void clear_has_counter();
  inline void set_has_data();
  inline void clear_has_data();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr qid_;
  ::google::protobuf::int32 err_;
  ::google::protobuf::uint32 counter_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend void  protobuf_AddDesc_dzhua_2eproto();
  friend void protobuf_AssignDesc_dzhua_2eproto();
  friend void protobuf_ShutdownFile_dzhua_2eproto();

  void InitAsDefaultInstance();
  static UAResponse* default_instance_;
};
// -------------------------------------------------------------------

class ChildResponse : public ::google::protobuf::Message {
 public:
  ChildResponse();
  virtual ~ChildResponse();

  ChildResponse(const ChildResponse& from);

  inline ChildResponse& operator=(const ChildResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChildResponse& default_instance();

  void Swap(ChildResponse* other);

  // implements Message ----------------------------------------------

  inline ChildResponse* New() const { return New(NULL); }

  ChildResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChildResponse& from);
  void MergeFrom(const ChildResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChildResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 No = 1;
  bool has_no() const;
  void clear_no();
  static const int kNoFieldNumber = 1;
  ::google::protobuf::int32 no() const;
  void set_no(::google::protobuf::int32 value);

  // optional bytes Data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:dzhyun.ChildResponse)
 private:
  inline void set_has_no();
  inline void clear_has_no();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 no_;
  friend void  protobuf_AddDesc_dzhua_2eproto();
  friend void protobuf_AssignDesc_dzhua_2eproto();
  friend void protobuf_ShutdownFile_dzhua_2eproto();

  void InitAsDefaultInstance();
  static ChildResponse* default_instance_;
};
// -------------------------------------------------------------------

class GroupResponse : public ::google::protobuf::Message {
 public:
  GroupResponse();
  virtual ~GroupResponse();

  GroupResponse(const GroupResponse& from);

  inline GroupResponse& operator=(const GroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupResponse& default_instance();

  void Swap(GroupResponse* other);

  // implements Message ----------------------------------------------

  inline GroupResponse* New() const { return New(NULL); }

  GroupResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupResponse& from);
  void MergeFrom(const GroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dzhyun.ChildResponse ChildRes = 1;
  int childres_size() const;
  void clear_childres();
  static const int kChildResFieldNumber = 1;
  const ::dzhyun::ChildResponse& childres(int index) const;
  ::dzhyun::ChildResponse* mutable_childres(int index);
  ::dzhyun::ChildResponse* add_childres();
  ::google::protobuf::RepeatedPtrField< ::dzhyun::ChildResponse >*
      mutable_childres();
  const ::google::protobuf::RepeatedPtrField< ::dzhyun::ChildResponse >&
      childres() const;

  // @@protoc_insertion_point(class_scope:dzhyun.GroupResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::dzhyun::ChildResponse > childres_;
  friend void  protobuf_AddDesc_dzhua_2eproto();
  friend void protobuf_AssignDesc_dzhua_2eproto();
  friend void protobuf_ShutdownFile_dzhua_2eproto();

  void InitAsDefaultInstance();
  static GroupResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UAResponse

// required string Qid = 1;
inline bool UAResponse::has_qid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UAResponse::set_has_qid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UAResponse::clear_has_qid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UAResponse::clear_qid() {
  qid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qid();
}
inline const ::std::string& UAResponse::qid() const {
  // @@protoc_insertion_point(field_get:dzhyun.UAResponse.Qid)
  return qid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UAResponse::set_qid(const ::std::string& value) {
  set_has_qid();
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.UAResponse.Qid)
}
inline void UAResponse::set_qid(const char* value) {
  set_has_qid();
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.UAResponse.Qid)
}
inline void UAResponse::set_qid(const char* value, size_t size) {
  set_has_qid();
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.UAResponse.Qid)
}
inline ::std::string* UAResponse::mutable_qid() {
  set_has_qid();
  // @@protoc_insertion_point(field_mutable:dzhyun.UAResponse.Qid)
  return qid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UAResponse::release_qid() {
  // @@protoc_insertion_point(field_release:dzhyun.UAResponse.Qid)
  clear_has_qid();
  return qid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UAResponse::set_allocated_qid(::std::string* qid) {
  if (qid != NULL) {
    set_has_qid();
  } else {
    clear_has_qid();
  }
  qid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qid);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.UAResponse.Qid)
}

// required int32 Err = 2;
inline bool UAResponse::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UAResponse::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UAResponse::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UAResponse::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 UAResponse::err() const {
  // @@protoc_insertion_point(field_get:dzhyun.UAResponse.Err)
  return err_;
}
inline void UAResponse::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.UAResponse.Err)
}

// required uint32 Counter = 3;
inline bool UAResponse::has_counter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UAResponse::set_has_counter() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UAResponse::clear_has_counter() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UAResponse::clear_counter() {
  counter_ = 0u;
  clear_has_counter();
}
inline ::google::protobuf::uint32 UAResponse::counter() const {
  // @@protoc_insertion_point(field_get:dzhyun.UAResponse.Counter)
  return counter_;
}
inline void UAResponse::set_counter(::google::protobuf::uint32 value) {
  set_has_counter();
  counter_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.UAResponse.Counter)
}

// optional bytes Data = 4;
inline bool UAResponse::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UAResponse::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UAResponse::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UAResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& UAResponse::data() const {
  // @@protoc_insertion_point(field_get:dzhyun.UAResponse.Data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UAResponse::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.UAResponse.Data)
}
inline void UAResponse::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.UAResponse.Data)
}
inline void UAResponse::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.UAResponse.Data)
}
inline ::std::string* UAResponse::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:dzhyun.UAResponse.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UAResponse::release_data() {
  // @@protoc_insertion_point(field_release:dzhyun.UAResponse.Data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UAResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.UAResponse.Data)
}

// -------------------------------------------------------------------

// ChildResponse

// required int32 No = 1;
inline bool ChildResponse::has_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChildResponse::set_has_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChildResponse::clear_has_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChildResponse::clear_no() {
  no_ = 0;
  clear_has_no();
}
inline ::google::protobuf::int32 ChildResponse::no() const {
  // @@protoc_insertion_point(field_get:dzhyun.ChildResponse.No)
  return no_;
}
inline void ChildResponse::set_no(::google::protobuf::int32 value) {
  set_has_no();
  no_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.ChildResponse.No)
}

// optional bytes Data = 2;
inline bool ChildResponse::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChildResponse::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChildResponse::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChildResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& ChildResponse::data() const {
  // @@protoc_insertion_point(field_get:dzhyun.ChildResponse.Data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChildResponse::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.ChildResponse.Data)
}
inline void ChildResponse::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.ChildResponse.Data)
}
inline void ChildResponse::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.ChildResponse.Data)
}
inline ::std::string* ChildResponse::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:dzhyun.ChildResponse.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChildResponse::release_data() {
  // @@protoc_insertion_point(field_release:dzhyun.ChildResponse.Data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChildResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.ChildResponse.Data)
}

// -------------------------------------------------------------------

// GroupResponse

// repeated .dzhyun.ChildResponse ChildRes = 1;
inline int GroupResponse::childres_size() const {
  return childres_.size();
}
inline void GroupResponse::clear_childres() {
  childres_.Clear();
}
inline const ::dzhyun::ChildResponse& GroupResponse::childres(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.GroupResponse.ChildRes)
  return childres_.Get(index);
}
inline ::dzhyun::ChildResponse* GroupResponse::mutable_childres(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.GroupResponse.ChildRes)
  return childres_.Mutable(index);
}
inline ::dzhyun::ChildResponse* GroupResponse::add_childres() {
  // @@protoc_insertion_point(field_add:dzhyun.GroupResponse.ChildRes)
  return childres_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dzhyun::ChildResponse >*
GroupResponse::mutable_childres() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.GroupResponse.ChildRes)
  return &childres_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dzhyun::ChildResponse >&
GroupResponse::childres() const {
  // @@protoc_insertion_point(field_list:dzhyun.GroupResponse.ChildRes)
  return childres_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dzhyun

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dzhua_2eproto__INCLUDED
