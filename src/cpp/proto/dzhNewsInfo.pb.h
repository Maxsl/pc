// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dzhNewsInfo.proto

#ifndef PROTOBUF_dzhNewsInfo_2eproto__INCLUDED
#define PROTOBUF_dzhNewsInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace dzhyun {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_dzhNewsInfo_2eproto();
void protobuf_AssignDesc_dzhNewsInfo_2eproto();
void protobuf_ShutdownFile_dzhNewsInfo_2eproto();

class GongGaoXinXi;
class GongGaoXinXiOutput;
class GongGaoXinXiZhongXin;
class GongGaoXinXiZhongXinOutput;
class NewsInfoValue;
class XinWenXinXiEx;
class XinWenXinXiOutput;
class XinWenXinXiZhongXin;
class XinWenXinXiZhongXinOutput;

// ===================================================================

class NewsInfoValue : public ::google::protobuf::Message {
 public:
  NewsInfoValue();
  virtual ~NewsInfoValue();

  NewsInfoValue(const NewsInfoValue& from);

  inline NewsInfoValue& operator=(const NewsInfoValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewsInfoValue& default_instance();

  void Swap(NewsInfoValue* other);

  // implements Message ----------------------------------------------

  inline NewsInfoValue* New() const { return New(NULL); }

  NewsInfoValue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewsInfoValue& from);
  void MergeFrom(const NewsInfoValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NewsInfoValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  const ::std::string& ver() const;
  void set_ver(const ::std::string& value);
  void set_ver(const char* value);
  void set_ver(const char* value, size_t size);
  ::std::string* mutable_ver();
  ::std::string* release_ver();
  void set_allocated_ver(::std::string* ver);

  // required uint32 act = 2;
  bool has_act() const;
  void clear_act();
  static const int kActFieldNumber = 2;
  ::google::protobuf::uint32 act() const;
  void set_act(::google::protobuf::uint32 value);

  // required uint64 newsID = 3;
  bool has_newsid() const;
  void clear_newsid();
  static const int kNewsIDFieldNumber = 3;
  ::google::protobuf::uint64 newsid() const;
  void set_newsid(::google::protobuf::uint64 value);

  // optional string newsTitle = 4;
  bool has_newstitle() const;
  void clear_newstitle();
  static const int kNewsTitleFieldNumber = 4;
  const ::std::string& newstitle() const;
  void set_newstitle(const ::std::string& value);
  void set_newstitle(const char* value);
  void set_newstitle(const char* value, size_t size);
  ::std::string* mutable_newstitle();
  ::std::string* release_newstitle();
  void set_allocated_newstitle(::std::string* newstitle);

  // @@protoc_insertion_point(class_scope:dzhyun.NewsInfoValue)
 private:
  inline void set_has_ver();
  inline void clear_has_ver();
  inline void set_has_act();
  inline void clear_has_act();
  inline void set_has_newsid();
  inline void clear_has_newsid();
  inline void set_has_newstitle();
  inline void clear_has_newstitle();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ver_;
  ::google::protobuf::uint64 newsid_;
  ::google::protobuf::internal::ArenaStringPtr newstitle_;
  ::google::protobuf::uint32 act_;
  friend void  protobuf_AddDesc_dzhNewsInfo_2eproto();
  friend void protobuf_AssignDesc_dzhNewsInfo_2eproto();
  friend void protobuf_ShutdownFile_dzhNewsInfo_2eproto();

  void InitAsDefaultInstance();
  static NewsInfoValue* default_instance_;
};
// -------------------------------------------------------------------

class XinWenXinXiEx : public ::google::protobuf::Message {
 public:
  XinWenXinXiEx();
  virtual ~XinWenXinXiEx();

  XinWenXinXiEx(const XinWenXinXiEx& from);

  inline XinWenXinXiEx& operator=(const XinWenXinXiEx& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XinWenXinXiEx& default_instance();

  void Swap(XinWenXinXiEx* other);

  // implements Message ----------------------------------------------

  inline XinWenXinXiEx* New() const { return New(NULL); }

  XinWenXinXiEx* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const XinWenXinXiEx& from);
  void MergeFrom(const XinWenXinXiEx& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(XinWenXinXiEx* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source = 1;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // optional string date = 2;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 2;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // optional string title = 3;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string context = 4;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 4;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  void set_context(const char* value);
  void set_context(const char* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // @@protoc_insertion_point(class_scope:dzhyun.XinWenXinXiEx)
 private:
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_context();
  inline void clear_has_context();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  friend void  protobuf_AddDesc_dzhNewsInfo_2eproto();
  friend void protobuf_AssignDesc_dzhNewsInfo_2eproto();
  friend void protobuf_ShutdownFile_dzhNewsInfo_2eproto();

  void InitAsDefaultInstance();
  static XinWenXinXiEx* default_instance_;
};
// -------------------------------------------------------------------

class XinWenXinXiOutput : public ::google::protobuf::Message {
 public:
  XinWenXinXiOutput();
  virtual ~XinWenXinXiOutput();

  XinWenXinXiOutput(const XinWenXinXiOutput& from);

  inline XinWenXinXiOutput& operator=(const XinWenXinXiOutput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XinWenXinXiOutput& default_instance();

  void Swap(XinWenXinXiOutput* other);

  // implements Message ----------------------------------------------

  inline XinWenXinXiOutput* New() const { return New(NULL); }

  XinWenXinXiOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const XinWenXinXiOutput& from);
  void MergeFrom(const XinWenXinXiOutput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(XinWenXinXiOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string Obj = 1;
  bool has_obj() const;
  void clear_obj();
  static const int kObjFieldNumber = 1;
  const ::std::string& obj() const;
  void set_obj(const ::std::string& value);
  void set_obj(const char* value);
  void set_obj(const char* value, size_t size);
  ::std::string* mutable_obj();
  ::std::string* release_obj();
  void set_allocated_obj(::std::string* obj);

  // required int64 TotalCount = 2;
  bool has_totalcount() const;
  void clear_totalcount();
  static const int kTotalCountFieldNumber = 2;
  ::google::protobuf::int64 totalcount() const;
  void set_totalcount(::google::protobuf::int64 value);

  // repeated .dzhyun.XinWenXinXiEx Data = 3;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::dzhyun::XinWenXinXiEx& data(int index) const;
  ::dzhyun::XinWenXinXiEx* mutable_data(int index);
  ::dzhyun::XinWenXinXiEx* add_data();
  ::google::protobuf::RepeatedPtrField< ::dzhyun::XinWenXinXiEx >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::dzhyun::XinWenXinXiEx >&
      data() const;

  // @@protoc_insertion_point(class_scope:dzhyun.XinWenXinXiOutput)
 private:
  inline void set_has_obj();
  inline void clear_has_obj();
  inline void set_has_totalcount();
  inline void clear_has_totalcount();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr obj_;
  ::google::protobuf::int64 totalcount_;
  ::google::protobuf::RepeatedPtrField< ::dzhyun::XinWenXinXiEx > data_;
  friend void  protobuf_AddDesc_dzhNewsInfo_2eproto();
  friend void protobuf_AssignDesc_dzhNewsInfo_2eproto();
  friend void protobuf_ShutdownFile_dzhNewsInfo_2eproto();

  void InitAsDefaultInstance();
  static XinWenXinXiOutput* default_instance_;
};
// -------------------------------------------------------------------

class XinWenXinXiZhongXin : public ::google::protobuf::Message {
 public:
  XinWenXinXiZhongXin();
  virtual ~XinWenXinXiZhongXin();

  XinWenXinXiZhongXin(const XinWenXinXiZhongXin& from);

  inline XinWenXinXiZhongXin& operator=(const XinWenXinXiZhongXin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XinWenXinXiZhongXin& default_instance();

  void Swap(XinWenXinXiZhongXin* other);

  // implements Message ----------------------------------------------

  inline XinWenXinXiZhongXin* New() const { return New(NULL); }

  XinWenXinXiZhongXin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const XinWenXinXiZhongXin& from);
  void MergeFrom(const XinWenXinXiZhongXin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(XinWenXinXiZhongXin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string date = 1;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 1;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // optional string title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string context = 3;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 3;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  void set_context(const char* value);
  void set_context(const char* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // optional string source = 4;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 4;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // @@protoc_insertion_point(class_scope:dzhyun.XinWenXinXiZhongXin)
 private:
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_context();
  inline void clear_has_context();
  inline void set_has_source();
  inline void clear_has_source();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  friend void  protobuf_AddDesc_dzhNewsInfo_2eproto();
  friend void protobuf_AssignDesc_dzhNewsInfo_2eproto();
  friend void protobuf_ShutdownFile_dzhNewsInfo_2eproto();

  void InitAsDefaultInstance();
  static XinWenXinXiZhongXin* default_instance_;
};
// -------------------------------------------------------------------

class XinWenXinXiZhongXinOutput : public ::google::protobuf::Message {
 public:
  XinWenXinXiZhongXinOutput();
  virtual ~XinWenXinXiZhongXinOutput();

  XinWenXinXiZhongXinOutput(const XinWenXinXiZhongXinOutput& from);

  inline XinWenXinXiZhongXinOutput& operator=(const XinWenXinXiZhongXinOutput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XinWenXinXiZhongXinOutput& default_instance();

  void Swap(XinWenXinXiZhongXinOutput* other);

  // implements Message ----------------------------------------------

  inline XinWenXinXiZhongXinOutput* New() const { return New(NULL); }

  XinWenXinXiZhongXinOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const XinWenXinXiZhongXinOutput& from);
  void MergeFrom(const XinWenXinXiZhongXinOutput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(XinWenXinXiZhongXinOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 TotalCount = 1;
  bool has_totalcount() const;
  void clear_totalcount();
  static const int kTotalCountFieldNumber = 1;
  ::google::protobuf::int64 totalcount() const;
  void set_totalcount(::google::protobuf::int64 value);

  // repeated .dzhyun.XinWenXinXiZhongXin data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::dzhyun::XinWenXinXiZhongXin& data(int index) const;
  ::dzhyun::XinWenXinXiZhongXin* mutable_data(int index);
  ::dzhyun::XinWenXinXiZhongXin* add_data();
  ::google::protobuf::RepeatedPtrField< ::dzhyun::XinWenXinXiZhongXin >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::dzhyun::XinWenXinXiZhongXin >&
      data() const;

  // @@protoc_insertion_point(class_scope:dzhyun.XinWenXinXiZhongXinOutput)
 private:
  inline void set_has_totalcount();
  inline void clear_has_totalcount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 totalcount_;
  ::google::protobuf::RepeatedPtrField< ::dzhyun::XinWenXinXiZhongXin > data_;
  friend void  protobuf_AddDesc_dzhNewsInfo_2eproto();
  friend void protobuf_AssignDesc_dzhNewsInfo_2eproto();
  friend void protobuf_ShutdownFile_dzhNewsInfo_2eproto();

  void InitAsDefaultInstance();
  static XinWenXinXiZhongXinOutput* default_instance_;
};
// -------------------------------------------------------------------

class GongGaoXinXi : public ::google::protobuf::Message {
 public:
  GongGaoXinXi();
  virtual ~GongGaoXinXi();

  GongGaoXinXi(const GongGaoXinXi& from);

  inline GongGaoXinXi& operator=(const GongGaoXinXi& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GongGaoXinXi& default_instance();

  void Swap(GongGaoXinXi* other);

  // implements Message ----------------------------------------------

  inline GongGaoXinXi* New() const { return New(NULL); }

  GongGaoXinXi* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GongGaoXinXi& from);
  void MergeFrom(const GongGaoXinXi& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GongGaoXinXi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source = 1;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // optional string date = 2;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 2;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // optional string title = 3;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string context = 4;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 4;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  void set_context(const char* value);
  void set_context(const char* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // @@protoc_insertion_point(class_scope:dzhyun.GongGaoXinXi)
 private:
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_context();
  inline void clear_has_context();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  friend void  protobuf_AddDesc_dzhNewsInfo_2eproto();
  friend void protobuf_AssignDesc_dzhNewsInfo_2eproto();
  friend void protobuf_ShutdownFile_dzhNewsInfo_2eproto();

  void InitAsDefaultInstance();
  static GongGaoXinXi* default_instance_;
};
// -------------------------------------------------------------------

class GongGaoXinXiOutput : public ::google::protobuf::Message {
 public:
  GongGaoXinXiOutput();
  virtual ~GongGaoXinXiOutput();

  GongGaoXinXiOutput(const GongGaoXinXiOutput& from);

  inline GongGaoXinXiOutput& operator=(const GongGaoXinXiOutput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GongGaoXinXiOutput& default_instance();

  void Swap(GongGaoXinXiOutput* other);

  // implements Message ----------------------------------------------

  inline GongGaoXinXiOutput* New() const { return New(NULL); }

  GongGaoXinXiOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GongGaoXinXiOutput& from);
  void MergeFrom(const GongGaoXinXiOutput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GongGaoXinXiOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string Obj = 1;
  bool has_obj() const;
  void clear_obj();
  static const int kObjFieldNumber = 1;
  const ::std::string& obj() const;
  void set_obj(const ::std::string& value);
  void set_obj(const char* value);
  void set_obj(const char* value, size_t size);
  ::std::string* mutable_obj();
  ::std::string* release_obj();
  void set_allocated_obj(::std::string* obj);

  // required int64 TotalCount = 2;
  bool has_totalcount() const;
  void clear_totalcount();
  static const int kTotalCountFieldNumber = 2;
  ::google::protobuf::int64 totalcount() const;
  void set_totalcount(::google::protobuf::int64 value);

  // repeated .dzhyun.GongGaoXinXi Data = 3;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::dzhyun::GongGaoXinXi& data(int index) const;
  ::dzhyun::GongGaoXinXi* mutable_data(int index);
  ::dzhyun::GongGaoXinXi* add_data();
  ::google::protobuf::RepeatedPtrField< ::dzhyun::GongGaoXinXi >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::dzhyun::GongGaoXinXi >&
      data() const;

  // @@protoc_insertion_point(class_scope:dzhyun.GongGaoXinXiOutput)
 private:
  inline void set_has_obj();
  inline void clear_has_obj();
  inline void set_has_totalcount();
  inline void clear_has_totalcount();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr obj_;
  ::google::protobuf::int64 totalcount_;
  ::google::protobuf::RepeatedPtrField< ::dzhyun::GongGaoXinXi > data_;
  friend void  protobuf_AddDesc_dzhNewsInfo_2eproto();
  friend void protobuf_AssignDesc_dzhNewsInfo_2eproto();
  friend void protobuf_ShutdownFile_dzhNewsInfo_2eproto();

  void InitAsDefaultInstance();
  static GongGaoXinXiOutput* default_instance_;
};
// -------------------------------------------------------------------

class GongGaoXinXiZhongXin : public ::google::protobuf::Message {
 public:
  GongGaoXinXiZhongXin();
  virtual ~GongGaoXinXiZhongXin();

  GongGaoXinXiZhongXin(const GongGaoXinXiZhongXin& from);

  inline GongGaoXinXiZhongXin& operator=(const GongGaoXinXiZhongXin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GongGaoXinXiZhongXin& default_instance();

  void Swap(GongGaoXinXiZhongXin* other);

  // implements Message ----------------------------------------------

  inline GongGaoXinXiZhongXin* New() const { return New(NULL); }

  GongGaoXinXiZhongXin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GongGaoXinXiZhongXin& from);
  void MergeFrom(const GongGaoXinXiZhongXin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GongGaoXinXiZhongXin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string date = 1;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 1;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // optional string title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string context = 3;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 3;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  void set_context(const char* value);
  void set_context(const char* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // optional string source = 4;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 4;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // @@protoc_insertion_point(class_scope:dzhyun.GongGaoXinXiZhongXin)
 private:
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_context();
  inline void clear_has_context();
  inline void set_has_source();
  inline void clear_has_source();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  friend void  protobuf_AddDesc_dzhNewsInfo_2eproto();
  friend void protobuf_AssignDesc_dzhNewsInfo_2eproto();
  friend void protobuf_ShutdownFile_dzhNewsInfo_2eproto();

  void InitAsDefaultInstance();
  static GongGaoXinXiZhongXin* default_instance_;
};
// -------------------------------------------------------------------

class GongGaoXinXiZhongXinOutput : public ::google::protobuf::Message {
 public:
  GongGaoXinXiZhongXinOutput();
  virtual ~GongGaoXinXiZhongXinOutput();

  GongGaoXinXiZhongXinOutput(const GongGaoXinXiZhongXinOutput& from);

  inline GongGaoXinXiZhongXinOutput& operator=(const GongGaoXinXiZhongXinOutput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GongGaoXinXiZhongXinOutput& default_instance();

  void Swap(GongGaoXinXiZhongXinOutput* other);

  // implements Message ----------------------------------------------

  inline GongGaoXinXiZhongXinOutput* New() const { return New(NULL); }

  GongGaoXinXiZhongXinOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GongGaoXinXiZhongXinOutput& from);
  void MergeFrom(const GongGaoXinXiZhongXinOutput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GongGaoXinXiZhongXinOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 TotalCount = 1;
  bool has_totalcount() const;
  void clear_totalcount();
  static const int kTotalCountFieldNumber = 1;
  ::google::protobuf::int64 totalcount() const;
  void set_totalcount(::google::protobuf::int64 value);

  // repeated .dzhyun.GongGaoXinXiZhongXin data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::dzhyun::GongGaoXinXiZhongXin& data(int index) const;
  ::dzhyun::GongGaoXinXiZhongXin* mutable_data(int index);
  ::dzhyun::GongGaoXinXiZhongXin* add_data();
  ::google::protobuf::RepeatedPtrField< ::dzhyun::GongGaoXinXiZhongXin >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::dzhyun::GongGaoXinXiZhongXin >&
      data() const;

  // @@protoc_insertion_point(class_scope:dzhyun.GongGaoXinXiZhongXinOutput)
 private:
  inline void set_has_totalcount();
  inline void clear_has_totalcount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 totalcount_;
  ::google::protobuf::RepeatedPtrField< ::dzhyun::GongGaoXinXiZhongXin > data_;
  friend void  protobuf_AddDesc_dzhNewsInfo_2eproto();
  friend void protobuf_AssignDesc_dzhNewsInfo_2eproto();
  friend void protobuf_ShutdownFile_dzhNewsInfo_2eproto();

  void InitAsDefaultInstance();
  static GongGaoXinXiZhongXinOutput* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NewsInfoValue

// required string ver = 1;
inline bool NewsInfoValue::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewsInfoValue::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewsInfoValue::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewsInfoValue::clear_ver() {
  ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ver();
}
inline const ::std::string& NewsInfoValue::ver() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewsInfoValue.ver)
  return ver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewsInfoValue::set_ver(const ::std::string& value) {
  set_has_ver();
  ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewsInfoValue.ver)
}
inline void NewsInfoValue::set_ver(const char* value) {
  set_has_ver();
  ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewsInfoValue.ver)
}
inline void NewsInfoValue::set_ver(const char* value, size_t size) {
  set_has_ver();
  ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewsInfoValue.ver)
}
inline ::std::string* NewsInfoValue::mutable_ver() {
  set_has_ver();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewsInfoValue.ver)
  return ver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewsInfoValue::release_ver() {
  // @@protoc_insertion_point(field_release:dzhyun.NewsInfoValue.ver)
  clear_has_ver();
  return ver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewsInfoValue::set_allocated_ver(::std::string* ver) {
  if (ver != NULL) {
    set_has_ver();
  } else {
    clear_has_ver();
  }
  ver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ver);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewsInfoValue.ver)
}

// required uint32 act = 2;
inline bool NewsInfoValue::has_act() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewsInfoValue::set_has_act() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewsInfoValue::clear_has_act() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewsInfoValue::clear_act() {
  act_ = 0u;
  clear_has_act();
}
inline ::google::protobuf::uint32 NewsInfoValue::act() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewsInfoValue.act)
  return act_;
}
inline void NewsInfoValue::set_act(::google::protobuf::uint32 value) {
  set_has_act();
  act_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.NewsInfoValue.act)
}

// required uint64 newsID = 3;
inline bool NewsInfoValue::has_newsid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewsInfoValue::set_has_newsid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewsInfoValue::clear_has_newsid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewsInfoValue::clear_newsid() {
  newsid_ = GOOGLE_ULONGLONG(0);
  clear_has_newsid();
}
inline ::google::protobuf::uint64 NewsInfoValue::newsid() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewsInfoValue.newsID)
  return newsid_;
}
inline void NewsInfoValue::set_newsid(::google::protobuf::uint64 value) {
  set_has_newsid();
  newsid_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.NewsInfoValue.newsID)
}

// optional string newsTitle = 4;
inline bool NewsInfoValue::has_newstitle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewsInfoValue::set_has_newstitle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewsInfoValue::clear_has_newstitle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewsInfoValue::clear_newstitle() {
  newstitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_newstitle();
}
inline const ::std::string& NewsInfoValue::newstitle() const {
  // @@protoc_insertion_point(field_get:dzhyun.NewsInfoValue.newsTitle)
  return newstitle_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewsInfoValue::set_newstitle(const ::std::string& value) {
  set_has_newstitle();
  newstitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.NewsInfoValue.newsTitle)
}
inline void NewsInfoValue::set_newstitle(const char* value) {
  set_has_newstitle();
  newstitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.NewsInfoValue.newsTitle)
}
inline void NewsInfoValue::set_newstitle(const char* value, size_t size) {
  set_has_newstitle();
  newstitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.NewsInfoValue.newsTitle)
}
inline ::std::string* NewsInfoValue::mutable_newstitle() {
  set_has_newstitle();
  // @@protoc_insertion_point(field_mutable:dzhyun.NewsInfoValue.newsTitle)
  return newstitle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewsInfoValue::release_newstitle() {
  // @@protoc_insertion_point(field_release:dzhyun.NewsInfoValue.newsTitle)
  clear_has_newstitle();
  return newstitle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewsInfoValue::set_allocated_newstitle(::std::string* newstitle) {
  if (newstitle != NULL) {
    set_has_newstitle();
  } else {
    clear_has_newstitle();
  }
  newstitle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newstitle);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.NewsInfoValue.newsTitle)
}

// -------------------------------------------------------------------

// XinWenXinXiEx

// optional string source = 1;
inline bool XinWenXinXiEx::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XinWenXinXiEx::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XinWenXinXiEx::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XinWenXinXiEx::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
inline const ::std::string& XinWenXinXiEx::source() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiEx.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiEx::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiEx.source)
}
inline void XinWenXinXiEx::set_source(const char* value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiEx.source)
}
inline void XinWenXinXiEx::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiEx.source)
}
inline ::std::string* XinWenXinXiEx::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiEx.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XinWenXinXiEx::release_source() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiEx.source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiEx::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiEx.source)
}

// optional string date = 2;
inline bool XinWenXinXiEx::has_date() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XinWenXinXiEx::set_has_date() {
  _has_bits_[0] |= 0x00000002u;
}
inline void XinWenXinXiEx::clear_has_date() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void XinWenXinXiEx::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& XinWenXinXiEx::date() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiEx.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiEx::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiEx.date)
}
inline void XinWenXinXiEx::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiEx.date)
}
inline void XinWenXinXiEx::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiEx.date)
}
inline ::std::string* XinWenXinXiEx::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiEx.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XinWenXinXiEx::release_date() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiEx.date)
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiEx::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiEx.date)
}

// optional string title = 3;
inline bool XinWenXinXiEx::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void XinWenXinXiEx::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void XinWenXinXiEx::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void XinWenXinXiEx::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& XinWenXinXiEx::title() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiEx.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiEx::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiEx.title)
}
inline void XinWenXinXiEx::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiEx.title)
}
inline void XinWenXinXiEx::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiEx.title)
}
inline ::std::string* XinWenXinXiEx::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiEx.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XinWenXinXiEx::release_title() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiEx.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiEx::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiEx.title)
}

// optional string context = 4;
inline bool XinWenXinXiEx::has_context() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void XinWenXinXiEx::set_has_context() {
  _has_bits_[0] |= 0x00000008u;
}
inline void XinWenXinXiEx::clear_has_context() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void XinWenXinXiEx::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_context();
}
inline const ::std::string& XinWenXinXiEx::context() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiEx.context)
  return context_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiEx::set_context(const ::std::string& value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiEx.context)
}
inline void XinWenXinXiEx::set_context(const char* value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiEx.context)
}
inline void XinWenXinXiEx::set_context(const char* value, size_t size) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiEx.context)
}
inline ::std::string* XinWenXinXiEx::mutable_context() {
  set_has_context();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiEx.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XinWenXinXiEx::release_context() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiEx.context)
  clear_has_context();
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiEx::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    set_has_context();
  } else {
    clear_has_context();
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiEx.context)
}

// -------------------------------------------------------------------

// XinWenXinXiOutput

// required string Obj = 1;
inline bool XinWenXinXiOutput::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XinWenXinXiOutput::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XinWenXinXiOutput::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XinWenXinXiOutput::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
inline const ::std::string& XinWenXinXiOutput::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiOutput.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiOutput::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiOutput.Obj)
}
inline void XinWenXinXiOutput::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiOutput.Obj)
}
inline void XinWenXinXiOutput::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiOutput.Obj)
}
inline ::std::string* XinWenXinXiOutput::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiOutput.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XinWenXinXiOutput::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiOutput.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiOutput::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiOutput.Obj)
}

// required int64 TotalCount = 2;
inline bool XinWenXinXiOutput::has_totalcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XinWenXinXiOutput::set_has_totalcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void XinWenXinXiOutput::clear_has_totalcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void XinWenXinXiOutput::clear_totalcount() {
  totalcount_ = GOOGLE_LONGLONG(0);
  clear_has_totalcount();
}
inline ::google::protobuf::int64 XinWenXinXiOutput::totalcount() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiOutput.TotalCount)
  return totalcount_;
}
inline void XinWenXinXiOutput::set_totalcount(::google::protobuf::int64 value) {
  set_has_totalcount();
  totalcount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiOutput.TotalCount)
}

// repeated .dzhyun.XinWenXinXiEx Data = 3;
inline int XinWenXinXiOutput::data_size() const {
  return data_.size();
}
inline void XinWenXinXiOutput::clear_data() {
  data_.Clear();
}
inline const ::dzhyun::XinWenXinXiEx& XinWenXinXiOutput::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiOutput.Data)
  return data_.Get(index);
}
inline ::dzhyun::XinWenXinXiEx* XinWenXinXiOutput::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiOutput.Data)
  return data_.Mutable(index);
}
inline ::dzhyun::XinWenXinXiEx* XinWenXinXiOutput::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.XinWenXinXiOutput.Data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dzhyun::XinWenXinXiEx >*
XinWenXinXiOutput::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.XinWenXinXiOutput.Data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dzhyun::XinWenXinXiEx >&
XinWenXinXiOutput::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.XinWenXinXiOutput.Data)
  return data_;
}

// -------------------------------------------------------------------

// XinWenXinXiZhongXin

// optional string date = 1;
inline bool XinWenXinXiZhongXin::has_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XinWenXinXiZhongXin::set_has_date() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XinWenXinXiZhongXin::clear_has_date() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XinWenXinXiZhongXin::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& XinWenXinXiZhongXin::date() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiZhongXin.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiZhongXin::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiZhongXin.date)
}
inline void XinWenXinXiZhongXin::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiZhongXin.date)
}
inline void XinWenXinXiZhongXin::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiZhongXin.date)
}
inline ::std::string* XinWenXinXiZhongXin::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiZhongXin.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XinWenXinXiZhongXin::release_date() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiZhongXin.date)
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiZhongXin::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiZhongXin.date)
}

// optional string title = 2;
inline bool XinWenXinXiZhongXin::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XinWenXinXiZhongXin::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void XinWenXinXiZhongXin::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void XinWenXinXiZhongXin::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& XinWenXinXiZhongXin::title() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiZhongXin.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiZhongXin::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiZhongXin.title)
}
inline void XinWenXinXiZhongXin::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiZhongXin.title)
}
inline void XinWenXinXiZhongXin::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiZhongXin.title)
}
inline ::std::string* XinWenXinXiZhongXin::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiZhongXin.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XinWenXinXiZhongXin::release_title() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiZhongXin.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiZhongXin::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiZhongXin.title)
}

// optional string context = 3;
inline bool XinWenXinXiZhongXin::has_context() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void XinWenXinXiZhongXin::set_has_context() {
  _has_bits_[0] |= 0x00000004u;
}
inline void XinWenXinXiZhongXin::clear_has_context() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void XinWenXinXiZhongXin::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_context();
}
inline const ::std::string& XinWenXinXiZhongXin::context() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiZhongXin.context)
  return context_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiZhongXin::set_context(const ::std::string& value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiZhongXin.context)
}
inline void XinWenXinXiZhongXin::set_context(const char* value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiZhongXin.context)
}
inline void XinWenXinXiZhongXin::set_context(const char* value, size_t size) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiZhongXin.context)
}
inline ::std::string* XinWenXinXiZhongXin::mutable_context() {
  set_has_context();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiZhongXin.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XinWenXinXiZhongXin::release_context() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiZhongXin.context)
  clear_has_context();
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiZhongXin::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    set_has_context();
  } else {
    clear_has_context();
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiZhongXin.context)
}

// optional string source = 4;
inline bool XinWenXinXiZhongXin::has_source() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void XinWenXinXiZhongXin::set_has_source() {
  _has_bits_[0] |= 0x00000008u;
}
inline void XinWenXinXiZhongXin::clear_has_source() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void XinWenXinXiZhongXin::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
inline const ::std::string& XinWenXinXiZhongXin::source() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiZhongXin.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiZhongXin::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiZhongXin.source)
}
inline void XinWenXinXiZhongXin::set_source(const char* value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.XinWenXinXiZhongXin.source)
}
inline void XinWenXinXiZhongXin::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.XinWenXinXiZhongXin.source)
}
inline ::std::string* XinWenXinXiZhongXin::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiZhongXin.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XinWenXinXiZhongXin::release_source() {
  // @@protoc_insertion_point(field_release:dzhyun.XinWenXinXiZhongXin.source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XinWenXinXiZhongXin::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.XinWenXinXiZhongXin.source)
}

// -------------------------------------------------------------------

// XinWenXinXiZhongXinOutput

// required int64 TotalCount = 1;
inline bool XinWenXinXiZhongXinOutput::has_totalcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XinWenXinXiZhongXinOutput::set_has_totalcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XinWenXinXiZhongXinOutput::clear_has_totalcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XinWenXinXiZhongXinOutput::clear_totalcount() {
  totalcount_ = GOOGLE_LONGLONG(0);
  clear_has_totalcount();
}
inline ::google::protobuf::int64 XinWenXinXiZhongXinOutput::totalcount() const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiZhongXinOutput.TotalCount)
  return totalcount_;
}
inline void XinWenXinXiZhongXinOutput::set_totalcount(::google::protobuf::int64 value) {
  set_has_totalcount();
  totalcount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.XinWenXinXiZhongXinOutput.TotalCount)
}

// repeated .dzhyun.XinWenXinXiZhongXin data = 2;
inline int XinWenXinXiZhongXinOutput::data_size() const {
  return data_.size();
}
inline void XinWenXinXiZhongXinOutput::clear_data() {
  data_.Clear();
}
inline const ::dzhyun::XinWenXinXiZhongXin& XinWenXinXiZhongXinOutput::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.XinWenXinXiZhongXinOutput.data)
  return data_.Get(index);
}
inline ::dzhyun::XinWenXinXiZhongXin* XinWenXinXiZhongXinOutput::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.XinWenXinXiZhongXinOutput.data)
  return data_.Mutable(index);
}
inline ::dzhyun::XinWenXinXiZhongXin* XinWenXinXiZhongXinOutput::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.XinWenXinXiZhongXinOutput.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dzhyun::XinWenXinXiZhongXin >*
XinWenXinXiZhongXinOutput::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.XinWenXinXiZhongXinOutput.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dzhyun::XinWenXinXiZhongXin >&
XinWenXinXiZhongXinOutput::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.XinWenXinXiZhongXinOutput.data)
  return data_;
}

// -------------------------------------------------------------------

// GongGaoXinXi

// optional string source = 1;
inline bool GongGaoXinXi::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GongGaoXinXi::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GongGaoXinXi::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GongGaoXinXi::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
inline const ::std::string& GongGaoXinXi::source() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXi.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXi::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXi.source)
}
inline void GongGaoXinXi::set_source(const char* value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXi.source)
}
inline void GongGaoXinXi::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXi.source)
}
inline ::std::string* GongGaoXinXi::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXi.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GongGaoXinXi::release_source() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXi.source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXi::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXi.source)
}

// optional string date = 2;
inline bool GongGaoXinXi::has_date() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GongGaoXinXi::set_has_date() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GongGaoXinXi::clear_has_date() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GongGaoXinXi::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& GongGaoXinXi::date() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXi.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXi::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXi.date)
}
inline void GongGaoXinXi::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXi.date)
}
inline void GongGaoXinXi::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXi.date)
}
inline ::std::string* GongGaoXinXi::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXi.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GongGaoXinXi::release_date() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXi.date)
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXi::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXi.date)
}

// optional string title = 3;
inline bool GongGaoXinXi::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GongGaoXinXi::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GongGaoXinXi::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GongGaoXinXi::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& GongGaoXinXi::title() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXi.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXi::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXi.title)
}
inline void GongGaoXinXi::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXi.title)
}
inline void GongGaoXinXi::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXi.title)
}
inline ::std::string* GongGaoXinXi::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXi.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GongGaoXinXi::release_title() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXi.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXi::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXi.title)
}

// optional string context = 4;
inline bool GongGaoXinXi::has_context() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GongGaoXinXi::set_has_context() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GongGaoXinXi::clear_has_context() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GongGaoXinXi::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_context();
}
inline const ::std::string& GongGaoXinXi::context() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXi.context)
  return context_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXi::set_context(const ::std::string& value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXi.context)
}
inline void GongGaoXinXi::set_context(const char* value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXi.context)
}
inline void GongGaoXinXi::set_context(const char* value, size_t size) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXi.context)
}
inline ::std::string* GongGaoXinXi::mutable_context() {
  set_has_context();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXi.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GongGaoXinXi::release_context() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXi.context)
  clear_has_context();
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXi::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    set_has_context();
  } else {
    clear_has_context();
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXi.context)
}

// -------------------------------------------------------------------

// GongGaoXinXiOutput

// required string Obj = 1;
inline bool GongGaoXinXiOutput::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GongGaoXinXiOutput::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GongGaoXinXiOutput::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GongGaoXinXiOutput::clear_obj() {
  obj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj();
}
inline const ::std::string& GongGaoXinXiOutput::obj() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiOutput.Obj)
  return obj_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXiOutput::set_obj(const ::std::string& value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXiOutput.Obj)
}
inline void GongGaoXinXiOutput::set_obj(const char* value) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXiOutput.Obj)
}
inline void GongGaoXinXiOutput::set_obj(const char* value, size_t size) {
  set_has_obj();
  obj_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXiOutput.Obj)
}
inline ::std::string* GongGaoXinXiOutput::mutable_obj() {
  set_has_obj();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXiOutput.Obj)
  return obj_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GongGaoXinXiOutput::release_obj() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXiOutput.Obj)
  clear_has_obj();
  return obj_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXiOutput::set_allocated_obj(::std::string* obj) {
  if (obj != NULL) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
  obj_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXiOutput.Obj)
}

// required int64 TotalCount = 2;
inline bool GongGaoXinXiOutput::has_totalcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GongGaoXinXiOutput::set_has_totalcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GongGaoXinXiOutput::clear_has_totalcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GongGaoXinXiOutput::clear_totalcount() {
  totalcount_ = GOOGLE_LONGLONG(0);
  clear_has_totalcount();
}
inline ::google::protobuf::int64 GongGaoXinXiOutput::totalcount() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiOutput.TotalCount)
  return totalcount_;
}
inline void GongGaoXinXiOutput::set_totalcount(::google::protobuf::int64 value) {
  set_has_totalcount();
  totalcount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXiOutput.TotalCount)
}

// repeated .dzhyun.GongGaoXinXi Data = 3;
inline int GongGaoXinXiOutput::data_size() const {
  return data_.size();
}
inline void GongGaoXinXiOutput::clear_data() {
  data_.Clear();
}
inline const ::dzhyun::GongGaoXinXi& GongGaoXinXiOutput::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiOutput.Data)
  return data_.Get(index);
}
inline ::dzhyun::GongGaoXinXi* GongGaoXinXiOutput::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXiOutput.Data)
  return data_.Mutable(index);
}
inline ::dzhyun::GongGaoXinXi* GongGaoXinXiOutput::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.GongGaoXinXiOutput.Data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dzhyun::GongGaoXinXi >*
GongGaoXinXiOutput::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.GongGaoXinXiOutput.Data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dzhyun::GongGaoXinXi >&
GongGaoXinXiOutput::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.GongGaoXinXiOutput.Data)
  return data_;
}

// -------------------------------------------------------------------

// GongGaoXinXiZhongXin

// optional string date = 1;
inline bool GongGaoXinXiZhongXin::has_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GongGaoXinXiZhongXin::set_has_date() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GongGaoXinXiZhongXin::clear_has_date() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GongGaoXinXiZhongXin::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& GongGaoXinXiZhongXin::date() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiZhongXin.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXiZhongXin::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXiZhongXin.date)
}
inline void GongGaoXinXiZhongXin::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXiZhongXin.date)
}
inline void GongGaoXinXiZhongXin::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXiZhongXin.date)
}
inline ::std::string* GongGaoXinXiZhongXin::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXiZhongXin.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GongGaoXinXiZhongXin::release_date() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXiZhongXin.date)
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXiZhongXin::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXiZhongXin.date)
}

// optional string title = 2;
inline bool GongGaoXinXiZhongXin::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GongGaoXinXiZhongXin::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GongGaoXinXiZhongXin::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GongGaoXinXiZhongXin::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& GongGaoXinXiZhongXin::title() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiZhongXin.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXiZhongXin::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXiZhongXin.title)
}
inline void GongGaoXinXiZhongXin::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXiZhongXin.title)
}
inline void GongGaoXinXiZhongXin::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXiZhongXin.title)
}
inline ::std::string* GongGaoXinXiZhongXin::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXiZhongXin.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GongGaoXinXiZhongXin::release_title() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXiZhongXin.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXiZhongXin::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXiZhongXin.title)
}

// optional string context = 3;
inline bool GongGaoXinXiZhongXin::has_context() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GongGaoXinXiZhongXin::set_has_context() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GongGaoXinXiZhongXin::clear_has_context() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GongGaoXinXiZhongXin::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_context();
}
inline const ::std::string& GongGaoXinXiZhongXin::context() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiZhongXin.context)
  return context_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXiZhongXin::set_context(const ::std::string& value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXiZhongXin.context)
}
inline void GongGaoXinXiZhongXin::set_context(const char* value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXiZhongXin.context)
}
inline void GongGaoXinXiZhongXin::set_context(const char* value, size_t size) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXiZhongXin.context)
}
inline ::std::string* GongGaoXinXiZhongXin::mutable_context() {
  set_has_context();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXiZhongXin.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GongGaoXinXiZhongXin::release_context() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXiZhongXin.context)
  clear_has_context();
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXiZhongXin::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    set_has_context();
  } else {
    clear_has_context();
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXiZhongXin.context)
}

// optional string source = 4;
inline bool GongGaoXinXiZhongXin::has_source() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GongGaoXinXiZhongXin::set_has_source() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GongGaoXinXiZhongXin::clear_has_source() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GongGaoXinXiZhongXin::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
inline const ::std::string& GongGaoXinXiZhongXin::source() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiZhongXin.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXiZhongXin::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXiZhongXin.source)
}
inline void GongGaoXinXiZhongXin::set_source(const char* value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.GongGaoXinXiZhongXin.source)
}
inline void GongGaoXinXiZhongXin::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.GongGaoXinXiZhongXin.source)
}
inline ::std::string* GongGaoXinXiZhongXin::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXiZhongXin.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GongGaoXinXiZhongXin::release_source() {
  // @@protoc_insertion_point(field_release:dzhyun.GongGaoXinXiZhongXin.source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GongGaoXinXiZhongXin::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.GongGaoXinXiZhongXin.source)
}

// -------------------------------------------------------------------

// GongGaoXinXiZhongXinOutput

// required int64 TotalCount = 1;
inline bool GongGaoXinXiZhongXinOutput::has_totalcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GongGaoXinXiZhongXinOutput::set_has_totalcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GongGaoXinXiZhongXinOutput::clear_has_totalcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GongGaoXinXiZhongXinOutput::clear_totalcount() {
  totalcount_ = GOOGLE_LONGLONG(0);
  clear_has_totalcount();
}
inline ::google::protobuf::int64 GongGaoXinXiZhongXinOutput::totalcount() const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiZhongXinOutput.TotalCount)
  return totalcount_;
}
inline void GongGaoXinXiZhongXinOutput::set_totalcount(::google::protobuf::int64 value) {
  set_has_totalcount();
  totalcount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.GongGaoXinXiZhongXinOutput.TotalCount)
}

// repeated .dzhyun.GongGaoXinXiZhongXin data = 2;
inline int GongGaoXinXiZhongXinOutput::data_size() const {
  return data_.size();
}
inline void GongGaoXinXiZhongXinOutput::clear_data() {
  data_.Clear();
}
inline const ::dzhyun::GongGaoXinXiZhongXin& GongGaoXinXiZhongXinOutput::data(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.GongGaoXinXiZhongXinOutput.data)
  return data_.Get(index);
}
inline ::dzhyun::GongGaoXinXiZhongXin* GongGaoXinXiZhongXinOutput::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.GongGaoXinXiZhongXinOutput.data)
  return data_.Mutable(index);
}
inline ::dzhyun::GongGaoXinXiZhongXin* GongGaoXinXiZhongXinOutput::add_data() {
  // @@protoc_insertion_point(field_add:dzhyun.GongGaoXinXiZhongXinOutput.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dzhyun::GongGaoXinXiZhongXin >*
GongGaoXinXiZhongXinOutput::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.GongGaoXinXiZhongXinOutput.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dzhyun::GongGaoXinXiZhongXin >&
GongGaoXinXiZhongXinOutput::data() const {
  // @@protoc_insertion_point(field_list:dzhyun.GongGaoXinXiZhongXinOutput.data)
  return data_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dzhyun

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dzhNewsInfo_2eproto__INCLUDED
