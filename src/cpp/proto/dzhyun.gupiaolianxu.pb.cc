// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dzhyun.gupiaolianxu.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dzhyun.gupiaolianxu.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dzhyun {

namespace {

const ::google::protobuf::Descriptor* KXian_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KXian_reflection_ = NULL;
const ::google::protobuf::Descriptor* FenShi_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FenShi_reflection_ = NULL;
const ::google::protobuf::Descriptor* FenShiLishi_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FenShiLishi_reflection_ = NULL;
const ::google::protobuf::Descriptor* DynaAlib_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DynaAlib_reflection_ = NULL;
const ::google::protobuf::Descriptor* DynaAlibObj_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DynaAlibObj_reflection_ = NULL;
const ::google::protobuf::Descriptor* BackUpState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BackUpState_reflection_ = NULL;
const ::google::protobuf::Descriptor* LingxianDuokongZhibiao_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LingxianDuokongZhibiao_reflection_ = NULL;
const ::google::protobuf::Descriptor* LingxianDuokongZhibiaoStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LingxianDuokongZhibiaoStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* JiaoYiShiJianDuanJieGou_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JiaoYiShiJianDuanJieGou_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dzhyun_2egupiaolianxu_2eproto() {
  protobuf_AddDesc_dzhyun_2egupiaolianxu_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dzhyun.gupiaolianxu.proto");
  GOOGLE_CHECK(file != NULL);
  KXian_descriptor_ = file->message_type(0);
  static const int KXian_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, shijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, kaipanjia_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, zuigaojia_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, zuidijia_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, shoupanjia_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, chengjiaoliang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, chengjiaoe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, chengjiaobishu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, shangzhangjiashu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, xiadiejiashu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, chicang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, zengcang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, zengliang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, jiesuanjia_),
  };
  KXian_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KXian_descriptor_,
      KXian::default_instance_,
      KXian_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, _has_bits_[0]),
      -1,
      -1,
      sizeof(KXian),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KXian, _internal_metadata_),
      -1);
  FenShi_descriptor_ = file->message_type(1);
  static const int FenShi_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShi, shijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShi, chengjiaojia_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShi, chengjiaoliang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShi, chengjiaoe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShi, junjia_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShi, lingxianzhibiao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShi, duokongxian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShi, weituomairuzongliang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShi, weituomaichuzongliang_),
  };
  FenShi_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FenShi_descriptor_,
      FenShi::default_instance_,
      FenShi_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShi, _has_bits_[0]),
      -1,
      -1,
      sizeof(FenShi),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShi, _internal_metadata_),
      -1);
  FenShiLishi_descriptor_ = file->message_type(2);
  static const int FenShiLishi_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShiLishi, rows_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShiLishi, riqi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShiLishi, zuoshou_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShiLishi, jiaoyishijianduan_),
  };
  FenShiLishi_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FenShiLishi_descriptor_,
      FenShiLishi::default_instance_,
      FenShiLishi_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShiLishi, _has_bits_[0]),
      -1,
      -1,
      sizeof(FenShiLishi),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FenShiLishi, _internal_metadata_),
      -1);
  DynaAlib_descriptor_ = file->message_type(3);
  static const int DynaAlib_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynaAlib, shijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynaAlib, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynaAlib, objs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynaAlib, daobjs_),
  };
  DynaAlib_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DynaAlib_descriptor_,
      DynaAlib::default_instance_,
      DynaAlib_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynaAlib, _has_bits_[0]),
      -1,
      -1,
      sizeof(DynaAlib),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynaAlib, _internal_metadata_),
      -1);
  DynaAlibObj_descriptor_ = file->message_type(4);
  static const int DynaAlibObj_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynaAlibObj, objs_),
  };
  DynaAlibObj_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DynaAlibObj_descriptor_,
      DynaAlibObj::default_instance_,
      DynaAlibObj_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynaAlibObj, _has_bits_[0]),
      -1,
      -1,
      sizeof(DynaAlibObj),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynaAlibObj, _internal_metadata_),
      -1);
  BackUpState_descriptor_ = file->message_type(5);
  static const int BackUpState_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackUpState, market_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackUpState, backuptime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackUpState, backupclosestatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackUpState, closetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackUpState, closestatus_),
  };
  BackUpState_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BackUpState_descriptor_,
      BackUpState::default_instance_,
      BackUpState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackUpState, _has_bits_[0]),
      -1,
      -1,
      sizeof(BackUpState),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackUpState, _internal_metadata_),
      -1);
  LingxianDuokongZhibiao_descriptor_ = file->message_type(6);
  static const int LingxianDuokongZhibiao_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingxianDuokongZhibiao, shijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingxianDuokongZhibiao, lingxianzhibiao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingxianDuokongZhibiao, duokongxian_),
  };
  LingxianDuokongZhibiao_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LingxianDuokongZhibiao_descriptor_,
      LingxianDuokongZhibiao::default_instance_,
      LingxianDuokongZhibiao_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingxianDuokongZhibiao, _has_bits_[0]),
      -1,
      -1,
      sizeof(LingxianDuokongZhibiao),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingxianDuokongZhibiao, _internal_metadata_),
      -1);
  LingxianDuokongZhibiaoStatus_descriptor_ = file->message_type(7);
  static const int LingxianDuokongZhibiaoStatus_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingxianDuokongZhibiaoStatus, jiaoyiriqi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingxianDuokongZhibiaoStatus, indexstatuc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingxianDuokongZhibiaoStatus, datastatus_),
  };
  LingxianDuokongZhibiaoStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LingxianDuokongZhibiaoStatus_descriptor_,
      LingxianDuokongZhibiaoStatus::default_instance_,
      LingxianDuokongZhibiaoStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingxianDuokongZhibiaoStatus, _has_bits_[0]),
      -1,
      -1,
      sizeof(LingxianDuokongZhibiaoStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LingxianDuokongZhibiaoStatus, _internal_metadata_),
      -1);
  JiaoYiShiJianDuanJieGou_descriptor_ = file->message_type(8);
  static const int JiaoYiShiJianDuanJieGou_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiaoYiShiJianDuanJieGou, kaishishijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiaoYiShiJianDuanJieGou, jieshushijian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiaoYiShiJianDuanJieGou, kaishiriqi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiaoYiShiJianDuanJieGou, jieshuriqi_),
  };
  JiaoYiShiJianDuanJieGou_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      JiaoYiShiJianDuanJieGou_descriptor_,
      JiaoYiShiJianDuanJieGou::default_instance_,
      JiaoYiShiJianDuanJieGou_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiaoYiShiJianDuanJieGou, _has_bits_[0]),
      -1,
      -1,
      sizeof(JiaoYiShiJianDuanJieGou),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiaoYiShiJianDuanJieGou, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dzhyun_2egupiaolianxu_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KXian_descriptor_, &KXian::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FenShi_descriptor_, &FenShi::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FenShiLishi_descriptor_, &FenShiLishi::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DynaAlib_descriptor_, &DynaAlib::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DynaAlibObj_descriptor_, &DynaAlibObj::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BackUpState_descriptor_, &BackUpState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LingxianDuokongZhibiao_descriptor_, &LingxianDuokongZhibiao::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LingxianDuokongZhibiaoStatus_descriptor_, &LingxianDuokongZhibiaoStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      JiaoYiShiJianDuanJieGou_descriptor_, &JiaoYiShiJianDuanJieGou::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dzhyun_2egupiaolianxu_2eproto() {
  delete KXian::default_instance_;
  delete KXian_reflection_;
  delete FenShi::default_instance_;
  delete FenShi_reflection_;
  delete FenShiLishi::default_instance_;
  delete FenShiLishi_reflection_;
  delete DynaAlib::default_instance_;
  delete DynaAlib_reflection_;
  delete DynaAlibObj::default_instance_;
  delete DynaAlibObj_reflection_;
  delete BackUpState::default_instance_;
  delete BackUpState_reflection_;
  delete LingxianDuokongZhibiao::default_instance_;
  delete LingxianDuokongZhibiao_reflection_;
  delete LingxianDuokongZhibiaoStatus::default_instance_;
  delete LingxianDuokongZhibiaoStatus_reflection_;
  delete JiaoYiShiJianDuanJieGou::default_instance_;
  delete JiaoYiShiJianDuanJieGou_reflection_;
}

void protobuf_AddDesc_dzhyun_2egupiaolianxu_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031dzhyun.gupiaolianxu.proto\022\006dzhyun\"\242\002\n\005"
    "KXian\022\017\n\007ShiJian\030\001 \002(\003\022\021\n\tKaiPanJia\030\002 \001("
    "\003\022\021\n\tZuiGaoJia\030\003 \001(\003\022\020\n\010ZuiDiJia\030\004 \001(\003\022\022"
    "\n\nShouPanJia\030\005 \001(\003\022\026\n\016ChengJiaoLiang\030\006 \001"
    "(\003\022\022\n\nChengJiaoE\030\007 \001(\003\022\026\n\016ChengJiaoBiShu"
    "\030\010 \001(\003\022\030\n\020ShangZhangJiaShu\030\t \001(\003\022\024\n\014XiaD"
    "ieJiaShu\030\n \001(\003\022\017\n\007ChiCang\030\013 \001(\003\022\020\n\010ZengC"
    "ang\030\014 \001(\003\022\021\n\tZengLiang\030\r \001(\003\022\022\n\nJieSuanJ"
    "ia\030\016 \001(\003\"\326\001\n\006FenShi\022\017\n\007ShiJian\030\001 \002(\003\022\024\n\014"
    "ChengJiaoJia\030\002 \001(\003\022\026\n\016ChengJiaoLiang\030\003 \001"
    "(\003\022\022\n\nChengJiaoE\030\004 \001(\003\022\016\n\006JunJia\030\005 \001(\003\022\027"
    "\n\017LingXianZhiBiao\030\006 \001(\003\022\023\n\013DuoKongXian\030\007"
    " \001(\003\022\034\n\024WeiTuoMaiRuZongLiang\030\010 \001(\003\022\035\n\025We"
    "iTuoMaiChuZongLiang\030\t \001(\003\"\206\001\n\013FenShiLish"
    "i\022\034\n\004Rows\030\001 \003(\0132\016.dzhyun.FenShi\022\014\n\004RiQi\030"
    "\002 \001(\003\022\017\n\007ZuoShou\030\003 \001(\003\022:\n\021JiaoYiShiJianD"
    "uan\030\004 \003(\0132\037.dzhyun.JiaoYiShiJianDuanJieG"
    "ou\"Z\n\010DynaAlib\022\017\n\007ShiJian\030\001 \002(\003\022\n\n\002ID\030\002 "
    "\002(\003\022\014\n\004Objs\030\003 \003(\t\022#\n\006DAObjs\030\004 \003(\0132\023.dzhy"
    "un.DynaAlibObj\"\033\n\013DynaAlibObj\022\014\n\004Objs\030\001 "
    "\003(\t\"t\n\013BackUpState\022\016\n\006Market\030\001 \002(\t\022\022\n\nBa"
    "ckUpTime\030\002 \001(\003\022\031\n\021BackUpCloseStatus\030\003 \001("
    "\003\022\021\n\tCloseTime\030\004 \001(\003\022\023\n\013CloseStatus\030\005 \001("
    "\003\"W\n\026LingxianDuokongZhibiao\022\017\n\007ShiJian\030\001"
    " \002(\003\022\027\n\017LingXianZhiBiao\030\002 \001(\003\022\023\n\013DuoKong"
    "Xian\030\003 \001(\003\"{\n\034LingxianDuokongZhibiaoStat"
    "us\022\022\n\nJiaoYiRiQi\030\001 \002(\003\022\023\n\013IndexStatuc\030\002 "
    "\001(\003\0222\n\nDataStatus\030\003 \001(\0132\036.dzhyun.Lingxia"
    "nDuokongZhibiao\"o\n\027JiaoYiShiJianDuanJieG"
    "ou\022\025\n\rKaiShiShiJian\030\001 \001(\003\022\025\n\rJieShuShiJi"
    "an\030\002 \001(\003\022\022\n\nKaiShiRiQi\030\003 \001(\003\022\022\n\nJieShuRi"
    "Qi\030\004 \001(\003B\022\n\020com.dzhyun.proto", 1268);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dzhyun.gupiaolianxu.proto", &protobuf_RegisterTypes);
  KXian::default_instance_ = new KXian();
  FenShi::default_instance_ = new FenShi();
  FenShiLishi::default_instance_ = new FenShiLishi();
  DynaAlib::default_instance_ = new DynaAlib();
  DynaAlibObj::default_instance_ = new DynaAlibObj();
  BackUpState::default_instance_ = new BackUpState();
  LingxianDuokongZhibiao::default_instance_ = new LingxianDuokongZhibiao();
  LingxianDuokongZhibiaoStatus::default_instance_ = new LingxianDuokongZhibiaoStatus();
  JiaoYiShiJianDuanJieGou::default_instance_ = new JiaoYiShiJianDuanJieGou();
  KXian::default_instance_->InitAsDefaultInstance();
  FenShi::default_instance_->InitAsDefaultInstance();
  FenShiLishi::default_instance_->InitAsDefaultInstance();
  DynaAlib::default_instance_->InitAsDefaultInstance();
  DynaAlibObj::default_instance_->InitAsDefaultInstance();
  BackUpState::default_instance_->InitAsDefaultInstance();
  LingxianDuokongZhibiao::default_instance_->InitAsDefaultInstance();
  LingxianDuokongZhibiaoStatus::default_instance_->InitAsDefaultInstance();
  JiaoYiShiJianDuanJieGou::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dzhyun_2egupiaolianxu_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dzhyun_2egupiaolianxu_2eproto {
  StaticDescriptorInitializer_dzhyun_2egupiaolianxu_2eproto() {
    protobuf_AddDesc_dzhyun_2egupiaolianxu_2eproto();
  }
} static_descriptor_initializer_dzhyun_2egupiaolianxu_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KXian::kShiJianFieldNumber;
const int KXian::kKaiPanJiaFieldNumber;
const int KXian::kZuiGaoJiaFieldNumber;
const int KXian::kZuiDiJiaFieldNumber;
const int KXian::kShouPanJiaFieldNumber;
const int KXian::kChengJiaoLiangFieldNumber;
const int KXian::kChengJiaoEFieldNumber;
const int KXian::kChengJiaoBiShuFieldNumber;
const int KXian::kShangZhangJiaShuFieldNumber;
const int KXian::kXiaDieJiaShuFieldNumber;
const int KXian::kChiCangFieldNumber;
const int KXian::kZengCangFieldNumber;
const int KXian::kZengLiangFieldNumber;
const int KXian::kJieSuanJiaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KXian::KXian()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.KXian)
}

void KXian::InitAsDefaultInstance() {
}

KXian::KXian(const KXian& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.KXian)
}

void KXian::SharedCtor() {
  _cached_size_ = 0;
  shijian_ = GOOGLE_LONGLONG(0);
  kaipanjia_ = GOOGLE_LONGLONG(0);
  zuigaojia_ = GOOGLE_LONGLONG(0);
  zuidijia_ = GOOGLE_LONGLONG(0);
  shoupanjia_ = GOOGLE_LONGLONG(0);
  chengjiaoliang_ = GOOGLE_LONGLONG(0);
  chengjiaoe_ = GOOGLE_LONGLONG(0);
  chengjiaobishu_ = GOOGLE_LONGLONG(0);
  shangzhangjiashu_ = GOOGLE_LONGLONG(0);
  xiadiejiashu_ = GOOGLE_LONGLONG(0);
  chicang_ = GOOGLE_LONGLONG(0);
  zengcang_ = GOOGLE_LONGLONG(0);
  zengliang_ = GOOGLE_LONGLONG(0);
  jiesuanjia_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KXian::~KXian() {
  // @@protoc_insertion_point(destructor:dzhyun.KXian)
  SharedDtor();
}

void KXian::SharedDtor() {
  if (this != default_instance_) {
  }
}

void KXian::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KXian::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KXian_descriptor_;
}

const KXian& KXian::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2egupiaolianxu_2eproto();
  return *default_instance_;
}

KXian* KXian::default_instance_ = NULL;

KXian* KXian::New(::google::protobuf::Arena* arena) const {
  KXian* n = new KXian;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KXian::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.KXian)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(KXian, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<KXian*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(shijian_, chengjiaobishu_);
  }
  if (_has_bits_[8 / 32] & 16128u) {
    ZR_(shangzhangjiashu_, jiesuanjia_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool KXian::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.KXian)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 ShiJian = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shijian_)));
          set_has_shijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_KaiPanJia;
        break;
      }

      // optional int64 KaiPanJia = 2;
      case 2: {
        if (tag == 16) {
         parse_KaiPanJia:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &kaipanjia_)));
          set_has_kaipanjia();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ZuiGaoJia;
        break;
      }

      // optional int64 ZuiGaoJia = 3;
      case 3: {
        if (tag == 24) {
         parse_ZuiGaoJia:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &zuigaojia_)));
          set_has_zuigaojia();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ZuiDiJia;
        break;
      }

      // optional int64 ZuiDiJia = 4;
      case 4: {
        if (tag == 32) {
         parse_ZuiDiJia:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &zuidijia_)));
          set_has_zuidijia();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ShouPanJia;
        break;
      }

      // optional int64 ShouPanJia = 5;
      case 5: {
        if (tag == 40) {
         parse_ShouPanJia:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shoupanjia_)));
          set_has_shoupanjia();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ChengJiaoLiang;
        break;
      }

      // optional int64 ChengJiaoLiang = 6;
      case 6: {
        if (tag == 48) {
         parse_ChengJiaoLiang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &chengjiaoliang_)));
          set_has_chengjiaoliang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_ChengJiaoE;
        break;
      }

      // optional int64 ChengJiaoE = 7;
      case 7: {
        if (tag == 56) {
         parse_ChengJiaoE:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &chengjiaoe_)));
          set_has_chengjiaoe();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_ChengJiaoBiShu;
        break;
      }

      // optional int64 ChengJiaoBiShu = 8;
      case 8: {
        if (tag == 64) {
         parse_ChengJiaoBiShu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &chengjiaobishu_)));
          set_has_chengjiaobishu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_ShangZhangJiaShu;
        break;
      }

      // optional int64 ShangZhangJiaShu = 9;
      case 9: {
        if (tag == 72) {
         parse_ShangZhangJiaShu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shangzhangjiashu_)));
          set_has_shangzhangjiashu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_XiaDieJiaShu;
        break;
      }

      // optional int64 XiaDieJiaShu = 10;
      case 10: {
        if (tag == 80) {
         parse_XiaDieJiaShu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &xiadiejiashu_)));
          set_has_xiadiejiashu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_ChiCang;
        break;
      }

      // optional int64 ChiCang = 11;
      case 11: {
        if (tag == 88) {
         parse_ChiCang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &chicang_)));
          set_has_chicang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_ZengCang;
        break;
      }

      // optional int64 ZengCang = 12;
      case 12: {
        if (tag == 96) {
         parse_ZengCang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &zengcang_)));
          set_has_zengcang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_ZengLiang;
        break;
      }

      // optional int64 ZengLiang = 13;
      case 13: {
        if (tag == 104) {
         parse_ZengLiang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &zengliang_)));
          set_has_zengliang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_JieSuanJia;
        break;
      }

      // optional int64 JieSuanJia = 14;
      case 14: {
        if (tag == 112) {
         parse_JieSuanJia:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jiesuanjia_)));
          set_has_jiesuanjia();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.KXian)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.KXian)
  return false;
#undef DO_
}

void KXian::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.KXian)
  // required int64 ShiJian = 1;
  if (has_shijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shijian(), output);
  }

  // optional int64 KaiPanJia = 2;
  if (has_kaipanjia()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->kaipanjia(), output);
  }

  // optional int64 ZuiGaoJia = 3;
  if (has_zuigaojia()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->zuigaojia(), output);
  }

  // optional int64 ZuiDiJia = 4;
  if (has_zuidijia()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->zuidijia(), output);
  }

  // optional int64 ShouPanJia = 5;
  if (has_shoupanjia()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->shoupanjia(), output);
  }

  // optional int64 ChengJiaoLiang = 6;
  if (has_chengjiaoliang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->chengjiaoliang(), output);
  }

  // optional int64 ChengJiaoE = 7;
  if (has_chengjiaoe()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->chengjiaoe(), output);
  }

  // optional int64 ChengJiaoBiShu = 8;
  if (has_chengjiaobishu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->chengjiaobishu(), output);
  }

  // optional int64 ShangZhangJiaShu = 9;
  if (has_shangzhangjiashu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->shangzhangjiashu(), output);
  }

  // optional int64 XiaDieJiaShu = 10;
  if (has_xiadiejiashu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->xiadiejiashu(), output);
  }

  // optional int64 ChiCang = 11;
  if (has_chicang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->chicang(), output);
  }

  // optional int64 ZengCang = 12;
  if (has_zengcang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->zengcang(), output);
  }

  // optional int64 ZengLiang = 13;
  if (has_zengliang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->zengliang(), output);
  }

  // optional int64 JieSuanJia = 14;
  if (has_jiesuanjia()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->jiesuanjia(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.KXian)
}

::google::protobuf::uint8* KXian::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.KXian)
  // required int64 ShiJian = 1;
  if (has_shijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shijian(), target);
  }

  // optional int64 KaiPanJia = 2;
  if (has_kaipanjia()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->kaipanjia(), target);
  }

  // optional int64 ZuiGaoJia = 3;
  if (has_zuigaojia()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->zuigaojia(), target);
  }

  // optional int64 ZuiDiJia = 4;
  if (has_zuidijia()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->zuidijia(), target);
  }

  // optional int64 ShouPanJia = 5;
  if (has_shoupanjia()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->shoupanjia(), target);
  }

  // optional int64 ChengJiaoLiang = 6;
  if (has_chengjiaoliang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->chengjiaoliang(), target);
  }

  // optional int64 ChengJiaoE = 7;
  if (has_chengjiaoe()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->chengjiaoe(), target);
  }

  // optional int64 ChengJiaoBiShu = 8;
  if (has_chengjiaobishu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->chengjiaobishu(), target);
  }

  // optional int64 ShangZhangJiaShu = 9;
  if (has_shangzhangjiashu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->shangzhangjiashu(), target);
  }

  // optional int64 XiaDieJiaShu = 10;
  if (has_xiadiejiashu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->xiadiejiashu(), target);
  }

  // optional int64 ChiCang = 11;
  if (has_chicang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->chicang(), target);
  }

  // optional int64 ZengCang = 12;
  if (has_zengcang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->zengcang(), target);
  }

  // optional int64 ZengLiang = 13;
  if (has_zengliang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->zengliang(), target);
  }

  // optional int64 JieSuanJia = 14;
  if (has_jiesuanjia()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->jiesuanjia(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.KXian)
  return target;
}

int KXian::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.KXian)
  int total_size = 0;

  // required int64 ShiJian = 1;
  if (has_shijian()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shijian());
  }
  if (_has_bits_[1 / 32] & 254u) {
    // optional int64 KaiPanJia = 2;
    if (has_kaipanjia()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->kaipanjia());
    }

    // optional int64 ZuiGaoJia = 3;
    if (has_zuigaojia()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->zuigaojia());
    }

    // optional int64 ZuiDiJia = 4;
    if (has_zuidijia()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->zuidijia());
    }

    // optional int64 ShouPanJia = 5;
    if (has_shoupanjia()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shoupanjia());
    }

    // optional int64 ChengJiaoLiang = 6;
    if (has_chengjiaoliang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->chengjiaoliang());
    }

    // optional int64 ChengJiaoE = 7;
    if (has_chengjiaoe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->chengjiaoe());
    }

    // optional int64 ChengJiaoBiShu = 8;
    if (has_chengjiaobishu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->chengjiaobishu());
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional int64 ShangZhangJiaShu = 9;
    if (has_shangzhangjiashu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shangzhangjiashu());
    }

    // optional int64 XiaDieJiaShu = 10;
    if (has_xiadiejiashu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->xiadiejiashu());
    }

    // optional int64 ChiCang = 11;
    if (has_chicang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->chicang());
    }

    // optional int64 ZengCang = 12;
    if (has_zengcang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->zengcang());
    }

    // optional int64 ZengLiang = 13;
    if (has_zengliang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->zengliang());
    }

    // optional int64 JieSuanJia = 14;
    if (has_jiesuanjia()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jiesuanjia());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KXian::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.KXian)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const KXian* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const KXian>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.KXian)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.KXian)
    MergeFrom(*source);
  }
}

void KXian::MergeFrom(const KXian& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.KXian)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shijian()) {
      set_shijian(from.shijian());
    }
    if (from.has_kaipanjia()) {
      set_kaipanjia(from.kaipanjia());
    }
    if (from.has_zuigaojia()) {
      set_zuigaojia(from.zuigaojia());
    }
    if (from.has_zuidijia()) {
      set_zuidijia(from.zuidijia());
    }
    if (from.has_shoupanjia()) {
      set_shoupanjia(from.shoupanjia());
    }
    if (from.has_chengjiaoliang()) {
      set_chengjiaoliang(from.chengjiaoliang());
    }
    if (from.has_chengjiaoe()) {
      set_chengjiaoe(from.chengjiaoe());
    }
    if (from.has_chengjiaobishu()) {
      set_chengjiaobishu(from.chengjiaobishu());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_shangzhangjiashu()) {
      set_shangzhangjiashu(from.shangzhangjiashu());
    }
    if (from.has_xiadiejiashu()) {
      set_xiadiejiashu(from.xiadiejiashu());
    }
    if (from.has_chicang()) {
      set_chicang(from.chicang());
    }
    if (from.has_zengcang()) {
      set_zengcang(from.zengcang());
    }
    if (from.has_zengliang()) {
      set_zengliang(from.zengliang());
    }
    if (from.has_jiesuanjia()) {
      set_jiesuanjia(from.jiesuanjia());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void KXian::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.KXian)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KXian::CopyFrom(const KXian& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.KXian)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KXian::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void KXian::Swap(KXian* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KXian::InternalSwap(KXian* other) {
  std::swap(shijian_, other->shijian_);
  std::swap(kaipanjia_, other->kaipanjia_);
  std::swap(zuigaojia_, other->zuigaojia_);
  std::swap(zuidijia_, other->zuidijia_);
  std::swap(shoupanjia_, other->shoupanjia_);
  std::swap(chengjiaoliang_, other->chengjiaoliang_);
  std::swap(chengjiaoe_, other->chengjiaoe_);
  std::swap(chengjiaobishu_, other->chengjiaobishu_);
  std::swap(shangzhangjiashu_, other->shangzhangjiashu_);
  std::swap(xiadiejiashu_, other->xiadiejiashu_);
  std::swap(chicang_, other->chicang_);
  std::swap(zengcang_, other->zengcang_);
  std::swap(zengliang_, other->zengliang_);
  std::swap(jiesuanjia_, other->jiesuanjia_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KXian::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KXian_descriptor_;
  metadata.reflection = KXian_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KXian

// required int64 ShiJian = 1;
bool KXian::has_shijian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void KXian::set_has_shijian() {
  _has_bits_[0] |= 0x00000001u;
}
void KXian::clear_has_shijian() {
  _has_bits_[0] &= ~0x00000001u;
}
void KXian::clear_shijian() {
  shijian_ = GOOGLE_LONGLONG(0);
  clear_has_shijian();
}
 ::google::protobuf::int64 KXian::shijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.KXian.ShiJian)
  return shijian_;
}
 void KXian::set_shijian(::google::protobuf::int64 value) {
  set_has_shijian();
  shijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.KXian.ShiJian)
}

// optional int64 KaiPanJia = 2;
bool KXian::has_kaipanjia() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void KXian::set_has_kaipanjia() {
  _has_bits_[0] |= 0x00000002u;
}
void KXian::clear_has_kaipanjia() {
  _has_bits_[0] &= ~0x00000002u;
}
void KXian::clear_kaipanjia() {
  kaipanjia_ = GOOGLE_LONGLONG(0);
  clear_has_kaipanjia();
}
 ::google::protobuf::int64 KXian::kaipanjia() const {
  // @@protoc_insertion_point(field_get:dzhyun.KXian.KaiPanJia)
  return kaipanjia_;
}
 void KXian::set_kaipanjia(::google::protobuf::int64 value) {
  set_has_kaipanjia();
  kaipanjia_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.KXian.KaiPanJia)
}

// optional int64 ZuiGaoJia = 3;
bool KXian::has_zuigaojia() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void KXian::set_has_zuigaojia() {
  _has_bits_[0] |= 0x00000004u;
}
void KXian::clear_has_zuigaojia() {
  _has_bits_[0] &= ~0x00000004u;
}
void KXian::clear_zuigaojia() {
  zuigaojia_ = GOOGLE_LONGLONG(0);
  clear_has_zuigaojia();
}
 ::google::protobuf::int64 KXian::zuigaojia() const {
  // @@protoc_insertion_point(field_get:dzhyun.KXian.ZuiGaoJia)
  return zuigaojia_;
}
 void KXian::set_zuigaojia(::google::protobuf::int64 value) {
  set_has_zuigaojia();
  zuigaojia_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.KXian.ZuiGaoJia)
}

// optional int64 ZuiDiJia = 4;
bool KXian::has_zuidijia() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void KXian::set_has_zuidijia() {
  _has_bits_[0] |= 0x00000008u;
}
void KXian::clear_has_zuidijia() {
  _has_bits_[0] &= ~0x00000008u;
}
void KXian::clear_zuidijia() {
  zuidijia_ = GOOGLE_LONGLONG(0);
  clear_has_zuidijia();
}
 ::google::protobuf::int64 KXian::zuidijia() const {
  // @@protoc_insertion_point(field_get:dzhyun.KXian.ZuiDiJia)
  return zuidijia_;
}
 void KXian::set_zuidijia(::google::protobuf::int64 value) {
  set_has_zuidijia();
  zuidijia_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.KXian.ZuiDiJia)
}

// optional int64 ShouPanJia = 5;
bool KXian::has_shoupanjia() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void KXian::set_has_shoupanjia() {
  _has_bits_[0] |= 0x00000010u;
}
void KXian::clear_has_shoupanjia() {
  _has_bits_[0] &= ~0x00000010u;
}
void KXian::clear_shoupanjia() {
  shoupanjia_ = GOOGLE_LONGLONG(0);
  clear_has_shoupanjia();
}
 ::google::protobuf::int64 KXian::shoupanjia() const {
  // @@protoc_insertion_point(field_get:dzhyun.KXian.ShouPanJia)
  return shoupanjia_;
}
 void KXian::set_shoupanjia(::google::protobuf::int64 value) {
  set_has_shoupanjia();
  shoupanjia_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.KXian.ShouPanJia)
}

// optional int64 ChengJiaoLiang = 6;
bool KXian::has_chengjiaoliang() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void KXian::set_has_chengjiaoliang() {
  _has_bits_[0] |= 0x00000020u;
}
void KXian::clear_has_chengjiaoliang() {
  _has_bits_[0] &= ~0x00000020u;
}
void KXian::clear_chengjiaoliang() {
  chengjiaoliang_ = GOOGLE_LONGLONG(0);
  clear_has_chengjiaoliang();
}
 ::google::protobuf::int64 KXian::chengjiaoliang() const {
  // @@protoc_insertion_point(field_get:dzhyun.KXian.ChengJiaoLiang)
  return chengjiaoliang_;
}
 void KXian::set_chengjiaoliang(::google::protobuf::int64 value) {
  set_has_chengjiaoliang();
  chengjiaoliang_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.KXian.ChengJiaoLiang)
}

// optional int64 ChengJiaoE = 7;
bool KXian::has_chengjiaoe() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void KXian::set_has_chengjiaoe() {
  _has_bits_[0] |= 0x00000040u;
}
void KXian::clear_has_chengjiaoe() {
  _has_bits_[0] &= ~0x00000040u;
}
void KXian::clear_chengjiaoe() {
  chengjiaoe_ = GOOGLE_LONGLONG(0);
  clear_has_chengjiaoe();
}
 ::google::protobuf::int64 KXian::chengjiaoe() const {
  // @@protoc_insertion_point(field_get:dzhyun.KXian.ChengJiaoE)
  return chengjiaoe_;
}
 void KXian::set_chengjiaoe(::google::protobuf::int64 value) {
  set_has_chengjiaoe();
  chengjiaoe_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.KXian.ChengJiaoE)
}

// optional int64 ChengJiaoBiShu = 8;
bool KXian::has_chengjiaobishu() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void KXian::set_has_chengjiaobishu() {
  _has_bits_[0] |= 0x00000080u;
}
void KXian::clear_has_chengjiaobishu() {
  _has_bits_[0] &= ~0x00000080u;
}
void KXian::clear_chengjiaobishu() {
  chengjiaobishu_ = GOOGLE_LONGLONG(0);
  clear_has_chengjiaobishu();
}
 ::google::protobuf::int64 KXian::chengjiaobishu() const {
  // @@protoc_insertion_point(field_get:dzhyun.KXian.ChengJiaoBiShu)
  return chengjiaobishu_;
}
 void KXian::set_chengjiaobishu(::google::protobuf::int64 value) {
  set_has_chengjiaobishu();
  chengjiaobishu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.KXian.ChengJiaoBiShu)
}

// optional int64 ShangZhangJiaShu = 9;
bool KXian::has_shangzhangjiashu() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void KXian::set_has_shangzhangjiashu() {
  _has_bits_[0] |= 0x00000100u;
}
void KXian::clear_has_shangzhangjiashu() {
  _has_bits_[0] &= ~0x00000100u;
}
void KXian::clear_shangzhangjiashu() {
  shangzhangjiashu_ = GOOGLE_LONGLONG(0);
  clear_has_shangzhangjiashu();
}
 ::google::protobuf::int64 KXian::shangzhangjiashu() const {
  // @@protoc_insertion_point(field_get:dzhyun.KXian.ShangZhangJiaShu)
  return shangzhangjiashu_;
}
 void KXian::set_shangzhangjiashu(::google::protobuf::int64 value) {
  set_has_shangzhangjiashu();
  shangzhangjiashu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.KXian.ShangZhangJiaShu)
}

// optional int64 XiaDieJiaShu = 10;
bool KXian::has_xiadiejiashu() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void KXian::set_has_xiadiejiashu() {
  _has_bits_[0] |= 0x00000200u;
}
void KXian::clear_has_xiadiejiashu() {
  _has_bits_[0] &= ~0x00000200u;
}
void KXian::clear_xiadiejiashu() {
  xiadiejiashu_ = GOOGLE_LONGLONG(0);
  clear_has_xiadiejiashu();
}
 ::google::protobuf::int64 KXian::xiadiejiashu() const {
  // @@protoc_insertion_point(field_get:dzhyun.KXian.XiaDieJiaShu)
  return xiadiejiashu_;
}
 void KXian::set_xiadiejiashu(::google::protobuf::int64 value) {
  set_has_xiadiejiashu();
  xiadiejiashu_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.KXian.XiaDieJiaShu)
}

// optional int64 ChiCang = 11;
bool KXian::has_chicang() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void KXian::set_has_chicang() {
  _has_bits_[0] |= 0x00000400u;
}
void KXian::clear_has_chicang() {
  _has_bits_[0] &= ~0x00000400u;
}
void KXian::clear_chicang() {
  chicang_ = GOOGLE_LONGLONG(0);
  clear_has_chicang();
}
 ::google::protobuf::int64 KXian::chicang() const {
  // @@protoc_insertion_point(field_get:dzhyun.KXian.ChiCang)
  return chicang_;
}
 void KXian::set_chicang(::google::protobuf::int64 value) {
  set_has_chicang();
  chicang_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.KXian.ChiCang)
}

// optional int64 ZengCang = 12;
bool KXian::has_zengcang() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void KXian::set_has_zengcang() {
  _has_bits_[0] |= 0x00000800u;
}
void KXian::clear_has_zengcang() {
  _has_bits_[0] &= ~0x00000800u;
}
void KXian::clear_zengcang() {
  zengcang_ = GOOGLE_LONGLONG(0);
  clear_has_zengcang();
}
 ::google::protobuf::int64 KXian::zengcang() const {
  // @@protoc_insertion_point(field_get:dzhyun.KXian.ZengCang)
  return zengcang_;
}
 void KXian::set_zengcang(::google::protobuf::int64 value) {
  set_has_zengcang();
  zengcang_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.KXian.ZengCang)
}

// optional int64 ZengLiang = 13;
bool KXian::has_zengliang() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void KXian::set_has_zengliang() {
  _has_bits_[0] |= 0x00001000u;
}
void KXian::clear_has_zengliang() {
  _has_bits_[0] &= ~0x00001000u;
}
void KXian::clear_zengliang() {
  zengliang_ = GOOGLE_LONGLONG(0);
  clear_has_zengliang();
}
 ::google::protobuf::int64 KXian::zengliang() const {
  // @@protoc_insertion_point(field_get:dzhyun.KXian.ZengLiang)
  return zengliang_;
}
 void KXian::set_zengliang(::google::protobuf::int64 value) {
  set_has_zengliang();
  zengliang_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.KXian.ZengLiang)
}

// optional int64 JieSuanJia = 14;
bool KXian::has_jiesuanjia() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void KXian::set_has_jiesuanjia() {
  _has_bits_[0] |= 0x00002000u;
}
void KXian::clear_has_jiesuanjia() {
  _has_bits_[0] &= ~0x00002000u;
}
void KXian::clear_jiesuanjia() {
  jiesuanjia_ = GOOGLE_LONGLONG(0);
  clear_has_jiesuanjia();
}
 ::google::protobuf::int64 KXian::jiesuanjia() const {
  // @@protoc_insertion_point(field_get:dzhyun.KXian.JieSuanJia)
  return jiesuanjia_;
}
 void KXian::set_jiesuanjia(::google::protobuf::int64 value) {
  set_has_jiesuanjia();
  jiesuanjia_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.KXian.JieSuanJia)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FenShi::kShiJianFieldNumber;
const int FenShi::kChengJiaoJiaFieldNumber;
const int FenShi::kChengJiaoLiangFieldNumber;
const int FenShi::kChengJiaoEFieldNumber;
const int FenShi::kJunJiaFieldNumber;
const int FenShi::kLingXianZhiBiaoFieldNumber;
const int FenShi::kDuoKongXianFieldNumber;
const int FenShi::kWeiTuoMaiRuZongLiangFieldNumber;
const int FenShi::kWeiTuoMaiChuZongLiangFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FenShi::FenShi()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.FenShi)
}

void FenShi::InitAsDefaultInstance() {
}

FenShi::FenShi(const FenShi& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.FenShi)
}

void FenShi::SharedCtor() {
  _cached_size_ = 0;
  shijian_ = GOOGLE_LONGLONG(0);
  chengjiaojia_ = GOOGLE_LONGLONG(0);
  chengjiaoliang_ = GOOGLE_LONGLONG(0);
  chengjiaoe_ = GOOGLE_LONGLONG(0);
  junjia_ = GOOGLE_LONGLONG(0);
  lingxianzhibiao_ = GOOGLE_LONGLONG(0);
  duokongxian_ = GOOGLE_LONGLONG(0);
  weituomairuzongliang_ = GOOGLE_LONGLONG(0);
  weituomaichuzongliang_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FenShi::~FenShi() {
  // @@protoc_insertion_point(destructor:dzhyun.FenShi)
  SharedDtor();
}

void FenShi::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FenShi::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FenShi::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FenShi_descriptor_;
}

const FenShi& FenShi::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2egupiaolianxu_2eproto();
  return *default_instance_;
}

FenShi* FenShi::default_instance_ = NULL;

FenShi* FenShi::New(::google::protobuf::Arena* arena) const {
  FenShi* n = new FenShi;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FenShi::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.FenShi)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FenShi, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FenShi*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(shijian_, weituomairuzongliang_);
  }
  weituomaichuzongliang_ = GOOGLE_LONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FenShi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.FenShi)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 ShiJian = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shijian_)));
          set_has_shijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ChengJiaoJia;
        break;
      }

      // optional int64 ChengJiaoJia = 2;
      case 2: {
        if (tag == 16) {
         parse_ChengJiaoJia:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &chengjiaojia_)));
          set_has_chengjiaojia();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ChengJiaoLiang;
        break;
      }

      // optional int64 ChengJiaoLiang = 3;
      case 3: {
        if (tag == 24) {
         parse_ChengJiaoLiang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &chengjiaoliang_)));
          set_has_chengjiaoliang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ChengJiaoE;
        break;
      }

      // optional int64 ChengJiaoE = 4;
      case 4: {
        if (tag == 32) {
         parse_ChengJiaoE:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &chengjiaoe_)));
          set_has_chengjiaoe();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_JunJia;
        break;
      }

      // optional int64 JunJia = 5;
      case 5: {
        if (tag == 40) {
         parse_JunJia:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &junjia_)));
          set_has_junjia();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_LingXianZhiBiao;
        break;
      }

      // optional int64 LingXianZhiBiao = 6;
      case 6: {
        if (tag == 48) {
         parse_LingXianZhiBiao:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lingxianzhibiao_)));
          set_has_lingxianzhibiao();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_DuoKongXian;
        break;
      }

      // optional int64 DuoKongXian = 7;
      case 7: {
        if (tag == 56) {
         parse_DuoKongXian:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &duokongxian_)));
          set_has_duokongxian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_WeiTuoMaiRuZongLiang;
        break;
      }

      // optional int64 WeiTuoMaiRuZongLiang = 8;
      case 8: {
        if (tag == 64) {
         parse_WeiTuoMaiRuZongLiang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weituomairuzongliang_)));
          set_has_weituomairuzongliang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_WeiTuoMaiChuZongLiang;
        break;
      }

      // optional int64 WeiTuoMaiChuZongLiang = 9;
      case 9: {
        if (tag == 72) {
         parse_WeiTuoMaiChuZongLiang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weituomaichuzongliang_)));
          set_has_weituomaichuzongliang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.FenShi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.FenShi)
  return false;
#undef DO_
}

void FenShi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.FenShi)
  // required int64 ShiJian = 1;
  if (has_shijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shijian(), output);
  }

  // optional int64 ChengJiaoJia = 2;
  if (has_chengjiaojia()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->chengjiaojia(), output);
  }

  // optional int64 ChengJiaoLiang = 3;
  if (has_chengjiaoliang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->chengjiaoliang(), output);
  }

  // optional int64 ChengJiaoE = 4;
  if (has_chengjiaoe()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->chengjiaoe(), output);
  }

  // optional int64 JunJia = 5;
  if (has_junjia()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->junjia(), output);
  }

  // optional int64 LingXianZhiBiao = 6;
  if (has_lingxianzhibiao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->lingxianzhibiao(), output);
  }

  // optional int64 DuoKongXian = 7;
  if (has_duokongxian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->duokongxian(), output);
  }

  // optional int64 WeiTuoMaiRuZongLiang = 8;
  if (has_weituomairuzongliang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->weituomairuzongliang(), output);
  }

  // optional int64 WeiTuoMaiChuZongLiang = 9;
  if (has_weituomaichuzongliang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->weituomaichuzongliang(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.FenShi)
}

::google::protobuf::uint8* FenShi::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.FenShi)
  // required int64 ShiJian = 1;
  if (has_shijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shijian(), target);
  }

  // optional int64 ChengJiaoJia = 2;
  if (has_chengjiaojia()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->chengjiaojia(), target);
  }

  // optional int64 ChengJiaoLiang = 3;
  if (has_chengjiaoliang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->chengjiaoliang(), target);
  }

  // optional int64 ChengJiaoE = 4;
  if (has_chengjiaoe()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->chengjiaoe(), target);
  }

  // optional int64 JunJia = 5;
  if (has_junjia()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->junjia(), target);
  }

  // optional int64 LingXianZhiBiao = 6;
  if (has_lingxianzhibiao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->lingxianzhibiao(), target);
  }

  // optional int64 DuoKongXian = 7;
  if (has_duokongxian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->duokongxian(), target);
  }

  // optional int64 WeiTuoMaiRuZongLiang = 8;
  if (has_weituomairuzongliang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->weituomairuzongliang(), target);
  }

  // optional int64 WeiTuoMaiChuZongLiang = 9;
  if (has_weituomaichuzongliang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->weituomaichuzongliang(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.FenShi)
  return target;
}

int FenShi::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.FenShi)
  int total_size = 0;

  // required int64 ShiJian = 1;
  if (has_shijian()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shijian());
  }
  if (_has_bits_[1 / 32] & 254u) {
    // optional int64 ChengJiaoJia = 2;
    if (has_chengjiaojia()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->chengjiaojia());
    }

    // optional int64 ChengJiaoLiang = 3;
    if (has_chengjiaoliang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->chengjiaoliang());
    }

    // optional int64 ChengJiaoE = 4;
    if (has_chengjiaoe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->chengjiaoe());
    }

    // optional int64 JunJia = 5;
    if (has_junjia()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->junjia());
    }

    // optional int64 LingXianZhiBiao = 6;
    if (has_lingxianzhibiao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lingxianzhibiao());
    }

    // optional int64 DuoKongXian = 7;
    if (has_duokongxian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->duokongxian());
    }

    // optional int64 WeiTuoMaiRuZongLiang = 8;
    if (has_weituomairuzongliang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->weituomairuzongliang());
    }

  }
  // optional int64 WeiTuoMaiChuZongLiang = 9;
  if (has_weituomaichuzongliang()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->weituomaichuzongliang());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FenShi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.FenShi)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FenShi* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FenShi>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.FenShi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.FenShi)
    MergeFrom(*source);
  }
}

void FenShi::MergeFrom(const FenShi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.FenShi)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shijian()) {
      set_shijian(from.shijian());
    }
    if (from.has_chengjiaojia()) {
      set_chengjiaojia(from.chengjiaojia());
    }
    if (from.has_chengjiaoliang()) {
      set_chengjiaoliang(from.chengjiaoliang());
    }
    if (from.has_chengjiaoe()) {
      set_chengjiaoe(from.chengjiaoe());
    }
    if (from.has_junjia()) {
      set_junjia(from.junjia());
    }
    if (from.has_lingxianzhibiao()) {
      set_lingxianzhibiao(from.lingxianzhibiao());
    }
    if (from.has_duokongxian()) {
      set_duokongxian(from.duokongxian());
    }
    if (from.has_weituomairuzongliang()) {
      set_weituomairuzongliang(from.weituomairuzongliang());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_weituomaichuzongliang()) {
      set_weituomaichuzongliang(from.weituomaichuzongliang());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void FenShi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.FenShi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FenShi::CopyFrom(const FenShi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.FenShi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FenShi::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FenShi::Swap(FenShi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FenShi::InternalSwap(FenShi* other) {
  std::swap(shijian_, other->shijian_);
  std::swap(chengjiaojia_, other->chengjiaojia_);
  std::swap(chengjiaoliang_, other->chengjiaoliang_);
  std::swap(chengjiaoe_, other->chengjiaoe_);
  std::swap(junjia_, other->junjia_);
  std::swap(lingxianzhibiao_, other->lingxianzhibiao_);
  std::swap(duokongxian_, other->duokongxian_);
  std::swap(weituomairuzongliang_, other->weituomairuzongliang_);
  std::swap(weituomaichuzongliang_, other->weituomaichuzongliang_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FenShi::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FenShi_descriptor_;
  metadata.reflection = FenShi_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FenShi

// required int64 ShiJian = 1;
bool FenShi::has_shijian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FenShi::set_has_shijian() {
  _has_bits_[0] |= 0x00000001u;
}
void FenShi::clear_has_shijian() {
  _has_bits_[0] &= ~0x00000001u;
}
void FenShi::clear_shijian() {
  shijian_ = GOOGLE_LONGLONG(0);
  clear_has_shijian();
}
 ::google::protobuf::int64 FenShi::shijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.FenShi.ShiJian)
  return shijian_;
}
 void FenShi::set_shijian(::google::protobuf::int64 value) {
  set_has_shijian();
  shijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.FenShi.ShiJian)
}

// optional int64 ChengJiaoJia = 2;
bool FenShi::has_chengjiaojia() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FenShi::set_has_chengjiaojia() {
  _has_bits_[0] |= 0x00000002u;
}
void FenShi::clear_has_chengjiaojia() {
  _has_bits_[0] &= ~0x00000002u;
}
void FenShi::clear_chengjiaojia() {
  chengjiaojia_ = GOOGLE_LONGLONG(0);
  clear_has_chengjiaojia();
}
 ::google::protobuf::int64 FenShi::chengjiaojia() const {
  // @@protoc_insertion_point(field_get:dzhyun.FenShi.ChengJiaoJia)
  return chengjiaojia_;
}
 void FenShi::set_chengjiaojia(::google::protobuf::int64 value) {
  set_has_chengjiaojia();
  chengjiaojia_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.FenShi.ChengJiaoJia)
}

// optional int64 ChengJiaoLiang = 3;
bool FenShi::has_chengjiaoliang() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FenShi::set_has_chengjiaoliang() {
  _has_bits_[0] |= 0x00000004u;
}
void FenShi::clear_has_chengjiaoliang() {
  _has_bits_[0] &= ~0x00000004u;
}
void FenShi::clear_chengjiaoliang() {
  chengjiaoliang_ = GOOGLE_LONGLONG(0);
  clear_has_chengjiaoliang();
}
 ::google::protobuf::int64 FenShi::chengjiaoliang() const {
  // @@protoc_insertion_point(field_get:dzhyun.FenShi.ChengJiaoLiang)
  return chengjiaoliang_;
}
 void FenShi::set_chengjiaoliang(::google::protobuf::int64 value) {
  set_has_chengjiaoliang();
  chengjiaoliang_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.FenShi.ChengJiaoLiang)
}

// optional int64 ChengJiaoE = 4;
bool FenShi::has_chengjiaoe() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FenShi::set_has_chengjiaoe() {
  _has_bits_[0] |= 0x00000008u;
}
void FenShi::clear_has_chengjiaoe() {
  _has_bits_[0] &= ~0x00000008u;
}
void FenShi::clear_chengjiaoe() {
  chengjiaoe_ = GOOGLE_LONGLONG(0);
  clear_has_chengjiaoe();
}
 ::google::protobuf::int64 FenShi::chengjiaoe() const {
  // @@protoc_insertion_point(field_get:dzhyun.FenShi.ChengJiaoE)
  return chengjiaoe_;
}
 void FenShi::set_chengjiaoe(::google::protobuf::int64 value) {
  set_has_chengjiaoe();
  chengjiaoe_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.FenShi.ChengJiaoE)
}

// optional int64 JunJia = 5;
bool FenShi::has_junjia() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void FenShi::set_has_junjia() {
  _has_bits_[0] |= 0x00000010u;
}
void FenShi::clear_has_junjia() {
  _has_bits_[0] &= ~0x00000010u;
}
void FenShi::clear_junjia() {
  junjia_ = GOOGLE_LONGLONG(0);
  clear_has_junjia();
}
 ::google::protobuf::int64 FenShi::junjia() const {
  // @@protoc_insertion_point(field_get:dzhyun.FenShi.JunJia)
  return junjia_;
}
 void FenShi::set_junjia(::google::protobuf::int64 value) {
  set_has_junjia();
  junjia_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.FenShi.JunJia)
}

// optional int64 LingXianZhiBiao = 6;
bool FenShi::has_lingxianzhibiao() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void FenShi::set_has_lingxianzhibiao() {
  _has_bits_[0] |= 0x00000020u;
}
void FenShi::clear_has_lingxianzhibiao() {
  _has_bits_[0] &= ~0x00000020u;
}
void FenShi::clear_lingxianzhibiao() {
  lingxianzhibiao_ = GOOGLE_LONGLONG(0);
  clear_has_lingxianzhibiao();
}
 ::google::protobuf::int64 FenShi::lingxianzhibiao() const {
  // @@protoc_insertion_point(field_get:dzhyun.FenShi.LingXianZhiBiao)
  return lingxianzhibiao_;
}
 void FenShi::set_lingxianzhibiao(::google::protobuf::int64 value) {
  set_has_lingxianzhibiao();
  lingxianzhibiao_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.FenShi.LingXianZhiBiao)
}

// optional int64 DuoKongXian = 7;
bool FenShi::has_duokongxian() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void FenShi::set_has_duokongxian() {
  _has_bits_[0] |= 0x00000040u;
}
void FenShi::clear_has_duokongxian() {
  _has_bits_[0] &= ~0x00000040u;
}
void FenShi::clear_duokongxian() {
  duokongxian_ = GOOGLE_LONGLONG(0);
  clear_has_duokongxian();
}
 ::google::protobuf::int64 FenShi::duokongxian() const {
  // @@protoc_insertion_point(field_get:dzhyun.FenShi.DuoKongXian)
  return duokongxian_;
}
 void FenShi::set_duokongxian(::google::protobuf::int64 value) {
  set_has_duokongxian();
  duokongxian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.FenShi.DuoKongXian)
}

// optional int64 WeiTuoMaiRuZongLiang = 8;
bool FenShi::has_weituomairuzongliang() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void FenShi::set_has_weituomairuzongliang() {
  _has_bits_[0] |= 0x00000080u;
}
void FenShi::clear_has_weituomairuzongliang() {
  _has_bits_[0] &= ~0x00000080u;
}
void FenShi::clear_weituomairuzongliang() {
  weituomairuzongliang_ = GOOGLE_LONGLONG(0);
  clear_has_weituomairuzongliang();
}
 ::google::protobuf::int64 FenShi::weituomairuzongliang() const {
  // @@protoc_insertion_point(field_get:dzhyun.FenShi.WeiTuoMaiRuZongLiang)
  return weituomairuzongliang_;
}
 void FenShi::set_weituomairuzongliang(::google::protobuf::int64 value) {
  set_has_weituomairuzongliang();
  weituomairuzongliang_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.FenShi.WeiTuoMaiRuZongLiang)
}

// optional int64 WeiTuoMaiChuZongLiang = 9;
bool FenShi::has_weituomaichuzongliang() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void FenShi::set_has_weituomaichuzongliang() {
  _has_bits_[0] |= 0x00000100u;
}
void FenShi::clear_has_weituomaichuzongliang() {
  _has_bits_[0] &= ~0x00000100u;
}
void FenShi::clear_weituomaichuzongliang() {
  weituomaichuzongliang_ = GOOGLE_LONGLONG(0);
  clear_has_weituomaichuzongliang();
}
 ::google::protobuf::int64 FenShi::weituomaichuzongliang() const {
  // @@protoc_insertion_point(field_get:dzhyun.FenShi.WeiTuoMaiChuZongLiang)
  return weituomaichuzongliang_;
}
 void FenShi::set_weituomaichuzongliang(::google::protobuf::int64 value) {
  set_has_weituomaichuzongliang();
  weituomaichuzongliang_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.FenShi.WeiTuoMaiChuZongLiang)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FenShiLishi::kRowsFieldNumber;
const int FenShiLishi::kRiQiFieldNumber;
const int FenShiLishi::kZuoShouFieldNumber;
const int FenShiLishi::kJiaoYiShiJianDuanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FenShiLishi::FenShiLishi()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.FenShiLishi)
}

void FenShiLishi::InitAsDefaultInstance() {
}

FenShiLishi::FenShiLishi(const FenShiLishi& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.FenShiLishi)
}

void FenShiLishi::SharedCtor() {
  _cached_size_ = 0;
  riqi_ = GOOGLE_LONGLONG(0);
  zuoshou_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FenShiLishi::~FenShiLishi() {
  // @@protoc_insertion_point(destructor:dzhyun.FenShiLishi)
  SharedDtor();
}

void FenShiLishi::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FenShiLishi::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FenShiLishi::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FenShiLishi_descriptor_;
}

const FenShiLishi& FenShiLishi::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2egupiaolianxu_2eproto();
  return *default_instance_;
}

FenShiLishi* FenShiLishi::default_instance_ = NULL;

FenShiLishi* FenShiLishi::New(::google::protobuf::Arena* arena) const {
  FenShiLishi* n = new FenShiLishi;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FenShiLishi::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.FenShiLishi)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FenShiLishi, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FenShiLishi*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(riqi_, zuoshou_);

#undef ZR_HELPER_
#undef ZR_

  rows_.Clear();
  jiaoyishijianduan_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FenShiLishi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.FenShiLishi)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dzhyun.FenShi Rows = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_Rows;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_RiQi;
        break;
      }

      // optional int64 RiQi = 2;
      case 2: {
        if (tag == 16) {
         parse_RiQi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &riqi_)));
          set_has_riqi();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ZuoShou;
        break;
      }

      // optional int64 ZuoShou = 3;
      case 3: {
        if (tag == 24) {
         parse_ZuoShou:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &zuoshou_)));
          set_has_zuoshou();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_JiaoYiShiJianDuan;
        break;
      }

      // repeated .dzhyun.JiaoYiShiJianDuanJieGou JiaoYiShiJianDuan = 4;
      case 4: {
        if (tag == 34) {
         parse_JiaoYiShiJianDuan:
          DO_(input->IncrementRecursionDepth());
         parse_loop_JiaoYiShiJianDuan:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_jiaoyishijianduan()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_JiaoYiShiJianDuan;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.FenShiLishi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.FenShiLishi)
  return false;
#undef DO_
}

void FenShiLishi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.FenShiLishi)
  // repeated .dzhyun.FenShi Rows = 1;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rows(i), output);
  }

  // optional int64 RiQi = 2;
  if (has_riqi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->riqi(), output);
  }

  // optional int64 ZuoShou = 3;
  if (has_zuoshou()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->zuoshou(), output);
  }

  // repeated .dzhyun.JiaoYiShiJianDuanJieGou JiaoYiShiJianDuan = 4;
  for (unsigned int i = 0, n = this->jiaoyishijianduan_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->jiaoyishijianduan(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.FenShiLishi)
}

::google::protobuf::uint8* FenShiLishi::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.FenShiLishi)
  // repeated .dzhyun.FenShi Rows = 1;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rows(i), target);
  }

  // optional int64 RiQi = 2;
  if (has_riqi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->riqi(), target);
  }

  // optional int64 ZuoShou = 3;
  if (has_zuoshou()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->zuoshou(), target);
  }

  // repeated .dzhyun.JiaoYiShiJianDuanJieGou JiaoYiShiJianDuan = 4;
  for (unsigned int i = 0, n = this->jiaoyishijianduan_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->jiaoyishijianduan(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.FenShiLishi)
  return target;
}

int FenShiLishi::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.FenShiLishi)
  int total_size = 0;

  if (_has_bits_[1 / 32] & 6u) {
    // optional int64 RiQi = 2;
    if (has_riqi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->riqi());
    }

    // optional int64 ZuoShou = 3;
    if (has_zuoshou()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->zuoshou());
    }

  }
  // repeated .dzhyun.FenShi Rows = 1;
  total_size += 1 * this->rows_size();
  for (int i = 0; i < this->rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rows(i));
  }

  // repeated .dzhyun.JiaoYiShiJianDuanJieGou JiaoYiShiJianDuan = 4;
  total_size += 1 * this->jiaoyishijianduan_size();
  for (int i = 0; i < this->jiaoyishijianduan_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->jiaoyishijianduan(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FenShiLishi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.FenShiLishi)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FenShiLishi* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FenShiLishi>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.FenShiLishi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.FenShiLishi)
    MergeFrom(*source);
  }
}

void FenShiLishi::MergeFrom(const FenShiLishi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.FenShiLishi)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  rows_.MergeFrom(from.rows_);
  jiaoyishijianduan_.MergeFrom(from.jiaoyishijianduan_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_riqi()) {
      set_riqi(from.riqi());
    }
    if (from.has_zuoshou()) {
      set_zuoshou(from.zuoshou());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void FenShiLishi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.FenShiLishi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FenShiLishi::CopyFrom(const FenShiLishi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.FenShiLishi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FenShiLishi::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rows())) return false;
  return true;
}

void FenShiLishi::Swap(FenShiLishi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FenShiLishi::InternalSwap(FenShiLishi* other) {
  rows_.UnsafeArenaSwap(&other->rows_);
  std::swap(riqi_, other->riqi_);
  std::swap(zuoshou_, other->zuoshou_);
  jiaoyishijianduan_.UnsafeArenaSwap(&other->jiaoyishijianduan_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FenShiLishi::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FenShiLishi_descriptor_;
  metadata.reflection = FenShiLishi_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FenShiLishi

// repeated .dzhyun.FenShi Rows = 1;
int FenShiLishi::rows_size() const {
  return rows_.size();
}
void FenShiLishi::clear_rows() {
  rows_.Clear();
}
const ::dzhyun::FenShi& FenShiLishi::rows(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.FenShiLishi.Rows)
  return rows_.Get(index);
}
::dzhyun::FenShi* FenShiLishi::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.FenShiLishi.Rows)
  return rows_.Mutable(index);
}
::dzhyun::FenShi* FenShiLishi::add_rows() {
  // @@protoc_insertion_point(field_add:dzhyun.FenShiLishi.Rows)
  return rows_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::FenShi >*
FenShiLishi::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.FenShiLishi.Rows)
  return &rows_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::FenShi >&
FenShiLishi::rows() const {
  // @@protoc_insertion_point(field_list:dzhyun.FenShiLishi.Rows)
  return rows_;
}

// optional int64 RiQi = 2;
bool FenShiLishi::has_riqi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FenShiLishi::set_has_riqi() {
  _has_bits_[0] |= 0x00000002u;
}
void FenShiLishi::clear_has_riqi() {
  _has_bits_[0] &= ~0x00000002u;
}
void FenShiLishi::clear_riqi() {
  riqi_ = GOOGLE_LONGLONG(0);
  clear_has_riqi();
}
 ::google::protobuf::int64 FenShiLishi::riqi() const {
  // @@protoc_insertion_point(field_get:dzhyun.FenShiLishi.RiQi)
  return riqi_;
}
 void FenShiLishi::set_riqi(::google::protobuf::int64 value) {
  set_has_riqi();
  riqi_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.FenShiLishi.RiQi)
}

// optional int64 ZuoShou = 3;
bool FenShiLishi::has_zuoshou() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FenShiLishi::set_has_zuoshou() {
  _has_bits_[0] |= 0x00000004u;
}
void FenShiLishi::clear_has_zuoshou() {
  _has_bits_[0] &= ~0x00000004u;
}
void FenShiLishi::clear_zuoshou() {
  zuoshou_ = GOOGLE_LONGLONG(0);
  clear_has_zuoshou();
}
 ::google::protobuf::int64 FenShiLishi::zuoshou() const {
  // @@protoc_insertion_point(field_get:dzhyun.FenShiLishi.ZuoShou)
  return zuoshou_;
}
 void FenShiLishi::set_zuoshou(::google::protobuf::int64 value) {
  set_has_zuoshou();
  zuoshou_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.FenShiLishi.ZuoShou)
}

// repeated .dzhyun.JiaoYiShiJianDuanJieGou JiaoYiShiJianDuan = 4;
int FenShiLishi::jiaoyishijianduan_size() const {
  return jiaoyishijianduan_.size();
}
void FenShiLishi::clear_jiaoyishijianduan() {
  jiaoyishijianduan_.Clear();
}
const ::dzhyun::JiaoYiShiJianDuanJieGou& FenShiLishi::jiaoyishijianduan(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.FenShiLishi.JiaoYiShiJianDuan)
  return jiaoyishijianduan_.Get(index);
}
::dzhyun::JiaoYiShiJianDuanJieGou* FenShiLishi::mutable_jiaoyishijianduan(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.FenShiLishi.JiaoYiShiJianDuan)
  return jiaoyishijianduan_.Mutable(index);
}
::dzhyun::JiaoYiShiJianDuanJieGou* FenShiLishi::add_jiaoyishijianduan() {
  // @@protoc_insertion_point(field_add:dzhyun.FenShiLishi.JiaoYiShiJianDuan)
  return jiaoyishijianduan_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::JiaoYiShiJianDuanJieGou >*
FenShiLishi::mutable_jiaoyishijianduan() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.FenShiLishi.JiaoYiShiJianDuan)
  return &jiaoyishijianduan_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::JiaoYiShiJianDuanJieGou >&
FenShiLishi::jiaoyishijianduan() const {
  // @@protoc_insertion_point(field_list:dzhyun.FenShiLishi.JiaoYiShiJianDuan)
  return jiaoyishijianduan_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DynaAlib::kShiJianFieldNumber;
const int DynaAlib::kIDFieldNumber;
const int DynaAlib::kObjsFieldNumber;
const int DynaAlib::kDAObjsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DynaAlib::DynaAlib()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.DynaAlib)
}

void DynaAlib::InitAsDefaultInstance() {
}

DynaAlib::DynaAlib(const DynaAlib& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.DynaAlib)
}

void DynaAlib::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  shijian_ = GOOGLE_LONGLONG(0);
  id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DynaAlib::~DynaAlib() {
  // @@protoc_insertion_point(destructor:dzhyun.DynaAlib)
  SharedDtor();
}

void DynaAlib::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DynaAlib::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DynaAlib::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DynaAlib_descriptor_;
}

const DynaAlib& DynaAlib::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2egupiaolianxu_2eproto();
  return *default_instance_;
}

DynaAlib* DynaAlib::default_instance_ = NULL;

DynaAlib* DynaAlib::New(::google::protobuf::Arena* arena) const {
  DynaAlib* n = new DynaAlib;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DynaAlib::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.DynaAlib)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DynaAlib, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DynaAlib*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(shijian_, id_);

#undef ZR_HELPER_
#undef ZR_

  objs_.Clear();
  daobjs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DynaAlib::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.DynaAlib)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 ShiJian = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shijian_)));
          set_has_shijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ID;
        break;
      }

      // required int64 ID = 2;
      case 2: {
        if (tag == 16) {
         parse_ID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Objs;
        break;
      }

      // repeated string Objs = 3;
      case 3: {
        if (tag == 26) {
         parse_Objs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_objs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->objs(this->objs_size() - 1).data(),
            this->objs(this->objs_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DynaAlib.Objs");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Objs;
        if (input->ExpectTag(34)) goto parse_DAObjs;
        break;
      }

      // repeated .dzhyun.DynaAlibObj DAObjs = 4;
      case 4: {
        if (tag == 34) {
         parse_DAObjs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_DAObjs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_daobjs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_DAObjs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.DynaAlib)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.DynaAlib)
  return false;
#undef DO_
}

void DynaAlib::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.DynaAlib)
  // required int64 ShiJian = 1;
  if (has_shijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shijian(), output);
  }

  // required int64 ID = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // repeated string Objs = 3;
  for (int i = 0; i < this->objs_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->objs(i).data(), this->objs(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DynaAlib.Objs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->objs(i), output);
  }

  // repeated .dzhyun.DynaAlibObj DAObjs = 4;
  for (unsigned int i = 0, n = this->daobjs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->daobjs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.DynaAlib)
}

::google::protobuf::uint8* DynaAlib::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.DynaAlib)
  // required int64 ShiJian = 1;
  if (has_shijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shijian(), target);
  }

  // required int64 ID = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  // repeated string Objs = 3;
  for (int i = 0; i < this->objs_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->objs(i).data(), this->objs(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DynaAlib.Objs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->objs(i), target);
  }

  // repeated .dzhyun.DynaAlibObj DAObjs = 4;
  for (unsigned int i = 0, n = this->daobjs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->daobjs(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.DynaAlib)
  return target;
}

int DynaAlib::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:dzhyun.DynaAlib)
  int total_size = 0;

  if (has_shijian()) {
    // required int64 ShiJian = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shijian());
  }

  if (has_id()) {
    // required int64 ID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  return total_size;
}
int DynaAlib::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.DynaAlib)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 ShiJian = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shijian());

    // required int64 ID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string Objs = 3;
  total_size += 1 * this->objs_size();
  for (int i = 0; i < this->objs_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->objs(i));
  }

  // repeated .dzhyun.DynaAlibObj DAObjs = 4;
  total_size += 1 * this->daobjs_size();
  for (int i = 0; i < this->daobjs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->daobjs(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DynaAlib::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.DynaAlib)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DynaAlib* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DynaAlib>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.DynaAlib)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.DynaAlib)
    MergeFrom(*source);
  }
}

void DynaAlib::MergeFrom(const DynaAlib& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.DynaAlib)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  objs_.MergeFrom(from.objs_);
  daobjs_.MergeFrom(from.daobjs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shijian()) {
      set_shijian(from.shijian());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DynaAlib::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.DynaAlib)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynaAlib::CopyFrom(const DynaAlib& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.DynaAlib)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynaAlib::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DynaAlib::Swap(DynaAlib* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DynaAlib::InternalSwap(DynaAlib* other) {
  std::swap(shijian_, other->shijian_);
  std::swap(id_, other->id_);
  objs_.UnsafeArenaSwap(&other->objs_);
  daobjs_.UnsafeArenaSwap(&other->daobjs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DynaAlib::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DynaAlib_descriptor_;
  metadata.reflection = DynaAlib_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DynaAlib

// required int64 ShiJian = 1;
bool DynaAlib::has_shijian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DynaAlib::set_has_shijian() {
  _has_bits_[0] |= 0x00000001u;
}
void DynaAlib::clear_has_shijian() {
  _has_bits_[0] &= ~0x00000001u;
}
void DynaAlib::clear_shijian() {
  shijian_ = GOOGLE_LONGLONG(0);
  clear_has_shijian();
}
 ::google::protobuf::int64 DynaAlib::shijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.DynaAlib.ShiJian)
  return shijian_;
}
 void DynaAlib::set_shijian(::google::protobuf::int64 value) {
  set_has_shijian();
  shijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DynaAlib.ShiJian)
}

// required int64 ID = 2;
bool DynaAlib::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DynaAlib::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void DynaAlib::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void DynaAlib::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::int64 DynaAlib::id() const {
  // @@protoc_insertion_point(field_get:dzhyun.DynaAlib.ID)
  return id_;
}
 void DynaAlib::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DynaAlib.ID)
}

// repeated string Objs = 3;
int DynaAlib::objs_size() const {
  return objs_.size();
}
void DynaAlib::clear_objs() {
  objs_.Clear();
}
 const ::std::string& DynaAlib::objs(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.DynaAlib.Objs)
  return objs_.Get(index);
}
 ::std::string* DynaAlib::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.DynaAlib.Objs)
  return objs_.Mutable(index);
}
 void DynaAlib::set_objs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dzhyun.DynaAlib.Objs)
  objs_.Mutable(index)->assign(value);
}
 void DynaAlib::set_objs(int index, const char* value) {
  objs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dzhyun.DynaAlib.Objs)
}
 void DynaAlib::set_objs(int index, const char* value, size_t size) {
  objs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DynaAlib.Objs)
}
 ::std::string* DynaAlib::add_objs() {
  // @@protoc_insertion_point(field_add_mutable:dzhyun.DynaAlib.Objs)
  return objs_.Add();
}
 void DynaAlib::add_objs(const ::std::string& value) {
  objs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dzhyun.DynaAlib.Objs)
}
 void DynaAlib::add_objs(const char* value) {
  objs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dzhyun.DynaAlib.Objs)
}
 void DynaAlib::add_objs(const char* value, size_t size) {
  objs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dzhyun.DynaAlib.Objs)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
DynaAlib::objs() const {
  // @@protoc_insertion_point(field_list:dzhyun.DynaAlib.Objs)
  return objs_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
DynaAlib::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.DynaAlib.Objs)
  return &objs_;
}

// repeated .dzhyun.DynaAlibObj DAObjs = 4;
int DynaAlib::daobjs_size() const {
  return daobjs_.size();
}
void DynaAlib::clear_daobjs() {
  daobjs_.Clear();
}
const ::dzhyun::DynaAlibObj& DynaAlib::daobjs(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.DynaAlib.DAObjs)
  return daobjs_.Get(index);
}
::dzhyun::DynaAlibObj* DynaAlib::mutable_daobjs(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.DynaAlib.DAObjs)
  return daobjs_.Mutable(index);
}
::dzhyun::DynaAlibObj* DynaAlib::add_daobjs() {
  // @@protoc_insertion_point(field_add:dzhyun.DynaAlib.DAObjs)
  return daobjs_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::DynaAlibObj >*
DynaAlib::mutable_daobjs() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.DynaAlib.DAObjs)
  return &daobjs_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::DynaAlibObj >&
DynaAlib::daobjs() const {
  // @@protoc_insertion_point(field_list:dzhyun.DynaAlib.DAObjs)
  return daobjs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DynaAlibObj::kObjsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DynaAlibObj::DynaAlibObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.DynaAlibObj)
}

void DynaAlibObj::InitAsDefaultInstance() {
}

DynaAlibObj::DynaAlibObj(const DynaAlibObj& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.DynaAlibObj)
}

void DynaAlibObj::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DynaAlibObj::~DynaAlibObj() {
  // @@protoc_insertion_point(destructor:dzhyun.DynaAlibObj)
  SharedDtor();
}

void DynaAlibObj::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DynaAlibObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DynaAlibObj::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DynaAlibObj_descriptor_;
}

const DynaAlibObj& DynaAlibObj::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2egupiaolianxu_2eproto();
  return *default_instance_;
}

DynaAlibObj* DynaAlibObj::default_instance_ = NULL;

DynaAlibObj* DynaAlibObj::New(::google::protobuf::Arena* arena) const {
  DynaAlibObj* n = new DynaAlibObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DynaAlibObj::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.DynaAlibObj)
  objs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DynaAlibObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.DynaAlibObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string Objs = 1;
      case 1: {
        if (tag == 10) {
         parse_Objs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_objs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->objs(this->objs_size() - 1).data(),
            this->objs(this->objs_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DynaAlibObj.Objs");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Objs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.DynaAlibObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.DynaAlibObj)
  return false;
#undef DO_
}

void DynaAlibObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.DynaAlibObj)
  // repeated string Objs = 1;
  for (int i = 0; i < this->objs_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->objs(i).data(), this->objs(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DynaAlibObj.Objs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->objs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.DynaAlibObj)
}

::google::protobuf::uint8* DynaAlibObj::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.DynaAlibObj)
  // repeated string Objs = 1;
  for (int i = 0; i < this->objs_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->objs(i).data(), this->objs(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DynaAlibObj.Objs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->objs(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.DynaAlibObj)
  return target;
}

int DynaAlibObj::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.DynaAlibObj)
  int total_size = 0;

  // repeated string Objs = 1;
  total_size += 1 * this->objs_size();
  for (int i = 0; i < this->objs_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->objs(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DynaAlibObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.DynaAlibObj)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DynaAlibObj* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DynaAlibObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.DynaAlibObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.DynaAlibObj)
    MergeFrom(*source);
  }
}

void DynaAlibObj::MergeFrom(const DynaAlibObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.DynaAlibObj)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  objs_.MergeFrom(from.objs_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DynaAlibObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.DynaAlibObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynaAlibObj::CopyFrom(const DynaAlibObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.DynaAlibObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynaAlibObj::IsInitialized() const {

  return true;
}

void DynaAlibObj::Swap(DynaAlibObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DynaAlibObj::InternalSwap(DynaAlibObj* other) {
  objs_.UnsafeArenaSwap(&other->objs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DynaAlibObj::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DynaAlibObj_descriptor_;
  metadata.reflection = DynaAlibObj_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DynaAlibObj

// repeated string Objs = 1;
int DynaAlibObj::objs_size() const {
  return objs_.size();
}
void DynaAlibObj::clear_objs() {
  objs_.Clear();
}
 const ::std::string& DynaAlibObj::objs(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.DynaAlibObj.Objs)
  return objs_.Get(index);
}
 ::std::string* DynaAlibObj::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.DynaAlibObj.Objs)
  return objs_.Mutable(index);
}
 void DynaAlibObj::set_objs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dzhyun.DynaAlibObj.Objs)
  objs_.Mutable(index)->assign(value);
}
 void DynaAlibObj::set_objs(int index, const char* value) {
  objs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dzhyun.DynaAlibObj.Objs)
}
 void DynaAlibObj::set_objs(int index, const char* value, size_t size) {
  objs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DynaAlibObj.Objs)
}
 ::std::string* DynaAlibObj::add_objs() {
  // @@protoc_insertion_point(field_add_mutable:dzhyun.DynaAlibObj.Objs)
  return objs_.Add();
}
 void DynaAlibObj::add_objs(const ::std::string& value) {
  objs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dzhyun.DynaAlibObj.Objs)
}
 void DynaAlibObj::add_objs(const char* value) {
  objs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dzhyun.DynaAlibObj.Objs)
}
 void DynaAlibObj::add_objs(const char* value, size_t size) {
  objs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dzhyun.DynaAlibObj.Objs)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
DynaAlibObj::objs() const {
  // @@protoc_insertion_point(field_list:dzhyun.DynaAlibObj.Objs)
  return objs_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
DynaAlibObj::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.DynaAlibObj.Objs)
  return &objs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BackUpState::kMarketFieldNumber;
const int BackUpState::kBackUpTimeFieldNumber;
const int BackUpState::kBackUpCloseStatusFieldNumber;
const int BackUpState::kCloseTimeFieldNumber;
const int BackUpState::kCloseStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackUpState::BackUpState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.BackUpState)
}

void BackUpState::InitAsDefaultInstance() {
}

BackUpState::BackUpState(const BackUpState& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.BackUpState)
}

void BackUpState::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  market_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  backuptime_ = GOOGLE_LONGLONG(0);
  backupclosestatus_ = GOOGLE_LONGLONG(0);
  closetime_ = GOOGLE_LONGLONG(0);
  closestatus_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BackUpState::~BackUpState() {
  // @@protoc_insertion_point(destructor:dzhyun.BackUpState)
  SharedDtor();
}

void BackUpState::SharedDtor() {
  market_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BackUpState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BackUpState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BackUpState_descriptor_;
}

const BackUpState& BackUpState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2egupiaolianxu_2eproto();
  return *default_instance_;
}

BackUpState* BackUpState::default_instance_ = NULL;

BackUpState* BackUpState::New(::google::protobuf::Arena* arena) const {
  BackUpState* n = new BackUpState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BackUpState::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.BackUpState)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BackUpState, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BackUpState*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(backuptime_, closestatus_);
    if (has_market()) {
      market_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BackUpState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.BackUpState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Market = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_market()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->market().data(), this->market().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.BackUpState.Market");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BackUpTime;
        break;
      }

      // optional int64 BackUpTime = 2;
      case 2: {
        if (tag == 16) {
         parse_BackUpTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &backuptime_)));
          set_has_backuptime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BackUpCloseStatus;
        break;
      }

      // optional int64 BackUpCloseStatus = 3;
      case 3: {
        if (tag == 24) {
         parse_BackUpCloseStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &backupclosestatus_)));
          set_has_backupclosestatus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_CloseTime;
        break;
      }

      // optional int64 CloseTime = 4;
      case 4: {
        if (tag == 32) {
         parse_CloseTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &closetime_)));
          set_has_closetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_CloseStatus;
        break;
      }

      // optional int64 CloseStatus = 5;
      case 5: {
        if (tag == 40) {
         parse_CloseStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &closestatus_)));
          set_has_closestatus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.BackUpState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.BackUpState)
  return false;
#undef DO_
}

void BackUpState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.BackUpState)
  // required string Market = 1;
  if (has_market()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->market().data(), this->market().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.BackUpState.Market");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->market(), output);
  }

  // optional int64 BackUpTime = 2;
  if (has_backuptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->backuptime(), output);
  }

  // optional int64 BackUpCloseStatus = 3;
  if (has_backupclosestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->backupclosestatus(), output);
  }

  // optional int64 CloseTime = 4;
  if (has_closetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->closetime(), output);
  }

  // optional int64 CloseStatus = 5;
  if (has_closestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->closestatus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.BackUpState)
}

::google::protobuf::uint8* BackUpState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.BackUpState)
  // required string Market = 1;
  if (has_market()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->market().data(), this->market().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.BackUpState.Market");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->market(), target);
  }

  // optional int64 BackUpTime = 2;
  if (has_backuptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->backuptime(), target);
  }

  // optional int64 BackUpCloseStatus = 3;
  if (has_backupclosestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->backupclosestatus(), target);
  }

  // optional int64 CloseTime = 4;
  if (has_closetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->closetime(), target);
  }

  // optional int64 CloseStatus = 5;
  if (has_closestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->closestatus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.BackUpState)
  return target;
}

int BackUpState::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.BackUpState)
  int total_size = 0;

  // required string Market = 1;
  if (has_market()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->market());
  }
  if (_has_bits_[1 / 32] & 30u) {
    // optional int64 BackUpTime = 2;
    if (has_backuptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->backuptime());
    }

    // optional int64 BackUpCloseStatus = 3;
    if (has_backupclosestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->backupclosestatus());
    }

    // optional int64 CloseTime = 4;
    if (has_closetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->closetime());
    }

    // optional int64 CloseStatus = 5;
    if (has_closestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->closestatus());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BackUpState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.BackUpState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BackUpState* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BackUpState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.BackUpState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.BackUpState)
    MergeFrom(*source);
  }
}

void BackUpState::MergeFrom(const BackUpState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.BackUpState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_market()) {
      set_has_market();
      market_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_);
    }
    if (from.has_backuptime()) {
      set_backuptime(from.backuptime());
    }
    if (from.has_backupclosestatus()) {
      set_backupclosestatus(from.backupclosestatus());
    }
    if (from.has_closetime()) {
      set_closetime(from.closetime());
    }
    if (from.has_closestatus()) {
      set_closestatus(from.closestatus());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BackUpState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.BackUpState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackUpState::CopyFrom(const BackUpState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.BackUpState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackUpState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BackUpState::Swap(BackUpState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BackUpState::InternalSwap(BackUpState* other) {
  market_.Swap(&other->market_);
  std::swap(backuptime_, other->backuptime_);
  std::swap(backupclosestatus_, other->backupclosestatus_);
  std::swap(closetime_, other->closetime_);
  std::swap(closestatus_, other->closestatus_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BackUpState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BackUpState_descriptor_;
  metadata.reflection = BackUpState_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BackUpState

// required string Market = 1;
bool BackUpState::has_market() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BackUpState::set_has_market() {
  _has_bits_[0] |= 0x00000001u;
}
void BackUpState::clear_has_market() {
  _has_bits_[0] &= ~0x00000001u;
}
void BackUpState::clear_market() {
  market_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_market();
}
 const ::std::string& BackUpState::market() const {
  // @@protoc_insertion_point(field_get:dzhyun.BackUpState.Market)
  return market_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BackUpState::set_market(const ::std::string& value) {
  set_has_market();
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.BackUpState.Market)
}
 void BackUpState::set_market(const char* value) {
  set_has_market();
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.BackUpState.Market)
}
 void BackUpState::set_market(const char* value, size_t size) {
  set_has_market();
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.BackUpState.Market)
}
 ::std::string* BackUpState::mutable_market() {
  set_has_market();
  // @@protoc_insertion_point(field_mutable:dzhyun.BackUpState.Market)
  return market_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BackUpState::release_market() {
  // @@protoc_insertion_point(field_release:dzhyun.BackUpState.Market)
  clear_has_market();
  return market_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BackUpState::set_allocated_market(::std::string* market) {
  if (market != NULL) {
    set_has_market();
  } else {
    clear_has_market();
  }
  market_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), market);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.BackUpState.Market)
}

// optional int64 BackUpTime = 2;
bool BackUpState::has_backuptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BackUpState::set_has_backuptime() {
  _has_bits_[0] |= 0x00000002u;
}
void BackUpState::clear_has_backuptime() {
  _has_bits_[0] &= ~0x00000002u;
}
void BackUpState::clear_backuptime() {
  backuptime_ = GOOGLE_LONGLONG(0);
  clear_has_backuptime();
}
 ::google::protobuf::int64 BackUpState::backuptime() const {
  // @@protoc_insertion_point(field_get:dzhyun.BackUpState.BackUpTime)
  return backuptime_;
}
 void BackUpState::set_backuptime(::google::protobuf::int64 value) {
  set_has_backuptime();
  backuptime_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.BackUpState.BackUpTime)
}

// optional int64 BackUpCloseStatus = 3;
bool BackUpState::has_backupclosestatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BackUpState::set_has_backupclosestatus() {
  _has_bits_[0] |= 0x00000004u;
}
void BackUpState::clear_has_backupclosestatus() {
  _has_bits_[0] &= ~0x00000004u;
}
void BackUpState::clear_backupclosestatus() {
  backupclosestatus_ = GOOGLE_LONGLONG(0);
  clear_has_backupclosestatus();
}
 ::google::protobuf::int64 BackUpState::backupclosestatus() const {
  // @@protoc_insertion_point(field_get:dzhyun.BackUpState.BackUpCloseStatus)
  return backupclosestatus_;
}
 void BackUpState::set_backupclosestatus(::google::protobuf::int64 value) {
  set_has_backupclosestatus();
  backupclosestatus_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.BackUpState.BackUpCloseStatus)
}

// optional int64 CloseTime = 4;
bool BackUpState::has_closetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BackUpState::set_has_closetime() {
  _has_bits_[0] |= 0x00000008u;
}
void BackUpState::clear_has_closetime() {
  _has_bits_[0] &= ~0x00000008u;
}
void BackUpState::clear_closetime() {
  closetime_ = GOOGLE_LONGLONG(0);
  clear_has_closetime();
}
 ::google::protobuf::int64 BackUpState::closetime() const {
  // @@protoc_insertion_point(field_get:dzhyun.BackUpState.CloseTime)
  return closetime_;
}
 void BackUpState::set_closetime(::google::protobuf::int64 value) {
  set_has_closetime();
  closetime_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.BackUpState.CloseTime)
}

// optional int64 CloseStatus = 5;
bool BackUpState::has_closestatus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BackUpState::set_has_closestatus() {
  _has_bits_[0] |= 0x00000010u;
}
void BackUpState::clear_has_closestatus() {
  _has_bits_[0] &= ~0x00000010u;
}
void BackUpState::clear_closestatus() {
  closestatus_ = GOOGLE_LONGLONG(0);
  clear_has_closestatus();
}
 ::google::protobuf::int64 BackUpState::closestatus() const {
  // @@protoc_insertion_point(field_get:dzhyun.BackUpState.CloseStatus)
  return closestatus_;
}
 void BackUpState::set_closestatus(::google::protobuf::int64 value) {
  set_has_closestatus();
  closestatus_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.BackUpState.CloseStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LingxianDuokongZhibiao::kShiJianFieldNumber;
const int LingxianDuokongZhibiao::kLingXianZhiBiaoFieldNumber;
const int LingxianDuokongZhibiao::kDuoKongXianFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LingxianDuokongZhibiao::LingxianDuokongZhibiao()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.LingxianDuokongZhibiao)
}

void LingxianDuokongZhibiao::InitAsDefaultInstance() {
}

LingxianDuokongZhibiao::LingxianDuokongZhibiao(const LingxianDuokongZhibiao& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.LingxianDuokongZhibiao)
}

void LingxianDuokongZhibiao::SharedCtor() {
  _cached_size_ = 0;
  shijian_ = GOOGLE_LONGLONG(0);
  lingxianzhibiao_ = GOOGLE_LONGLONG(0);
  duokongxian_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LingxianDuokongZhibiao::~LingxianDuokongZhibiao() {
  // @@protoc_insertion_point(destructor:dzhyun.LingxianDuokongZhibiao)
  SharedDtor();
}

void LingxianDuokongZhibiao::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LingxianDuokongZhibiao::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LingxianDuokongZhibiao::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LingxianDuokongZhibiao_descriptor_;
}

const LingxianDuokongZhibiao& LingxianDuokongZhibiao::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2egupiaolianxu_2eproto();
  return *default_instance_;
}

LingxianDuokongZhibiao* LingxianDuokongZhibiao::default_instance_ = NULL;

LingxianDuokongZhibiao* LingxianDuokongZhibiao::New(::google::protobuf::Arena* arena) const {
  LingxianDuokongZhibiao* n = new LingxianDuokongZhibiao;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LingxianDuokongZhibiao::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.LingxianDuokongZhibiao)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LingxianDuokongZhibiao, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LingxianDuokongZhibiao*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(shijian_, duokongxian_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LingxianDuokongZhibiao::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.LingxianDuokongZhibiao)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 ShiJian = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shijian_)));
          set_has_shijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_LingXianZhiBiao;
        break;
      }

      // optional int64 LingXianZhiBiao = 2;
      case 2: {
        if (tag == 16) {
         parse_LingXianZhiBiao:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lingxianzhibiao_)));
          set_has_lingxianzhibiao();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_DuoKongXian;
        break;
      }

      // optional int64 DuoKongXian = 3;
      case 3: {
        if (tag == 24) {
         parse_DuoKongXian:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &duokongxian_)));
          set_has_duokongxian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.LingxianDuokongZhibiao)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.LingxianDuokongZhibiao)
  return false;
#undef DO_
}

void LingxianDuokongZhibiao::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.LingxianDuokongZhibiao)
  // required int64 ShiJian = 1;
  if (has_shijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shijian(), output);
  }

  // optional int64 LingXianZhiBiao = 2;
  if (has_lingxianzhibiao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->lingxianzhibiao(), output);
  }

  // optional int64 DuoKongXian = 3;
  if (has_duokongxian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->duokongxian(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.LingxianDuokongZhibiao)
}

::google::protobuf::uint8* LingxianDuokongZhibiao::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.LingxianDuokongZhibiao)
  // required int64 ShiJian = 1;
  if (has_shijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shijian(), target);
  }

  // optional int64 LingXianZhiBiao = 2;
  if (has_lingxianzhibiao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->lingxianzhibiao(), target);
  }

  // optional int64 DuoKongXian = 3;
  if (has_duokongxian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->duokongxian(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.LingxianDuokongZhibiao)
  return target;
}

int LingxianDuokongZhibiao::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.LingxianDuokongZhibiao)
  int total_size = 0;

  // required int64 ShiJian = 1;
  if (has_shijian()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shijian());
  }
  if (_has_bits_[1 / 32] & 6u) {
    // optional int64 LingXianZhiBiao = 2;
    if (has_lingxianzhibiao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lingxianzhibiao());
    }

    // optional int64 DuoKongXian = 3;
    if (has_duokongxian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->duokongxian());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LingxianDuokongZhibiao::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.LingxianDuokongZhibiao)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LingxianDuokongZhibiao* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LingxianDuokongZhibiao>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.LingxianDuokongZhibiao)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.LingxianDuokongZhibiao)
    MergeFrom(*source);
  }
}

void LingxianDuokongZhibiao::MergeFrom(const LingxianDuokongZhibiao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.LingxianDuokongZhibiao)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shijian()) {
      set_shijian(from.shijian());
    }
    if (from.has_lingxianzhibiao()) {
      set_lingxianzhibiao(from.lingxianzhibiao());
    }
    if (from.has_duokongxian()) {
      set_duokongxian(from.duokongxian());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LingxianDuokongZhibiao::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.LingxianDuokongZhibiao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LingxianDuokongZhibiao::CopyFrom(const LingxianDuokongZhibiao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.LingxianDuokongZhibiao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LingxianDuokongZhibiao::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LingxianDuokongZhibiao::Swap(LingxianDuokongZhibiao* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LingxianDuokongZhibiao::InternalSwap(LingxianDuokongZhibiao* other) {
  std::swap(shijian_, other->shijian_);
  std::swap(lingxianzhibiao_, other->lingxianzhibiao_);
  std::swap(duokongxian_, other->duokongxian_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LingxianDuokongZhibiao::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LingxianDuokongZhibiao_descriptor_;
  metadata.reflection = LingxianDuokongZhibiao_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LingxianDuokongZhibiao

// required int64 ShiJian = 1;
bool LingxianDuokongZhibiao::has_shijian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LingxianDuokongZhibiao::set_has_shijian() {
  _has_bits_[0] |= 0x00000001u;
}
void LingxianDuokongZhibiao::clear_has_shijian() {
  _has_bits_[0] &= ~0x00000001u;
}
void LingxianDuokongZhibiao::clear_shijian() {
  shijian_ = GOOGLE_LONGLONG(0);
  clear_has_shijian();
}
 ::google::protobuf::int64 LingxianDuokongZhibiao::shijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.LingxianDuokongZhibiao.ShiJian)
  return shijian_;
}
 void LingxianDuokongZhibiao::set_shijian(::google::protobuf::int64 value) {
  set_has_shijian();
  shijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.LingxianDuokongZhibiao.ShiJian)
}

// optional int64 LingXianZhiBiao = 2;
bool LingxianDuokongZhibiao::has_lingxianzhibiao() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LingxianDuokongZhibiao::set_has_lingxianzhibiao() {
  _has_bits_[0] |= 0x00000002u;
}
void LingxianDuokongZhibiao::clear_has_lingxianzhibiao() {
  _has_bits_[0] &= ~0x00000002u;
}
void LingxianDuokongZhibiao::clear_lingxianzhibiao() {
  lingxianzhibiao_ = GOOGLE_LONGLONG(0);
  clear_has_lingxianzhibiao();
}
 ::google::protobuf::int64 LingxianDuokongZhibiao::lingxianzhibiao() const {
  // @@protoc_insertion_point(field_get:dzhyun.LingxianDuokongZhibiao.LingXianZhiBiao)
  return lingxianzhibiao_;
}
 void LingxianDuokongZhibiao::set_lingxianzhibiao(::google::protobuf::int64 value) {
  set_has_lingxianzhibiao();
  lingxianzhibiao_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.LingxianDuokongZhibiao.LingXianZhiBiao)
}

// optional int64 DuoKongXian = 3;
bool LingxianDuokongZhibiao::has_duokongxian() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LingxianDuokongZhibiao::set_has_duokongxian() {
  _has_bits_[0] |= 0x00000004u;
}
void LingxianDuokongZhibiao::clear_has_duokongxian() {
  _has_bits_[0] &= ~0x00000004u;
}
void LingxianDuokongZhibiao::clear_duokongxian() {
  duokongxian_ = GOOGLE_LONGLONG(0);
  clear_has_duokongxian();
}
 ::google::protobuf::int64 LingxianDuokongZhibiao::duokongxian() const {
  // @@protoc_insertion_point(field_get:dzhyun.LingxianDuokongZhibiao.DuoKongXian)
  return duokongxian_;
}
 void LingxianDuokongZhibiao::set_duokongxian(::google::protobuf::int64 value) {
  set_has_duokongxian();
  duokongxian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.LingxianDuokongZhibiao.DuoKongXian)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LingxianDuokongZhibiaoStatus::kJiaoYiRiQiFieldNumber;
const int LingxianDuokongZhibiaoStatus::kIndexStatucFieldNumber;
const int LingxianDuokongZhibiaoStatus::kDataStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LingxianDuokongZhibiaoStatus::LingxianDuokongZhibiaoStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.LingxianDuokongZhibiaoStatus)
}

void LingxianDuokongZhibiaoStatus::InitAsDefaultInstance() {
  datastatus_ = const_cast< ::dzhyun::LingxianDuokongZhibiao*>(&::dzhyun::LingxianDuokongZhibiao::default_instance());
}

LingxianDuokongZhibiaoStatus::LingxianDuokongZhibiaoStatus(const LingxianDuokongZhibiaoStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.LingxianDuokongZhibiaoStatus)
}

void LingxianDuokongZhibiaoStatus::SharedCtor() {
  _cached_size_ = 0;
  jiaoyiriqi_ = GOOGLE_LONGLONG(0);
  indexstatuc_ = GOOGLE_LONGLONG(0);
  datastatus_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LingxianDuokongZhibiaoStatus::~LingxianDuokongZhibiaoStatus() {
  // @@protoc_insertion_point(destructor:dzhyun.LingxianDuokongZhibiaoStatus)
  SharedDtor();
}

void LingxianDuokongZhibiaoStatus::SharedDtor() {
  if (this != default_instance_) {
    delete datastatus_;
  }
}

void LingxianDuokongZhibiaoStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LingxianDuokongZhibiaoStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LingxianDuokongZhibiaoStatus_descriptor_;
}

const LingxianDuokongZhibiaoStatus& LingxianDuokongZhibiaoStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2egupiaolianxu_2eproto();
  return *default_instance_;
}

LingxianDuokongZhibiaoStatus* LingxianDuokongZhibiaoStatus::default_instance_ = NULL;

LingxianDuokongZhibiaoStatus* LingxianDuokongZhibiaoStatus::New(::google::protobuf::Arena* arena) const {
  LingxianDuokongZhibiaoStatus* n = new LingxianDuokongZhibiaoStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LingxianDuokongZhibiaoStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.LingxianDuokongZhibiaoStatus)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LingxianDuokongZhibiaoStatus, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LingxianDuokongZhibiaoStatus*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(jiaoyiriqi_, indexstatuc_);
    if (has_datastatus()) {
      if (datastatus_ != NULL) datastatus_->::dzhyun::LingxianDuokongZhibiao::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LingxianDuokongZhibiaoStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.LingxianDuokongZhibiaoStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 JiaoYiRiQi = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jiaoyiriqi_)));
          set_has_jiaoyiriqi();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_IndexStatuc;
        break;
      }

      // optional int64 IndexStatuc = 2;
      case 2: {
        if (tag == 16) {
         parse_IndexStatuc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &indexstatuc_)));
          set_has_indexstatuc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_DataStatus;
        break;
      }

      // optional .dzhyun.LingxianDuokongZhibiao DataStatus = 3;
      case 3: {
        if (tag == 26) {
         parse_DataStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_datastatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.LingxianDuokongZhibiaoStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.LingxianDuokongZhibiaoStatus)
  return false;
#undef DO_
}

void LingxianDuokongZhibiaoStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.LingxianDuokongZhibiaoStatus)
  // required int64 JiaoYiRiQi = 1;
  if (has_jiaoyiriqi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->jiaoyiriqi(), output);
  }

  // optional int64 IndexStatuc = 2;
  if (has_indexstatuc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->indexstatuc(), output);
  }

  // optional .dzhyun.LingxianDuokongZhibiao DataStatus = 3;
  if (has_datastatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->datastatus_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.LingxianDuokongZhibiaoStatus)
}

::google::protobuf::uint8* LingxianDuokongZhibiaoStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.LingxianDuokongZhibiaoStatus)
  // required int64 JiaoYiRiQi = 1;
  if (has_jiaoyiriqi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->jiaoyiriqi(), target);
  }

  // optional int64 IndexStatuc = 2;
  if (has_indexstatuc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->indexstatuc(), target);
  }

  // optional .dzhyun.LingxianDuokongZhibiao DataStatus = 3;
  if (has_datastatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->datastatus_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.LingxianDuokongZhibiaoStatus)
  return target;
}

int LingxianDuokongZhibiaoStatus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.LingxianDuokongZhibiaoStatus)
  int total_size = 0;

  // required int64 JiaoYiRiQi = 1;
  if (has_jiaoyiriqi()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->jiaoyiriqi());
  }
  if (_has_bits_[1 / 32] & 6u) {
    // optional int64 IndexStatuc = 2;
    if (has_indexstatuc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->indexstatuc());
    }

    // optional .dzhyun.LingxianDuokongZhibiao DataStatus = 3;
    if (has_datastatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->datastatus_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LingxianDuokongZhibiaoStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.LingxianDuokongZhibiaoStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LingxianDuokongZhibiaoStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LingxianDuokongZhibiaoStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.LingxianDuokongZhibiaoStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.LingxianDuokongZhibiaoStatus)
    MergeFrom(*source);
  }
}

void LingxianDuokongZhibiaoStatus::MergeFrom(const LingxianDuokongZhibiaoStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.LingxianDuokongZhibiaoStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jiaoyiriqi()) {
      set_jiaoyiriqi(from.jiaoyiriqi());
    }
    if (from.has_indexstatuc()) {
      set_indexstatuc(from.indexstatuc());
    }
    if (from.has_datastatus()) {
      mutable_datastatus()->::dzhyun::LingxianDuokongZhibiao::MergeFrom(from.datastatus());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LingxianDuokongZhibiaoStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.LingxianDuokongZhibiaoStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LingxianDuokongZhibiaoStatus::CopyFrom(const LingxianDuokongZhibiaoStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.LingxianDuokongZhibiaoStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LingxianDuokongZhibiaoStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_datastatus()) {
    if (!this->datastatus_->IsInitialized()) return false;
  }
  return true;
}

void LingxianDuokongZhibiaoStatus::Swap(LingxianDuokongZhibiaoStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LingxianDuokongZhibiaoStatus::InternalSwap(LingxianDuokongZhibiaoStatus* other) {
  std::swap(jiaoyiriqi_, other->jiaoyiriqi_);
  std::swap(indexstatuc_, other->indexstatuc_);
  std::swap(datastatus_, other->datastatus_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LingxianDuokongZhibiaoStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LingxianDuokongZhibiaoStatus_descriptor_;
  metadata.reflection = LingxianDuokongZhibiaoStatus_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LingxianDuokongZhibiaoStatus

// required int64 JiaoYiRiQi = 1;
bool LingxianDuokongZhibiaoStatus::has_jiaoyiriqi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LingxianDuokongZhibiaoStatus::set_has_jiaoyiriqi() {
  _has_bits_[0] |= 0x00000001u;
}
void LingxianDuokongZhibiaoStatus::clear_has_jiaoyiriqi() {
  _has_bits_[0] &= ~0x00000001u;
}
void LingxianDuokongZhibiaoStatus::clear_jiaoyiriqi() {
  jiaoyiriqi_ = GOOGLE_LONGLONG(0);
  clear_has_jiaoyiriqi();
}
 ::google::protobuf::int64 LingxianDuokongZhibiaoStatus::jiaoyiriqi() const {
  // @@protoc_insertion_point(field_get:dzhyun.LingxianDuokongZhibiaoStatus.JiaoYiRiQi)
  return jiaoyiriqi_;
}
 void LingxianDuokongZhibiaoStatus::set_jiaoyiriqi(::google::protobuf::int64 value) {
  set_has_jiaoyiriqi();
  jiaoyiriqi_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.LingxianDuokongZhibiaoStatus.JiaoYiRiQi)
}

// optional int64 IndexStatuc = 2;
bool LingxianDuokongZhibiaoStatus::has_indexstatuc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LingxianDuokongZhibiaoStatus::set_has_indexstatuc() {
  _has_bits_[0] |= 0x00000002u;
}
void LingxianDuokongZhibiaoStatus::clear_has_indexstatuc() {
  _has_bits_[0] &= ~0x00000002u;
}
void LingxianDuokongZhibiaoStatus::clear_indexstatuc() {
  indexstatuc_ = GOOGLE_LONGLONG(0);
  clear_has_indexstatuc();
}
 ::google::protobuf::int64 LingxianDuokongZhibiaoStatus::indexstatuc() const {
  // @@protoc_insertion_point(field_get:dzhyun.LingxianDuokongZhibiaoStatus.IndexStatuc)
  return indexstatuc_;
}
 void LingxianDuokongZhibiaoStatus::set_indexstatuc(::google::protobuf::int64 value) {
  set_has_indexstatuc();
  indexstatuc_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.LingxianDuokongZhibiaoStatus.IndexStatuc)
}

// optional .dzhyun.LingxianDuokongZhibiao DataStatus = 3;
bool LingxianDuokongZhibiaoStatus::has_datastatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LingxianDuokongZhibiaoStatus::set_has_datastatus() {
  _has_bits_[0] |= 0x00000004u;
}
void LingxianDuokongZhibiaoStatus::clear_has_datastatus() {
  _has_bits_[0] &= ~0x00000004u;
}
void LingxianDuokongZhibiaoStatus::clear_datastatus() {
  if (datastatus_ != NULL) datastatus_->::dzhyun::LingxianDuokongZhibiao::Clear();
  clear_has_datastatus();
}
const ::dzhyun::LingxianDuokongZhibiao& LingxianDuokongZhibiaoStatus::datastatus() const {
  // @@protoc_insertion_point(field_get:dzhyun.LingxianDuokongZhibiaoStatus.DataStatus)
  return datastatus_ != NULL ? *datastatus_ : *default_instance_->datastatus_;
}
::dzhyun::LingxianDuokongZhibiao* LingxianDuokongZhibiaoStatus::mutable_datastatus() {
  set_has_datastatus();
  if (datastatus_ == NULL) {
    datastatus_ = new ::dzhyun::LingxianDuokongZhibiao;
  }
  // @@protoc_insertion_point(field_mutable:dzhyun.LingxianDuokongZhibiaoStatus.DataStatus)
  return datastatus_;
}
::dzhyun::LingxianDuokongZhibiao* LingxianDuokongZhibiaoStatus::release_datastatus() {
  // @@protoc_insertion_point(field_release:dzhyun.LingxianDuokongZhibiaoStatus.DataStatus)
  clear_has_datastatus();
  ::dzhyun::LingxianDuokongZhibiao* temp = datastatus_;
  datastatus_ = NULL;
  return temp;
}
void LingxianDuokongZhibiaoStatus::set_allocated_datastatus(::dzhyun::LingxianDuokongZhibiao* datastatus) {
  delete datastatus_;
  datastatus_ = datastatus;
  if (datastatus) {
    set_has_datastatus();
  } else {
    clear_has_datastatus();
  }
  // @@protoc_insertion_point(field_set_allocated:dzhyun.LingxianDuokongZhibiaoStatus.DataStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JiaoYiShiJianDuanJieGou::kKaiShiShiJianFieldNumber;
const int JiaoYiShiJianDuanJieGou::kJieShuShiJianFieldNumber;
const int JiaoYiShiJianDuanJieGou::kKaiShiRiQiFieldNumber;
const int JiaoYiShiJianDuanJieGou::kJieShuRiQiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JiaoYiShiJianDuanJieGou::JiaoYiShiJianDuanJieGou()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.JiaoYiShiJianDuanJieGou)
}

void JiaoYiShiJianDuanJieGou::InitAsDefaultInstance() {
}

JiaoYiShiJianDuanJieGou::JiaoYiShiJianDuanJieGou(const JiaoYiShiJianDuanJieGou& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.JiaoYiShiJianDuanJieGou)
}

void JiaoYiShiJianDuanJieGou::SharedCtor() {
  _cached_size_ = 0;
  kaishishijian_ = GOOGLE_LONGLONG(0);
  jieshushijian_ = GOOGLE_LONGLONG(0);
  kaishiriqi_ = GOOGLE_LONGLONG(0);
  jieshuriqi_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JiaoYiShiJianDuanJieGou::~JiaoYiShiJianDuanJieGou() {
  // @@protoc_insertion_point(destructor:dzhyun.JiaoYiShiJianDuanJieGou)
  SharedDtor();
}

void JiaoYiShiJianDuanJieGou::SharedDtor() {
  if (this != default_instance_) {
  }
}

void JiaoYiShiJianDuanJieGou::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JiaoYiShiJianDuanJieGou::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JiaoYiShiJianDuanJieGou_descriptor_;
}

const JiaoYiShiJianDuanJieGou& JiaoYiShiJianDuanJieGou::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2egupiaolianxu_2eproto();
  return *default_instance_;
}

JiaoYiShiJianDuanJieGou* JiaoYiShiJianDuanJieGou::default_instance_ = NULL;

JiaoYiShiJianDuanJieGou* JiaoYiShiJianDuanJieGou::New(::google::protobuf::Arena* arena) const {
  JiaoYiShiJianDuanJieGou* n = new JiaoYiShiJianDuanJieGou;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JiaoYiShiJianDuanJieGou::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.JiaoYiShiJianDuanJieGou)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(JiaoYiShiJianDuanJieGou, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<JiaoYiShiJianDuanJieGou*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(kaishishijian_, jieshuriqi_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool JiaoYiShiJianDuanJieGou::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.JiaoYiShiJianDuanJieGou)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 KaiShiShiJian = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &kaishishijian_)));
          set_has_kaishishijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_JieShuShiJian;
        break;
      }

      // optional int64 JieShuShiJian = 2;
      case 2: {
        if (tag == 16) {
         parse_JieShuShiJian:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jieshushijian_)));
          set_has_jieshushijian();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_KaiShiRiQi;
        break;
      }

      // optional int64 KaiShiRiQi = 3;
      case 3: {
        if (tag == 24) {
         parse_KaiShiRiQi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &kaishiriqi_)));
          set_has_kaishiriqi();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_JieShuRiQi;
        break;
      }

      // optional int64 JieShuRiQi = 4;
      case 4: {
        if (tag == 32) {
         parse_JieShuRiQi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jieshuriqi_)));
          set_has_jieshuriqi();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.JiaoYiShiJianDuanJieGou)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.JiaoYiShiJianDuanJieGou)
  return false;
#undef DO_
}

void JiaoYiShiJianDuanJieGou::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.JiaoYiShiJianDuanJieGou)
  // optional int64 KaiShiShiJian = 1;
  if (has_kaishishijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->kaishishijian(), output);
  }

  // optional int64 JieShuShiJian = 2;
  if (has_jieshushijian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->jieshushijian(), output);
  }

  // optional int64 KaiShiRiQi = 3;
  if (has_kaishiriqi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->kaishiriqi(), output);
  }

  // optional int64 JieShuRiQi = 4;
  if (has_jieshuriqi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->jieshuriqi(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.JiaoYiShiJianDuanJieGou)
}

::google::protobuf::uint8* JiaoYiShiJianDuanJieGou::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.JiaoYiShiJianDuanJieGou)
  // optional int64 KaiShiShiJian = 1;
  if (has_kaishishijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->kaishishijian(), target);
  }

  // optional int64 JieShuShiJian = 2;
  if (has_jieshushijian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->jieshushijian(), target);
  }

  // optional int64 KaiShiRiQi = 3;
  if (has_kaishiriqi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->kaishiriqi(), target);
  }

  // optional int64 JieShuRiQi = 4;
  if (has_jieshuriqi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->jieshuriqi(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.JiaoYiShiJianDuanJieGou)
  return target;
}

int JiaoYiShiJianDuanJieGou::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.JiaoYiShiJianDuanJieGou)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional int64 KaiShiShiJian = 1;
    if (has_kaishishijian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->kaishishijian());
    }

    // optional int64 JieShuShiJian = 2;
    if (has_jieshushijian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jieshushijian());
    }

    // optional int64 KaiShiRiQi = 3;
    if (has_kaishiriqi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->kaishiriqi());
    }

    // optional int64 JieShuRiQi = 4;
    if (has_jieshuriqi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jieshuriqi());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JiaoYiShiJianDuanJieGou::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.JiaoYiShiJianDuanJieGou)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const JiaoYiShiJianDuanJieGou* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const JiaoYiShiJianDuanJieGou>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.JiaoYiShiJianDuanJieGou)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.JiaoYiShiJianDuanJieGou)
    MergeFrom(*source);
  }
}

void JiaoYiShiJianDuanJieGou::MergeFrom(const JiaoYiShiJianDuanJieGou& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.JiaoYiShiJianDuanJieGou)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_kaishishijian()) {
      set_kaishishijian(from.kaishishijian());
    }
    if (from.has_jieshushijian()) {
      set_jieshushijian(from.jieshushijian());
    }
    if (from.has_kaishiriqi()) {
      set_kaishiriqi(from.kaishiriqi());
    }
    if (from.has_jieshuriqi()) {
      set_jieshuriqi(from.jieshuriqi());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void JiaoYiShiJianDuanJieGou::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.JiaoYiShiJianDuanJieGou)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JiaoYiShiJianDuanJieGou::CopyFrom(const JiaoYiShiJianDuanJieGou& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.JiaoYiShiJianDuanJieGou)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JiaoYiShiJianDuanJieGou::IsInitialized() const {

  return true;
}

void JiaoYiShiJianDuanJieGou::Swap(JiaoYiShiJianDuanJieGou* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JiaoYiShiJianDuanJieGou::InternalSwap(JiaoYiShiJianDuanJieGou* other) {
  std::swap(kaishishijian_, other->kaishishijian_);
  std::swap(jieshushijian_, other->jieshushijian_);
  std::swap(kaishiriqi_, other->kaishiriqi_);
  std::swap(jieshuriqi_, other->jieshuriqi_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JiaoYiShiJianDuanJieGou::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JiaoYiShiJianDuanJieGou_descriptor_;
  metadata.reflection = JiaoYiShiJianDuanJieGou_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JiaoYiShiJianDuanJieGou

// optional int64 KaiShiShiJian = 1;
bool JiaoYiShiJianDuanJieGou::has_kaishishijian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void JiaoYiShiJianDuanJieGou::set_has_kaishishijian() {
  _has_bits_[0] |= 0x00000001u;
}
void JiaoYiShiJianDuanJieGou::clear_has_kaishishijian() {
  _has_bits_[0] &= ~0x00000001u;
}
void JiaoYiShiJianDuanJieGou::clear_kaishishijian() {
  kaishishijian_ = GOOGLE_LONGLONG(0);
  clear_has_kaishishijian();
}
 ::google::protobuf::int64 JiaoYiShiJianDuanJieGou::kaishishijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.JiaoYiShiJianDuanJieGou.KaiShiShiJian)
  return kaishishijian_;
}
 void JiaoYiShiJianDuanJieGou::set_kaishishijian(::google::protobuf::int64 value) {
  set_has_kaishishijian();
  kaishishijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.JiaoYiShiJianDuanJieGou.KaiShiShiJian)
}

// optional int64 JieShuShiJian = 2;
bool JiaoYiShiJianDuanJieGou::has_jieshushijian() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void JiaoYiShiJianDuanJieGou::set_has_jieshushijian() {
  _has_bits_[0] |= 0x00000002u;
}
void JiaoYiShiJianDuanJieGou::clear_has_jieshushijian() {
  _has_bits_[0] &= ~0x00000002u;
}
void JiaoYiShiJianDuanJieGou::clear_jieshushijian() {
  jieshushijian_ = GOOGLE_LONGLONG(0);
  clear_has_jieshushijian();
}
 ::google::protobuf::int64 JiaoYiShiJianDuanJieGou::jieshushijian() const {
  // @@protoc_insertion_point(field_get:dzhyun.JiaoYiShiJianDuanJieGou.JieShuShiJian)
  return jieshushijian_;
}
 void JiaoYiShiJianDuanJieGou::set_jieshushijian(::google::protobuf::int64 value) {
  set_has_jieshushijian();
  jieshushijian_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.JiaoYiShiJianDuanJieGou.JieShuShiJian)
}

// optional int64 KaiShiRiQi = 3;
bool JiaoYiShiJianDuanJieGou::has_kaishiriqi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void JiaoYiShiJianDuanJieGou::set_has_kaishiriqi() {
  _has_bits_[0] |= 0x00000004u;
}
void JiaoYiShiJianDuanJieGou::clear_has_kaishiriqi() {
  _has_bits_[0] &= ~0x00000004u;
}
void JiaoYiShiJianDuanJieGou::clear_kaishiriqi() {
  kaishiriqi_ = GOOGLE_LONGLONG(0);
  clear_has_kaishiriqi();
}
 ::google::protobuf::int64 JiaoYiShiJianDuanJieGou::kaishiriqi() const {
  // @@protoc_insertion_point(field_get:dzhyun.JiaoYiShiJianDuanJieGou.KaiShiRiQi)
  return kaishiriqi_;
}
 void JiaoYiShiJianDuanJieGou::set_kaishiriqi(::google::protobuf::int64 value) {
  set_has_kaishiriqi();
  kaishiriqi_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.JiaoYiShiJianDuanJieGou.KaiShiRiQi)
}

// optional int64 JieShuRiQi = 4;
bool JiaoYiShiJianDuanJieGou::has_jieshuriqi() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void JiaoYiShiJianDuanJieGou::set_has_jieshuriqi() {
  _has_bits_[0] |= 0x00000008u;
}
void JiaoYiShiJianDuanJieGou::clear_has_jieshuriqi() {
  _has_bits_[0] &= ~0x00000008u;
}
void JiaoYiShiJianDuanJieGou::clear_jieshuriqi() {
  jieshuriqi_ = GOOGLE_LONGLONG(0);
  clear_has_jieshuriqi();
}
 ::google::protobuf::int64 JiaoYiShiJianDuanJieGou::jieshuriqi() const {
  // @@protoc_insertion_point(field_get:dzhyun.JiaoYiShiJianDuanJieGou.JieShuRiQi)
  return jieshuriqi_;
}
 void JiaoYiShiJianDuanJieGou::set_jieshuriqi(::google::protobuf::int64 value) {
  set_has_jieshuriqi();
  jieshuriqi_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.JiaoYiShiJianDuanJieGou.JieShuRiQi)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dzhyun

// @@protoc_insertion_point(global_scope)
