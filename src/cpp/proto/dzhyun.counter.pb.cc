// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dzhyun.counter.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dzhyun.counter.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dzhyun {

namespace {

const ::google::protobuf::Descriptor* RepCounterRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RepCounterRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CounterRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CounterRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryCapitalRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryCapitalRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* HoldItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HoldItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryHoldRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryHoldRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrderItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryOrderRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryOrderRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DealItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DealItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryDealRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryDealRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CounterSettleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CounterSettleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TradeRuleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TradeRuleRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dzhyun_2ecounter_2eproto() {
  protobuf_AddDesc_dzhyun_2ecounter_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dzhyun.counter.proto");
  GOOGLE_CHECK(file != NULL);
  RepCounterRsp_descriptor_ = file->message_type(0);
  static const int RepCounterRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepCounterRsp, rspno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepCounterRsp, rspdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepCounterRsp, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepCounterRsp, statusdesc_),
  };
  RepCounterRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RepCounterRsp_descriptor_,
      RepCounterRsp::default_instance_,
      RepCounterRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepCounterRsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(RepCounterRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepCounterRsp, _internal_metadata_),
      -1);
  CounterRsp_descriptor_ = file->message_type(1);
  static const int CounterRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterRsp, rspno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterRsp, rspdesc_),
  };
  CounterRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CounterRsp_descriptor_,
      CounterRsp::default_instance_,
      CounterRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterRsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(CounterRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterRsp, _internal_metadata_),
      -1);
  QueryCapitalRsp_descriptor_ = file->message_type(2);
  static const int QueryCapitalRsp_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCapitalRsp, rspno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCapitalRsp, rspdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCapitalRsp, availcapital_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCapitalRsp, freezecapital_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCapitalRsp, margin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCapitalRsp, totalvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCapitalRsp, totalcapital_),
  };
  QueryCapitalRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryCapitalRsp_descriptor_,
      QueryCapitalRsp::default_instance_,
      QueryCapitalRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCapitalRsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryCapitalRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCapitalRsp, _internal_metadata_),
      -1);
  HoldItem_descriptor_ = file->message_type(3);
  static const int HoldItem_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HoldItem, holdno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HoldItem, productcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HoldItem, productname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HoldItem, buyorsell_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HoldItem, margin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HoldItem, posamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HoldItem, availamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HoldItem, avgposprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HoldItem, newprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HoldItem, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HoldItem, profit_),
  };
  HoldItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HoldItem_descriptor_,
      HoldItem::default_instance_,
      HoldItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HoldItem, _has_bits_[0]),
      -1,
      -1,
      sizeof(HoldItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HoldItem, _internal_metadata_),
      -1);
  QueryHoldRsp_descriptor_ = file->message_type(4);
  static const int QueryHoldRsp_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHoldRsp, rspno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHoldRsp, rspdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHoldRsp, availcapital_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHoldRsp, freezecapital_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHoldRsp, totalmargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHoldRsp, totalvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHoldRsp, totalcapital_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHoldRsp, totalprofit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHoldRsp, holdlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHoldRsp, capitalid_),
  };
  QueryHoldRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryHoldRsp_descriptor_,
      QueryHoldRsp::default_instance_,
      QueryHoldRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHoldRsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryHoldRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHoldRsp, _internal_metadata_),
      -1);
  OrderItem_descriptor_ = file->message_type(5);
  static const int OrderItem_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, orderno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, ordertime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, productcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, productname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, buyorsell_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, openorclose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, ordertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, orderamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, orderprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, status_),
  };
  OrderItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OrderItem_descriptor_,
      OrderItem::default_instance_,
      OrderItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, _has_bits_[0]),
      -1,
      -1,
      sizeof(OrderItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, _internal_metadata_),
      -1);
  QueryOrderRsp_descriptor_ = file->message_type(6);
  static const int QueryOrderRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryOrderRsp, rspno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryOrderRsp, rspdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryOrderRsp, orderlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryOrderRsp, capitalid_),
  };
  QueryOrderRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryOrderRsp_descriptor_,
      QueryOrderRsp::default_instance_,
      QueryOrderRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryOrderRsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryOrderRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryOrderRsp, _internal_metadata_),
      -1);
  DealItem_descriptor_ = file->message_type(7);
  static const int DealItem_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealItem, dealno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealItem, dealtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealItem, productcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealItem, productname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealItem, buyorsell_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealItem, openorclose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealItem, dealamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealItem, dealprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealItem, fee_),
  };
  DealItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DealItem_descriptor_,
      DealItem::default_instance_,
      DealItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealItem, _has_bits_[0]),
      -1,
      -1,
      sizeof(DealItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealItem, _internal_metadata_),
      -1);
  QueryDealRsp_descriptor_ = file->message_type(8);
  static const int QueryDealRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDealRsp, rspno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDealRsp, rspdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDealRsp, deallist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDealRsp, capitalid_),
  };
  QueryDealRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryDealRsp_descriptor_,
      QueryDealRsp::default_instance_,
      QueryDealRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDealRsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryDealRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDealRsp, _internal_metadata_),
      -1);
  CounterSettleRsp_descriptor_ = file->message_type(9);
  static const int CounterSettleRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterSettleRsp, rspno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterSettleRsp, rspdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterSettleRsp, settletime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterSettleRsp, status_),
  };
  CounterSettleRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CounterSettleRsp_descriptor_,
      CounterSettleRsp::default_instance_,
      CounterSettleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterSettleRsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(CounterSettleRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterSettleRsp, _internal_metadata_),
      -1);
  TradeRuleRsp_descriptor_ = file->message_type(10);
  static const int TradeRuleRsp_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeRuleRsp, rspno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeRuleRsp, rspdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeRuleRsp, updatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeRuleRsp, traderate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeRuleRsp, mintradefee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeRuleRsp, maxposamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeRuleRsp, maxorderamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeRuleRsp, settletime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeRuleRsp, stoptrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeRuleRsp, traderule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeRuleRsp, marginrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeRuleRsp, forcecloserate_),
  };
  TradeRuleRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TradeRuleRsp_descriptor_,
      TradeRuleRsp::default_instance_,
      TradeRuleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeRuleRsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(TradeRuleRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeRuleRsp, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dzhyun_2ecounter_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RepCounterRsp_descriptor_, &RepCounterRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CounterRsp_descriptor_, &CounterRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryCapitalRsp_descriptor_, &QueryCapitalRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HoldItem_descriptor_, &HoldItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryHoldRsp_descriptor_, &QueryHoldRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OrderItem_descriptor_, &OrderItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryOrderRsp_descriptor_, &QueryOrderRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DealItem_descriptor_, &DealItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryDealRsp_descriptor_, &QueryDealRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CounterSettleRsp_descriptor_, &CounterSettleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TradeRuleRsp_descriptor_, &TradeRuleRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dzhyun_2ecounter_2eproto() {
  delete RepCounterRsp::default_instance_;
  delete RepCounterRsp_reflection_;
  delete CounterRsp::default_instance_;
  delete CounterRsp_reflection_;
  delete QueryCapitalRsp::default_instance_;
  delete QueryCapitalRsp_reflection_;
  delete HoldItem::default_instance_;
  delete HoldItem_reflection_;
  delete QueryHoldRsp::default_instance_;
  delete QueryHoldRsp_reflection_;
  delete OrderItem::default_instance_;
  delete OrderItem_reflection_;
  delete QueryOrderRsp::default_instance_;
  delete QueryOrderRsp_reflection_;
  delete DealItem::default_instance_;
  delete DealItem_reflection_;
  delete QueryDealRsp::default_instance_;
  delete QueryDealRsp_reflection_;
  delete CounterSettleRsp::default_instance_;
  delete CounterSettleRsp_reflection_;
  delete TradeRuleRsp::default_instance_;
  delete TradeRuleRsp_reflection_;
}

void protobuf_AddDesc_dzhyun_2ecounter_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024dzhyun.counter.proto\022\006dzhyun\"S\n\rRepCou"
    "nterRsp\022\r\n\005RspNo\030\001 \002(\r\022\017\n\007RspDesc\030\002 \001(\t\022"
    "\016\n\006Status\030\003 \001(\r\022\022\n\nStatusDesc\030\004 \001(\t\",\n\nC"
    "ounterRsp\022\r\n\005RspNo\030\001 \002(\003\022\017\n\007RspDesc\030\002 \001("
    "\t\"\230\001\n\017QueryCapitalRsp\022\r\n\005RspNo\030\001 \002(\003\022\017\n\007"
    "RspDesc\030\002 \001(\t\022\024\n\014AvailCapital\030\003 \001(\003\022\025\n\rF"
    "reezeCapital\030\004 \001(\003\022\016\n\006Margin\030\005 \001(\003\022\022\n\nTo"
    "talValue\030\006 \001(\003\022\024\n\014TotalCapital\030\007 \001(\003\"\325\001\n"
    "\010HoldItem\022\016\n\006HoldNo\030\001 \002(\t\022\023\n\013ProductCode"
    "\030\002 \001(\t\022\023\n\013ProductName\030\003 \001(\t\022\021\n\tBuyOrSell"
    "\030\004 \001(\t\022\016\n\006Margin\030\005 \001(\003\022\021\n\tPosAmount\030\006 \001("
    "\003\022\023\n\013AvailAmount\030\007 \001(\003\022\023\n\013AvgPosPrice\030\010 "
    "\001(\003\022\020\n\010NewPrice\030\t \001(\003\022\r\n\005Value\030\n \001(\003\022\016\n\006"
    "Profit\030\013 \001(\003\"\346\001\n\014QueryHoldRsp\022\r\n\005RspNo\030\001"
    " \002(\003\022\017\n\007RspDesc\030\002 \001(\t\022\024\n\014AvailCapital\030\003 "
    "\001(\003\022\025\n\rFreezeCapital\030\004 \001(\003\022\023\n\013TotalMargi"
    "n\030\005 \001(\003\022\022\n\nTotalValue\030\006 \001(\003\022\024\n\014TotalCapi"
    "tal\030\007 \001(\003\022\023\n\013TotalProfit\030\010 \001(\003\022\"\n\010HoldLi"
    "st\030\t \003(\0132\020.dzhyun.HoldItem\022\021\n\tCapitalId\030"
    "\n \001(\t\"\315\001\n\tOrderItem\022\017\n\007OrderNo\030\001 \002(\t\022\021\n\t"
    "OrderTime\030\002 \001(\t\022\023\n\013ProductCode\030\003 \001(\t\022\023\n\013"
    "ProductName\030\004 \001(\t\022\021\n\tBuyOrSell\030\005 \001(\t\022\023\n\013"
    "OpenOrClose\030\006 \001(\t\022\021\n\tOrderType\030\007 \001(\t\022\023\n\013"
    "OrderAmount\030\010 \001(\003\022\022\n\nOrderPrice\030\t \001(\003\022\016\n"
    "\006Status\030\n \001(\t\"h\n\rQueryOrderRsp\022\r\n\005RspNo\030"
    "\001 \002(\003\022\017\n\007RspDesc\030\002 \001(\t\022$\n\tOrderList\030\003 \003("
    "\0132\021.dzhyun.OrderItem\022\021\n\tCapitalId\030\004 \001(\t\""
    "\262\001\n\010DealItem\022\016\n\006DealNo\030\001 \002(\t\022\020\n\010DealTime"
    "\030\002 \001(\t\022\023\n\013ProductCode\030\003 \001(\t\022\023\n\013ProductNa"
    "me\030\004 \001(\t\022\021\n\tBuyOrSell\030\005 \001(\t\022\023\n\013OpenOrClo"
    "se\030\006 \001(\t\022\022\n\nDealAmount\030\007 \001(\003\022\021\n\tDealPric"
    "e\030\010 \001(\003\022\013\n\003Fee\030\t \001(\003\"e\n\014QueryDealRsp\022\r\n\005"
    "RspNo\030\001 \002(\003\022\017\n\007RspDesc\030\002 \001(\t\022\"\n\010DealList"
    "\030\003 \003(\0132\020.dzhyun.DealItem\022\021\n\tCapitalId\030\004 "
    "\001(\t\"V\n\020CounterSettleRsp\022\r\n\005RspNo\030\001 \002(\003\022\017"
    "\n\007RspDesc\030\002 \001(\t\022\022\n\nSettleTime\030\003 \001(\t\022\016\n\006S"
    "tatus\030\004 \001(\003\"\376\001\n\014TradeRuleRsp\022\r\n\005RspNo\030\001 "
    "\002(\003\022\017\n\007RspDesc\030\002 \001(\t\022\022\n\nUpdateTime\030\003 \001(\t"
    "\022\021\n\tTradeRate\030\004 \001(\003\022\023\n\013MinTradeFee\030\005 \001(\003"
    "\022\024\n\014MaxPosAmount\030\006 \001(\003\022\026\n\016MaxOrderAmount"
    "\030\007 \001(\003\022\022\n\nSettleTime\030\010 \001(\t\022\021\n\tStopTrade\030"
    "\t \001(\003\022\021\n\tTradeRule\030\n \001(\003\022\022\n\nMarginRate\030\013"
    " \001(\003\022\026\n\016ForceCloseRate\030\014 \001(\003B\022\n\020com.dzhy"
    "un.proto", 1728);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dzhyun.counter.proto", &protobuf_RegisterTypes);
  RepCounterRsp::default_instance_ = new RepCounterRsp();
  CounterRsp::default_instance_ = new CounterRsp();
  QueryCapitalRsp::default_instance_ = new QueryCapitalRsp();
  HoldItem::default_instance_ = new HoldItem();
  QueryHoldRsp::default_instance_ = new QueryHoldRsp();
  OrderItem::default_instance_ = new OrderItem();
  QueryOrderRsp::default_instance_ = new QueryOrderRsp();
  DealItem::default_instance_ = new DealItem();
  QueryDealRsp::default_instance_ = new QueryDealRsp();
  CounterSettleRsp::default_instance_ = new CounterSettleRsp();
  TradeRuleRsp::default_instance_ = new TradeRuleRsp();
  RepCounterRsp::default_instance_->InitAsDefaultInstance();
  CounterRsp::default_instance_->InitAsDefaultInstance();
  QueryCapitalRsp::default_instance_->InitAsDefaultInstance();
  HoldItem::default_instance_->InitAsDefaultInstance();
  QueryHoldRsp::default_instance_->InitAsDefaultInstance();
  OrderItem::default_instance_->InitAsDefaultInstance();
  QueryOrderRsp::default_instance_->InitAsDefaultInstance();
  DealItem::default_instance_->InitAsDefaultInstance();
  QueryDealRsp::default_instance_->InitAsDefaultInstance();
  CounterSettleRsp::default_instance_->InitAsDefaultInstance();
  TradeRuleRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dzhyun_2ecounter_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dzhyun_2ecounter_2eproto {
  StaticDescriptorInitializer_dzhyun_2ecounter_2eproto() {
    protobuf_AddDesc_dzhyun_2ecounter_2eproto();
  }
} static_descriptor_initializer_dzhyun_2ecounter_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepCounterRsp::kRspNoFieldNumber;
const int RepCounterRsp::kRspDescFieldNumber;
const int RepCounterRsp::kStatusFieldNumber;
const int RepCounterRsp::kStatusDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepCounterRsp::RepCounterRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.RepCounterRsp)
}

void RepCounterRsp::InitAsDefaultInstance() {
}

RepCounterRsp::RepCounterRsp(const RepCounterRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.RepCounterRsp)
}

void RepCounterRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rspno_ = 0u;
  rspdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0u;
  statusdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RepCounterRsp::~RepCounterRsp() {
  // @@protoc_insertion_point(destructor:dzhyun.RepCounterRsp)
  SharedDtor();
}

void RepCounterRsp::SharedDtor() {
  rspdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statusdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RepCounterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RepCounterRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RepCounterRsp_descriptor_;
}

const RepCounterRsp& RepCounterRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2ecounter_2eproto();
  return *default_instance_;
}

RepCounterRsp* RepCounterRsp::default_instance_ = NULL;

RepCounterRsp* RepCounterRsp::New(::google::protobuf::Arena* arena) const {
  RepCounterRsp* n = new RepCounterRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RepCounterRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.RepCounterRsp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RepCounterRsp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RepCounterRsp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(rspno_, status_);
    if (has_rspdesc()) {
      rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_statusdesc()) {
      statusdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RepCounterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.RepCounterRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 RspNo = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rspno_)));
          set_has_rspno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RspDesc;
        break;
      }

      // optional string RspDesc = 2;
      case 2: {
        if (tag == 18) {
         parse_RspDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rspdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rspdesc().data(), this->rspdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.RepCounterRsp.RspDesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Status;
        break;
      }

      // optional uint32 Status = 3;
      case 3: {
        if (tag == 24) {
         parse_Status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_StatusDesc;
        break;
      }

      // optional string StatusDesc = 4;
      case 4: {
        if (tag == 34) {
         parse_StatusDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_statusdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->statusdesc().data(), this->statusdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.RepCounterRsp.StatusDesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.RepCounterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.RepCounterRsp)
  return false;
#undef DO_
}

void RepCounterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.RepCounterRsp)
  // required uint32 RspNo = 1;
  if (has_rspno()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rspno(), output);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.RepCounterRsp.RspDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rspdesc(), output);
  }

  // optional uint32 Status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->status(), output);
  }

  // optional string StatusDesc = 4;
  if (has_statusdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->statusdesc().data(), this->statusdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.RepCounterRsp.StatusDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->statusdesc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.RepCounterRsp)
}

::google::protobuf::uint8* RepCounterRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.RepCounterRsp)
  // required uint32 RspNo = 1;
  if (has_rspno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rspno(), target);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.RepCounterRsp.RspDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rspdesc(), target);
  }

  // optional uint32 Status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->status(), target);
  }

  // optional string StatusDesc = 4;
  if (has_statusdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->statusdesc().data(), this->statusdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.RepCounterRsp.StatusDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->statusdesc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.RepCounterRsp)
  return target;
}

int RepCounterRsp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.RepCounterRsp)
  int total_size = 0;

  // required uint32 RspNo = 1;
  if (has_rspno()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rspno());
  }
  if (_has_bits_[1 / 32] & 14u) {
    // optional string RspDesc = 2;
    if (has_rspdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rspdesc());
    }

    // optional uint32 Status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

    // optional string StatusDesc = 4;
    if (has_statusdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->statusdesc());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepCounterRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.RepCounterRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RepCounterRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RepCounterRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.RepCounterRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.RepCounterRsp)
    MergeFrom(*source);
  }
}

void RepCounterRsp::MergeFrom(const RepCounterRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.RepCounterRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rspno()) {
      set_rspno(from.rspno());
    }
    if (from.has_rspdesc()) {
      set_has_rspdesc();
      rspdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rspdesc_);
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_statusdesc()) {
      set_has_statusdesc();
      statusdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statusdesc_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RepCounterRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.RepCounterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepCounterRsp::CopyFrom(const RepCounterRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.RepCounterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepCounterRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RepCounterRsp::Swap(RepCounterRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RepCounterRsp::InternalSwap(RepCounterRsp* other) {
  std::swap(rspno_, other->rspno_);
  rspdesc_.Swap(&other->rspdesc_);
  std::swap(status_, other->status_);
  statusdesc_.Swap(&other->statusdesc_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RepCounterRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RepCounterRsp_descriptor_;
  metadata.reflection = RepCounterRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RepCounterRsp

// required uint32 RspNo = 1;
bool RepCounterRsp::has_rspno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RepCounterRsp::set_has_rspno() {
  _has_bits_[0] |= 0x00000001u;
}
void RepCounterRsp::clear_has_rspno() {
  _has_bits_[0] &= ~0x00000001u;
}
void RepCounterRsp::clear_rspno() {
  rspno_ = 0u;
  clear_has_rspno();
}
 ::google::protobuf::uint32 RepCounterRsp::rspno() const {
  // @@protoc_insertion_point(field_get:dzhyun.RepCounterRsp.RspNo)
  return rspno_;
}
 void RepCounterRsp::set_rspno(::google::protobuf::uint32 value) {
  set_has_rspno();
  rspno_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.RepCounterRsp.RspNo)
}

// optional string RspDesc = 2;
bool RepCounterRsp::has_rspdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RepCounterRsp::set_has_rspdesc() {
  _has_bits_[0] |= 0x00000002u;
}
void RepCounterRsp::clear_has_rspdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
void RepCounterRsp::clear_rspdesc() {
  rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rspdesc();
}
 const ::std::string& RepCounterRsp::rspdesc() const {
  // @@protoc_insertion_point(field_get:dzhyun.RepCounterRsp.RspDesc)
  return rspdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RepCounterRsp::set_rspdesc(const ::std::string& value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.RepCounterRsp.RspDesc)
}
 void RepCounterRsp::set_rspdesc(const char* value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.RepCounterRsp.RspDesc)
}
 void RepCounterRsp::set_rspdesc(const char* value, size_t size) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.RepCounterRsp.RspDesc)
}
 ::std::string* RepCounterRsp::mutable_rspdesc() {
  set_has_rspdesc();
  // @@protoc_insertion_point(field_mutable:dzhyun.RepCounterRsp.RspDesc)
  return rspdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RepCounterRsp::release_rspdesc() {
  // @@protoc_insertion_point(field_release:dzhyun.RepCounterRsp.RspDesc)
  clear_has_rspdesc();
  return rspdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RepCounterRsp::set_allocated_rspdesc(::std::string* rspdesc) {
  if (rspdesc != NULL) {
    set_has_rspdesc();
  } else {
    clear_has_rspdesc();
  }
  rspdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rspdesc);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.RepCounterRsp.RspDesc)
}

// optional uint32 Status = 3;
bool RepCounterRsp::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RepCounterRsp::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
void RepCounterRsp::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
void RepCounterRsp::clear_status() {
  status_ = 0u;
  clear_has_status();
}
 ::google::protobuf::uint32 RepCounterRsp::status() const {
  // @@protoc_insertion_point(field_get:dzhyun.RepCounterRsp.Status)
  return status_;
}
 void RepCounterRsp::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.RepCounterRsp.Status)
}

// optional string StatusDesc = 4;
bool RepCounterRsp::has_statusdesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RepCounterRsp::set_has_statusdesc() {
  _has_bits_[0] |= 0x00000008u;
}
void RepCounterRsp::clear_has_statusdesc() {
  _has_bits_[0] &= ~0x00000008u;
}
void RepCounterRsp::clear_statusdesc() {
  statusdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_statusdesc();
}
 const ::std::string& RepCounterRsp::statusdesc() const {
  // @@protoc_insertion_point(field_get:dzhyun.RepCounterRsp.StatusDesc)
  return statusdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RepCounterRsp::set_statusdesc(const ::std::string& value) {
  set_has_statusdesc();
  statusdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.RepCounterRsp.StatusDesc)
}
 void RepCounterRsp::set_statusdesc(const char* value) {
  set_has_statusdesc();
  statusdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.RepCounterRsp.StatusDesc)
}
 void RepCounterRsp::set_statusdesc(const char* value, size_t size) {
  set_has_statusdesc();
  statusdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.RepCounterRsp.StatusDesc)
}
 ::std::string* RepCounterRsp::mutable_statusdesc() {
  set_has_statusdesc();
  // @@protoc_insertion_point(field_mutable:dzhyun.RepCounterRsp.StatusDesc)
  return statusdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RepCounterRsp::release_statusdesc() {
  // @@protoc_insertion_point(field_release:dzhyun.RepCounterRsp.StatusDesc)
  clear_has_statusdesc();
  return statusdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RepCounterRsp::set_allocated_statusdesc(::std::string* statusdesc) {
  if (statusdesc != NULL) {
    set_has_statusdesc();
  } else {
    clear_has_statusdesc();
  }
  statusdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), statusdesc);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.RepCounterRsp.StatusDesc)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CounterRsp::kRspNoFieldNumber;
const int CounterRsp::kRspDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CounterRsp::CounterRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.CounterRsp)
}

void CounterRsp::InitAsDefaultInstance() {
}

CounterRsp::CounterRsp(const CounterRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.CounterRsp)
}

void CounterRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rspno_ = GOOGLE_LONGLONG(0);
  rspdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CounterRsp::~CounterRsp() {
  // @@protoc_insertion_point(destructor:dzhyun.CounterRsp)
  SharedDtor();
}

void CounterRsp::SharedDtor() {
  rspdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CounterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CounterRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CounterRsp_descriptor_;
}

const CounterRsp& CounterRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2ecounter_2eproto();
  return *default_instance_;
}

CounterRsp* CounterRsp::default_instance_ = NULL;

CounterRsp* CounterRsp::New(::google::protobuf::Arena* arena) const {
  CounterRsp* n = new CounterRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CounterRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.CounterRsp)
  if (_has_bits_[0 / 32] & 3u) {
    rspno_ = GOOGLE_LONGLONG(0);
    if (has_rspdesc()) {
      rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CounterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.CounterRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 RspNo = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rspno_)));
          set_has_rspno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RspDesc;
        break;
      }

      // optional string RspDesc = 2;
      case 2: {
        if (tag == 18) {
         parse_RspDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rspdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rspdesc().data(), this->rspdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.CounterRsp.RspDesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.CounterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.CounterRsp)
  return false;
#undef DO_
}

void CounterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.CounterRsp)
  // required int64 RspNo = 1;
  if (has_rspno()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->rspno(), output);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.CounterRsp.RspDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rspdesc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.CounterRsp)
}

::google::protobuf::uint8* CounterRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.CounterRsp)
  // required int64 RspNo = 1;
  if (has_rspno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->rspno(), target);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.CounterRsp.RspDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rspdesc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.CounterRsp)
  return target;
}

int CounterRsp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.CounterRsp)
  int total_size = 0;

  // required int64 RspNo = 1;
  if (has_rspno()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rspno());
  }
  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rspdesc());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CounterRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.CounterRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CounterRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CounterRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.CounterRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.CounterRsp)
    MergeFrom(*source);
  }
}

void CounterRsp::MergeFrom(const CounterRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.CounterRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rspno()) {
      set_rspno(from.rspno());
    }
    if (from.has_rspdesc()) {
      set_has_rspdesc();
      rspdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rspdesc_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CounterRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.CounterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CounterRsp::CopyFrom(const CounterRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.CounterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CounterRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CounterRsp::Swap(CounterRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CounterRsp::InternalSwap(CounterRsp* other) {
  std::swap(rspno_, other->rspno_);
  rspdesc_.Swap(&other->rspdesc_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CounterRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CounterRsp_descriptor_;
  metadata.reflection = CounterRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CounterRsp

// required int64 RspNo = 1;
bool CounterRsp::has_rspno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CounterRsp::set_has_rspno() {
  _has_bits_[0] |= 0x00000001u;
}
void CounterRsp::clear_has_rspno() {
  _has_bits_[0] &= ~0x00000001u;
}
void CounterRsp::clear_rspno() {
  rspno_ = GOOGLE_LONGLONG(0);
  clear_has_rspno();
}
 ::google::protobuf::int64 CounterRsp::rspno() const {
  // @@protoc_insertion_point(field_get:dzhyun.CounterRsp.RspNo)
  return rspno_;
}
 void CounterRsp::set_rspno(::google::protobuf::int64 value) {
  set_has_rspno();
  rspno_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.CounterRsp.RspNo)
}

// optional string RspDesc = 2;
bool CounterRsp::has_rspdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CounterRsp::set_has_rspdesc() {
  _has_bits_[0] |= 0x00000002u;
}
void CounterRsp::clear_has_rspdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
void CounterRsp::clear_rspdesc() {
  rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rspdesc();
}
 const ::std::string& CounterRsp::rspdesc() const {
  // @@protoc_insertion_point(field_get:dzhyun.CounterRsp.RspDesc)
  return rspdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CounterRsp::set_rspdesc(const ::std::string& value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.CounterRsp.RspDesc)
}
 void CounterRsp::set_rspdesc(const char* value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.CounterRsp.RspDesc)
}
 void CounterRsp::set_rspdesc(const char* value, size_t size) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.CounterRsp.RspDesc)
}
 ::std::string* CounterRsp::mutable_rspdesc() {
  set_has_rspdesc();
  // @@protoc_insertion_point(field_mutable:dzhyun.CounterRsp.RspDesc)
  return rspdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CounterRsp::release_rspdesc() {
  // @@protoc_insertion_point(field_release:dzhyun.CounterRsp.RspDesc)
  clear_has_rspdesc();
  return rspdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CounterRsp::set_allocated_rspdesc(::std::string* rspdesc) {
  if (rspdesc != NULL) {
    set_has_rspdesc();
  } else {
    clear_has_rspdesc();
  }
  rspdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rspdesc);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.CounterRsp.RspDesc)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryCapitalRsp::kRspNoFieldNumber;
const int QueryCapitalRsp::kRspDescFieldNumber;
const int QueryCapitalRsp::kAvailCapitalFieldNumber;
const int QueryCapitalRsp::kFreezeCapitalFieldNumber;
const int QueryCapitalRsp::kMarginFieldNumber;
const int QueryCapitalRsp::kTotalValueFieldNumber;
const int QueryCapitalRsp::kTotalCapitalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryCapitalRsp::QueryCapitalRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QueryCapitalRsp)
}

void QueryCapitalRsp::InitAsDefaultInstance() {
}

QueryCapitalRsp::QueryCapitalRsp(const QueryCapitalRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QueryCapitalRsp)
}

void QueryCapitalRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rspno_ = GOOGLE_LONGLONG(0);
  rspdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  availcapital_ = GOOGLE_LONGLONG(0);
  freezecapital_ = GOOGLE_LONGLONG(0);
  margin_ = GOOGLE_LONGLONG(0);
  totalvalue_ = GOOGLE_LONGLONG(0);
  totalcapital_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryCapitalRsp::~QueryCapitalRsp() {
  // @@protoc_insertion_point(destructor:dzhyun.QueryCapitalRsp)
  SharedDtor();
}

void QueryCapitalRsp::SharedDtor() {
  rspdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QueryCapitalRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryCapitalRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryCapitalRsp_descriptor_;
}

const QueryCapitalRsp& QueryCapitalRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2ecounter_2eproto();
  return *default_instance_;
}

QueryCapitalRsp* QueryCapitalRsp::default_instance_ = NULL;

QueryCapitalRsp* QueryCapitalRsp::New(::google::protobuf::Arena* arena) const {
  QueryCapitalRsp* n = new QueryCapitalRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryCapitalRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QueryCapitalRsp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QueryCapitalRsp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QueryCapitalRsp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(availcapital_, totalcapital_);
    rspno_ = GOOGLE_LONGLONG(0);
    if (has_rspdesc()) {
      rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryCapitalRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QueryCapitalRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 RspNo = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rspno_)));
          set_has_rspno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RspDesc;
        break;
      }

      // optional string RspDesc = 2;
      case 2: {
        if (tag == 18) {
         parse_RspDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rspdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rspdesc().data(), this->rspdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QueryCapitalRsp.RspDesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_AvailCapital;
        break;
      }

      // optional int64 AvailCapital = 3;
      case 3: {
        if (tag == 24) {
         parse_AvailCapital:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &availcapital_)));
          set_has_availcapital();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_FreezeCapital;
        break;
      }

      // optional int64 FreezeCapital = 4;
      case 4: {
        if (tag == 32) {
         parse_FreezeCapital:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &freezecapital_)));
          set_has_freezecapital();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Margin;
        break;
      }

      // optional int64 Margin = 5;
      case 5: {
        if (tag == 40) {
         parse_Margin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &margin_)));
          set_has_margin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_TotalValue;
        break;
      }

      // optional int64 TotalValue = 6;
      case 6: {
        if (tag == 48) {
         parse_TotalValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalvalue_)));
          set_has_totalvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_TotalCapital;
        break;
      }

      // optional int64 TotalCapital = 7;
      case 7: {
        if (tag == 56) {
         parse_TotalCapital:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalcapital_)));
          set_has_totalcapital();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QueryCapitalRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QueryCapitalRsp)
  return false;
#undef DO_
}

void QueryCapitalRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QueryCapitalRsp)
  // required int64 RspNo = 1;
  if (has_rspno()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->rspno(), output);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QueryCapitalRsp.RspDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rspdesc(), output);
  }

  // optional int64 AvailCapital = 3;
  if (has_availcapital()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->availcapital(), output);
  }

  // optional int64 FreezeCapital = 4;
  if (has_freezecapital()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->freezecapital(), output);
  }

  // optional int64 Margin = 5;
  if (has_margin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->margin(), output);
  }

  // optional int64 TotalValue = 6;
  if (has_totalvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->totalvalue(), output);
  }

  // optional int64 TotalCapital = 7;
  if (has_totalcapital()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->totalcapital(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QueryCapitalRsp)
}

::google::protobuf::uint8* QueryCapitalRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QueryCapitalRsp)
  // required int64 RspNo = 1;
  if (has_rspno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->rspno(), target);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QueryCapitalRsp.RspDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rspdesc(), target);
  }

  // optional int64 AvailCapital = 3;
  if (has_availcapital()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->availcapital(), target);
  }

  // optional int64 FreezeCapital = 4;
  if (has_freezecapital()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->freezecapital(), target);
  }

  // optional int64 Margin = 5;
  if (has_margin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->margin(), target);
  }

  // optional int64 TotalValue = 6;
  if (has_totalvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->totalvalue(), target);
  }

  // optional int64 TotalCapital = 7;
  if (has_totalcapital()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->totalcapital(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QueryCapitalRsp)
  return target;
}

int QueryCapitalRsp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QueryCapitalRsp)
  int total_size = 0;

  // required int64 RspNo = 1;
  if (has_rspno()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rspno());
  }
  if (_has_bits_[1 / 32] & 126u) {
    // optional string RspDesc = 2;
    if (has_rspdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rspdesc());
    }

    // optional int64 AvailCapital = 3;
    if (has_availcapital()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->availcapital());
    }

    // optional int64 FreezeCapital = 4;
    if (has_freezecapital()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->freezecapital());
    }

    // optional int64 Margin = 5;
    if (has_margin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->margin());
    }

    // optional int64 TotalValue = 6;
    if (has_totalvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->totalvalue());
    }

    // optional int64 TotalCapital = 7;
    if (has_totalcapital()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->totalcapital());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryCapitalRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QueryCapitalRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryCapitalRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryCapitalRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QueryCapitalRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QueryCapitalRsp)
    MergeFrom(*source);
  }
}

void QueryCapitalRsp::MergeFrom(const QueryCapitalRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QueryCapitalRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rspno()) {
      set_rspno(from.rspno());
    }
    if (from.has_rspdesc()) {
      set_has_rspdesc();
      rspdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rspdesc_);
    }
    if (from.has_availcapital()) {
      set_availcapital(from.availcapital());
    }
    if (from.has_freezecapital()) {
      set_freezecapital(from.freezecapital());
    }
    if (from.has_margin()) {
      set_margin(from.margin());
    }
    if (from.has_totalvalue()) {
      set_totalvalue(from.totalvalue());
    }
    if (from.has_totalcapital()) {
      set_totalcapital(from.totalcapital());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryCapitalRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QueryCapitalRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryCapitalRsp::CopyFrom(const QueryCapitalRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QueryCapitalRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryCapitalRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void QueryCapitalRsp::Swap(QueryCapitalRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryCapitalRsp::InternalSwap(QueryCapitalRsp* other) {
  std::swap(rspno_, other->rspno_);
  rspdesc_.Swap(&other->rspdesc_);
  std::swap(availcapital_, other->availcapital_);
  std::swap(freezecapital_, other->freezecapital_);
  std::swap(margin_, other->margin_);
  std::swap(totalvalue_, other->totalvalue_);
  std::swap(totalcapital_, other->totalcapital_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryCapitalRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryCapitalRsp_descriptor_;
  metadata.reflection = QueryCapitalRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryCapitalRsp

// required int64 RspNo = 1;
bool QueryCapitalRsp::has_rspno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryCapitalRsp::set_has_rspno() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryCapitalRsp::clear_has_rspno() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryCapitalRsp::clear_rspno() {
  rspno_ = GOOGLE_LONGLONG(0);
  clear_has_rspno();
}
 ::google::protobuf::int64 QueryCapitalRsp::rspno() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryCapitalRsp.RspNo)
  return rspno_;
}
 void QueryCapitalRsp::set_rspno(::google::protobuf::int64 value) {
  set_has_rspno();
  rspno_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QueryCapitalRsp.RspNo)
}

// optional string RspDesc = 2;
bool QueryCapitalRsp::has_rspdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryCapitalRsp::set_has_rspdesc() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryCapitalRsp::clear_has_rspdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryCapitalRsp::clear_rspdesc() {
  rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rspdesc();
}
 const ::std::string& QueryCapitalRsp::rspdesc() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryCapitalRsp.RspDesc)
  return rspdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryCapitalRsp::set_rspdesc(const ::std::string& value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QueryCapitalRsp.RspDesc)
}
 void QueryCapitalRsp::set_rspdesc(const char* value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QueryCapitalRsp.RspDesc)
}
 void QueryCapitalRsp::set_rspdesc(const char* value, size_t size) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QueryCapitalRsp.RspDesc)
}
 ::std::string* QueryCapitalRsp::mutable_rspdesc() {
  set_has_rspdesc();
  // @@protoc_insertion_point(field_mutable:dzhyun.QueryCapitalRsp.RspDesc)
  return rspdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QueryCapitalRsp::release_rspdesc() {
  // @@protoc_insertion_point(field_release:dzhyun.QueryCapitalRsp.RspDesc)
  clear_has_rspdesc();
  return rspdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryCapitalRsp::set_allocated_rspdesc(::std::string* rspdesc) {
  if (rspdesc != NULL) {
    set_has_rspdesc();
  } else {
    clear_has_rspdesc();
  }
  rspdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rspdesc);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QueryCapitalRsp.RspDesc)
}

// optional int64 AvailCapital = 3;
bool QueryCapitalRsp::has_availcapital() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QueryCapitalRsp::set_has_availcapital() {
  _has_bits_[0] |= 0x00000004u;
}
void QueryCapitalRsp::clear_has_availcapital() {
  _has_bits_[0] &= ~0x00000004u;
}
void QueryCapitalRsp::clear_availcapital() {
  availcapital_ = GOOGLE_LONGLONG(0);
  clear_has_availcapital();
}
 ::google::protobuf::int64 QueryCapitalRsp::availcapital() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryCapitalRsp.AvailCapital)
  return availcapital_;
}
 void QueryCapitalRsp::set_availcapital(::google::protobuf::int64 value) {
  set_has_availcapital();
  availcapital_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QueryCapitalRsp.AvailCapital)
}

// optional int64 FreezeCapital = 4;
bool QueryCapitalRsp::has_freezecapital() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QueryCapitalRsp::set_has_freezecapital() {
  _has_bits_[0] |= 0x00000008u;
}
void QueryCapitalRsp::clear_has_freezecapital() {
  _has_bits_[0] &= ~0x00000008u;
}
void QueryCapitalRsp::clear_freezecapital() {
  freezecapital_ = GOOGLE_LONGLONG(0);
  clear_has_freezecapital();
}
 ::google::protobuf::int64 QueryCapitalRsp::freezecapital() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryCapitalRsp.FreezeCapital)
  return freezecapital_;
}
 void QueryCapitalRsp::set_freezecapital(::google::protobuf::int64 value) {
  set_has_freezecapital();
  freezecapital_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QueryCapitalRsp.FreezeCapital)
}

// optional int64 Margin = 5;
bool QueryCapitalRsp::has_margin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QueryCapitalRsp::set_has_margin() {
  _has_bits_[0] |= 0x00000010u;
}
void QueryCapitalRsp::clear_has_margin() {
  _has_bits_[0] &= ~0x00000010u;
}
void QueryCapitalRsp::clear_margin() {
  margin_ = GOOGLE_LONGLONG(0);
  clear_has_margin();
}
 ::google::protobuf::int64 QueryCapitalRsp::margin() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryCapitalRsp.Margin)
  return margin_;
}
 void QueryCapitalRsp::set_margin(::google::protobuf::int64 value) {
  set_has_margin();
  margin_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QueryCapitalRsp.Margin)
}

// optional int64 TotalValue = 6;
bool QueryCapitalRsp::has_totalvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void QueryCapitalRsp::set_has_totalvalue() {
  _has_bits_[0] |= 0x00000020u;
}
void QueryCapitalRsp::clear_has_totalvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
void QueryCapitalRsp::clear_totalvalue() {
  totalvalue_ = GOOGLE_LONGLONG(0);
  clear_has_totalvalue();
}
 ::google::protobuf::int64 QueryCapitalRsp::totalvalue() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryCapitalRsp.TotalValue)
  return totalvalue_;
}
 void QueryCapitalRsp::set_totalvalue(::google::protobuf::int64 value) {
  set_has_totalvalue();
  totalvalue_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QueryCapitalRsp.TotalValue)
}

// optional int64 TotalCapital = 7;
bool QueryCapitalRsp::has_totalcapital() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void QueryCapitalRsp::set_has_totalcapital() {
  _has_bits_[0] |= 0x00000040u;
}
void QueryCapitalRsp::clear_has_totalcapital() {
  _has_bits_[0] &= ~0x00000040u;
}
void QueryCapitalRsp::clear_totalcapital() {
  totalcapital_ = GOOGLE_LONGLONG(0);
  clear_has_totalcapital();
}
 ::google::protobuf::int64 QueryCapitalRsp::totalcapital() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryCapitalRsp.TotalCapital)
  return totalcapital_;
}
 void QueryCapitalRsp::set_totalcapital(::google::protobuf::int64 value) {
  set_has_totalcapital();
  totalcapital_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QueryCapitalRsp.TotalCapital)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HoldItem::kHoldNoFieldNumber;
const int HoldItem::kProductCodeFieldNumber;
const int HoldItem::kProductNameFieldNumber;
const int HoldItem::kBuyOrSellFieldNumber;
const int HoldItem::kMarginFieldNumber;
const int HoldItem::kPosAmountFieldNumber;
const int HoldItem::kAvailAmountFieldNumber;
const int HoldItem::kAvgPosPriceFieldNumber;
const int HoldItem::kNewPriceFieldNumber;
const int HoldItem::kValueFieldNumber;
const int HoldItem::kProfitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HoldItem::HoldItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.HoldItem)
}

void HoldItem::InitAsDefaultInstance() {
}

HoldItem::HoldItem(const HoldItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.HoldItem)
}

void HoldItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  holdno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buyorsell_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  margin_ = GOOGLE_LONGLONG(0);
  posamount_ = GOOGLE_LONGLONG(0);
  availamount_ = GOOGLE_LONGLONG(0);
  avgposprice_ = GOOGLE_LONGLONG(0);
  newprice_ = GOOGLE_LONGLONG(0);
  value_ = GOOGLE_LONGLONG(0);
  profit_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HoldItem::~HoldItem() {
  // @@protoc_insertion_point(destructor:dzhyun.HoldItem)
  SharedDtor();
}

void HoldItem::SharedDtor() {
  holdno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buyorsell_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HoldItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HoldItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HoldItem_descriptor_;
}

const HoldItem& HoldItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2ecounter_2eproto();
  return *default_instance_;
}

HoldItem* HoldItem::default_instance_ = NULL;

HoldItem* HoldItem::New(::google::protobuf::Arena* arena) const {
  HoldItem* n = new HoldItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HoldItem::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.HoldItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HoldItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HoldItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(margin_, avgposprice_);
    if (has_holdno()) {
      holdno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_productcode()) {
      productcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_productname()) {
      productname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_buyorsell()) {
      buyorsell_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ZR_(newprice_, profit_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HoldItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.HoldItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string HoldNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_holdno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->holdno().data(), this->holdno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.HoldItem.HoldNo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ProductCode;
        break;
      }

      // optional string ProductCode = 2;
      case 2: {
        if (tag == 18) {
         parse_ProductCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->productcode().data(), this->productcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.HoldItem.ProductCode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ProductName;
        break;
      }

      // optional string ProductName = 3;
      case 3: {
        if (tag == 26) {
         parse_ProductName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->productname().data(), this->productname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.HoldItem.ProductName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_BuyOrSell;
        break;
      }

      // optional string BuyOrSell = 4;
      case 4: {
        if (tag == 34) {
         parse_BuyOrSell:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buyorsell()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->buyorsell().data(), this->buyorsell().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.HoldItem.BuyOrSell");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Margin;
        break;
      }

      // optional int64 Margin = 5;
      case 5: {
        if (tag == 40) {
         parse_Margin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &margin_)));
          set_has_margin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_PosAmount;
        break;
      }

      // optional int64 PosAmount = 6;
      case 6: {
        if (tag == 48) {
         parse_PosAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &posamount_)));
          set_has_posamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_AvailAmount;
        break;
      }

      // optional int64 AvailAmount = 7;
      case 7: {
        if (tag == 56) {
         parse_AvailAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &availamount_)));
          set_has_availamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_AvgPosPrice;
        break;
      }

      // optional int64 AvgPosPrice = 8;
      case 8: {
        if (tag == 64) {
         parse_AvgPosPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &avgposprice_)));
          set_has_avgposprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_NewPrice;
        break;
      }

      // optional int64 NewPrice = 9;
      case 9: {
        if (tag == 72) {
         parse_NewPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &newprice_)));
          set_has_newprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_Value;
        break;
      }

      // optional int64 Value = 10;
      case 10: {
        if (tag == 80) {
         parse_Value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_Profit;
        break;
      }

      // optional int64 Profit = 11;
      case 11: {
        if (tag == 88) {
         parse_Profit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &profit_)));
          set_has_profit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.HoldItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.HoldItem)
  return false;
#undef DO_
}

void HoldItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.HoldItem)
  // required string HoldNo = 1;
  if (has_holdno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->holdno().data(), this->holdno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.HoldItem.HoldNo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->holdno(), output);
  }

  // optional string ProductCode = 2;
  if (has_productcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productcode().data(), this->productcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.HoldItem.ProductCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->productcode(), output);
  }

  // optional string ProductName = 3;
  if (has_productname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productname().data(), this->productname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.HoldItem.ProductName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->productname(), output);
  }

  // optional string BuyOrSell = 4;
  if (has_buyorsell()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->buyorsell().data(), this->buyorsell().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.HoldItem.BuyOrSell");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->buyorsell(), output);
  }

  // optional int64 Margin = 5;
  if (has_margin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->margin(), output);
  }

  // optional int64 PosAmount = 6;
  if (has_posamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->posamount(), output);
  }

  // optional int64 AvailAmount = 7;
  if (has_availamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->availamount(), output);
  }

  // optional int64 AvgPosPrice = 8;
  if (has_avgposprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->avgposprice(), output);
  }

  // optional int64 NewPrice = 9;
  if (has_newprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->newprice(), output);
  }

  // optional int64 Value = 10;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->value(), output);
  }

  // optional int64 Profit = 11;
  if (has_profit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->profit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.HoldItem)
}

::google::protobuf::uint8* HoldItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.HoldItem)
  // required string HoldNo = 1;
  if (has_holdno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->holdno().data(), this->holdno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.HoldItem.HoldNo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->holdno(), target);
  }

  // optional string ProductCode = 2;
  if (has_productcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productcode().data(), this->productcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.HoldItem.ProductCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->productcode(), target);
  }

  // optional string ProductName = 3;
  if (has_productname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productname().data(), this->productname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.HoldItem.ProductName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->productname(), target);
  }

  // optional string BuyOrSell = 4;
  if (has_buyorsell()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->buyorsell().data(), this->buyorsell().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.HoldItem.BuyOrSell");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->buyorsell(), target);
  }

  // optional int64 Margin = 5;
  if (has_margin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->margin(), target);
  }

  // optional int64 PosAmount = 6;
  if (has_posamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->posamount(), target);
  }

  // optional int64 AvailAmount = 7;
  if (has_availamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->availamount(), target);
  }

  // optional int64 AvgPosPrice = 8;
  if (has_avgposprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->avgposprice(), target);
  }

  // optional int64 NewPrice = 9;
  if (has_newprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->newprice(), target);
  }

  // optional int64 Value = 10;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->value(), target);
  }

  // optional int64 Profit = 11;
  if (has_profit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->profit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.HoldItem)
  return target;
}

int HoldItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.HoldItem)
  int total_size = 0;

  // required string HoldNo = 1;
  if (has_holdno()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->holdno());
  }
  if (_has_bits_[1 / 32] & 254u) {
    // optional string ProductCode = 2;
    if (has_productcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productcode());
    }

    // optional string ProductName = 3;
    if (has_productname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productname());
    }

    // optional string BuyOrSell = 4;
    if (has_buyorsell()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->buyorsell());
    }

    // optional int64 Margin = 5;
    if (has_margin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->margin());
    }

    // optional int64 PosAmount = 6;
    if (has_posamount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->posamount());
    }

    // optional int64 AvailAmount = 7;
    if (has_availamount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->availamount());
    }

    // optional int64 AvgPosPrice = 8;
    if (has_avgposprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->avgposprice());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional int64 NewPrice = 9;
    if (has_newprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->newprice());
    }

    // optional int64 Value = 10;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->value());
    }

    // optional int64 Profit = 11;
    if (has_profit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->profit());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HoldItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.HoldItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HoldItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HoldItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.HoldItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.HoldItem)
    MergeFrom(*source);
  }
}

void HoldItem::MergeFrom(const HoldItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.HoldItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_holdno()) {
      set_has_holdno();
      holdno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.holdno_);
    }
    if (from.has_productcode()) {
      set_has_productcode();
      productcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productcode_);
    }
    if (from.has_productname()) {
      set_has_productname();
      productname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productname_);
    }
    if (from.has_buyorsell()) {
      set_has_buyorsell();
      buyorsell_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buyorsell_);
    }
    if (from.has_margin()) {
      set_margin(from.margin());
    }
    if (from.has_posamount()) {
      set_posamount(from.posamount());
    }
    if (from.has_availamount()) {
      set_availamount(from.availamount());
    }
    if (from.has_avgposprice()) {
      set_avgposprice(from.avgposprice());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_newprice()) {
      set_newprice(from.newprice());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_profit()) {
      set_profit(from.profit());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HoldItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.HoldItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HoldItem::CopyFrom(const HoldItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.HoldItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HoldItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void HoldItem::Swap(HoldItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HoldItem::InternalSwap(HoldItem* other) {
  holdno_.Swap(&other->holdno_);
  productcode_.Swap(&other->productcode_);
  productname_.Swap(&other->productname_);
  buyorsell_.Swap(&other->buyorsell_);
  std::swap(margin_, other->margin_);
  std::swap(posamount_, other->posamount_);
  std::swap(availamount_, other->availamount_);
  std::swap(avgposprice_, other->avgposprice_);
  std::swap(newprice_, other->newprice_);
  std::swap(value_, other->value_);
  std::swap(profit_, other->profit_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HoldItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HoldItem_descriptor_;
  metadata.reflection = HoldItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HoldItem

// required string HoldNo = 1;
bool HoldItem::has_holdno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HoldItem::set_has_holdno() {
  _has_bits_[0] |= 0x00000001u;
}
void HoldItem::clear_has_holdno() {
  _has_bits_[0] &= ~0x00000001u;
}
void HoldItem::clear_holdno() {
  holdno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_holdno();
}
 const ::std::string& HoldItem::holdno() const {
  // @@protoc_insertion_point(field_get:dzhyun.HoldItem.HoldNo)
  return holdno_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HoldItem::set_holdno(const ::std::string& value) {
  set_has_holdno();
  holdno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.HoldItem.HoldNo)
}
 void HoldItem::set_holdno(const char* value) {
  set_has_holdno();
  holdno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.HoldItem.HoldNo)
}
 void HoldItem::set_holdno(const char* value, size_t size) {
  set_has_holdno();
  holdno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.HoldItem.HoldNo)
}
 ::std::string* HoldItem::mutable_holdno() {
  set_has_holdno();
  // @@protoc_insertion_point(field_mutable:dzhyun.HoldItem.HoldNo)
  return holdno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HoldItem::release_holdno() {
  // @@protoc_insertion_point(field_release:dzhyun.HoldItem.HoldNo)
  clear_has_holdno();
  return holdno_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HoldItem::set_allocated_holdno(::std::string* holdno) {
  if (holdno != NULL) {
    set_has_holdno();
  } else {
    clear_has_holdno();
  }
  holdno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), holdno);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.HoldItem.HoldNo)
}

// optional string ProductCode = 2;
bool HoldItem::has_productcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HoldItem::set_has_productcode() {
  _has_bits_[0] |= 0x00000002u;
}
void HoldItem::clear_has_productcode() {
  _has_bits_[0] &= ~0x00000002u;
}
void HoldItem::clear_productcode() {
  productcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productcode();
}
 const ::std::string& HoldItem::productcode() const {
  // @@protoc_insertion_point(field_get:dzhyun.HoldItem.ProductCode)
  return productcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HoldItem::set_productcode(const ::std::string& value) {
  set_has_productcode();
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.HoldItem.ProductCode)
}
 void HoldItem::set_productcode(const char* value) {
  set_has_productcode();
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.HoldItem.ProductCode)
}
 void HoldItem::set_productcode(const char* value, size_t size) {
  set_has_productcode();
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.HoldItem.ProductCode)
}
 ::std::string* HoldItem::mutable_productcode() {
  set_has_productcode();
  // @@protoc_insertion_point(field_mutable:dzhyun.HoldItem.ProductCode)
  return productcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HoldItem::release_productcode() {
  // @@protoc_insertion_point(field_release:dzhyun.HoldItem.ProductCode)
  clear_has_productcode();
  return productcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HoldItem::set_allocated_productcode(::std::string* productcode) {
  if (productcode != NULL) {
    set_has_productcode();
  } else {
    clear_has_productcode();
  }
  productcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productcode);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.HoldItem.ProductCode)
}

// optional string ProductName = 3;
bool HoldItem::has_productname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HoldItem::set_has_productname() {
  _has_bits_[0] |= 0x00000004u;
}
void HoldItem::clear_has_productname() {
  _has_bits_[0] &= ~0x00000004u;
}
void HoldItem::clear_productname() {
  productname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productname();
}
 const ::std::string& HoldItem::productname() const {
  // @@protoc_insertion_point(field_get:dzhyun.HoldItem.ProductName)
  return productname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HoldItem::set_productname(const ::std::string& value) {
  set_has_productname();
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.HoldItem.ProductName)
}
 void HoldItem::set_productname(const char* value) {
  set_has_productname();
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.HoldItem.ProductName)
}
 void HoldItem::set_productname(const char* value, size_t size) {
  set_has_productname();
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.HoldItem.ProductName)
}
 ::std::string* HoldItem::mutable_productname() {
  set_has_productname();
  // @@protoc_insertion_point(field_mutable:dzhyun.HoldItem.ProductName)
  return productname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HoldItem::release_productname() {
  // @@protoc_insertion_point(field_release:dzhyun.HoldItem.ProductName)
  clear_has_productname();
  return productname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HoldItem::set_allocated_productname(::std::string* productname) {
  if (productname != NULL) {
    set_has_productname();
  } else {
    clear_has_productname();
  }
  productname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productname);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.HoldItem.ProductName)
}

// optional string BuyOrSell = 4;
bool HoldItem::has_buyorsell() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HoldItem::set_has_buyorsell() {
  _has_bits_[0] |= 0x00000008u;
}
void HoldItem::clear_has_buyorsell() {
  _has_bits_[0] &= ~0x00000008u;
}
void HoldItem::clear_buyorsell() {
  buyorsell_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buyorsell();
}
 const ::std::string& HoldItem::buyorsell() const {
  // @@protoc_insertion_point(field_get:dzhyun.HoldItem.BuyOrSell)
  return buyorsell_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HoldItem::set_buyorsell(const ::std::string& value) {
  set_has_buyorsell();
  buyorsell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.HoldItem.BuyOrSell)
}
 void HoldItem::set_buyorsell(const char* value) {
  set_has_buyorsell();
  buyorsell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.HoldItem.BuyOrSell)
}
 void HoldItem::set_buyorsell(const char* value, size_t size) {
  set_has_buyorsell();
  buyorsell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.HoldItem.BuyOrSell)
}
 ::std::string* HoldItem::mutable_buyorsell() {
  set_has_buyorsell();
  // @@protoc_insertion_point(field_mutable:dzhyun.HoldItem.BuyOrSell)
  return buyorsell_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HoldItem::release_buyorsell() {
  // @@protoc_insertion_point(field_release:dzhyun.HoldItem.BuyOrSell)
  clear_has_buyorsell();
  return buyorsell_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HoldItem::set_allocated_buyorsell(::std::string* buyorsell) {
  if (buyorsell != NULL) {
    set_has_buyorsell();
  } else {
    clear_has_buyorsell();
  }
  buyorsell_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buyorsell);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.HoldItem.BuyOrSell)
}

// optional int64 Margin = 5;
bool HoldItem::has_margin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void HoldItem::set_has_margin() {
  _has_bits_[0] |= 0x00000010u;
}
void HoldItem::clear_has_margin() {
  _has_bits_[0] &= ~0x00000010u;
}
void HoldItem::clear_margin() {
  margin_ = GOOGLE_LONGLONG(0);
  clear_has_margin();
}
 ::google::protobuf::int64 HoldItem::margin() const {
  // @@protoc_insertion_point(field_get:dzhyun.HoldItem.Margin)
  return margin_;
}
 void HoldItem::set_margin(::google::protobuf::int64 value) {
  set_has_margin();
  margin_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.HoldItem.Margin)
}

// optional int64 PosAmount = 6;
bool HoldItem::has_posamount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void HoldItem::set_has_posamount() {
  _has_bits_[0] |= 0x00000020u;
}
void HoldItem::clear_has_posamount() {
  _has_bits_[0] &= ~0x00000020u;
}
void HoldItem::clear_posamount() {
  posamount_ = GOOGLE_LONGLONG(0);
  clear_has_posamount();
}
 ::google::protobuf::int64 HoldItem::posamount() const {
  // @@protoc_insertion_point(field_get:dzhyun.HoldItem.PosAmount)
  return posamount_;
}
 void HoldItem::set_posamount(::google::protobuf::int64 value) {
  set_has_posamount();
  posamount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.HoldItem.PosAmount)
}

// optional int64 AvailAmount = 7;
bool HoldItem::has_availamount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void HoldItem::set_has_availamount() {
  _has_bits_[0] |= 0x00000040u;
}
void HoldItem::clear_has_availamount() {
  _has_bits_[0] &= ~0x00000040u;
}
void HoldItem::clear_availamount() {
  availamount_ = GOOGLE_LONGLONG(0);
  clear_has_availamount();
}
 ::google::protobuf::int64 HoldItem::availamount() const {
  // @@protoc_insertion_point(field_get:dzhyun.HoldItem.AvailAmount)
  return availamount_;
}
 void HoldItem::set_availamount(::google::protobuf::int64 value) {
  set_has_availamount();
  availamount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.HoldItem.AvailAmount)
}

// optional int64 AvgPosPrice = 8;
bool HoldItem::has_avgposprice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void HoldItem::set_has_avgposprice() {
  _has_bits_[0] |= 0x00000080u;
}
void HoldItem::clear_has_avgposprice() {
  _has_bits_[0] &= ~0x00000080u;
}
void HoldItem::clear_avgposprice() {
  avgposprice_ = GOOGLE_LONGLONG(0);
  clear_has_avgposprice();
}
 ::google::protobuf::int64 HoldItem::avgposprice() const {
  // @@protoc_insertion_point(field_get:dzhyun.HoldItem.AvgPosPrice)
  return avgposprice_;
}
 void HoldItem::set_avgposprice(::google::protobuf::int64 value) {
  set_has_avgposprice();
  avgposprice_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.HoldItem.AvgPosPrice)
}

// optional int64 NewPrice = 9;
bool HoldItem::has_newprice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void HoldItem::set_has_newprice() {
  _has_bits_[0] |= 0x00000100u;
}
void HoldItem::clear_has_newprice() {
  _has_bits_[0] &= ~0x00000100u;
}
void HoldItem::clear_newprice() {
  newprice_ = GOOGLE_LONGLONG(0);
  clear_has_newprice();
}
 ::google::protobuf::int64 HoldItem::newprice() const {
  // @@protoc_insertion_point(field_get:dzhyun.HoldItem.NewPrice)
  return newprice_;
}
 void HoldItem::set_newprice(::google::protobuf::int64 value) {
  set_has_newprice();
  newprice_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.HoldItem.NewPrice)
}

// optional int64 Value = 10;
bool HoldItem::has_value() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void HoldItem::set_has_value() {
  _has_bits_[0] |= 0x00000200u;
}
void HoldItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000200u;
}
void HoldItem::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
 ::google::protobuf::int64 HoldItem::value() const {
  // @@protoc_insertion_point(field_get:dzhyun.HoldItem.Value)
  return value_;
}
 void HoldItem::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.HoldItem.Value)
}

// optional int64 Profit = 11;
bool HoldItem::has_profit() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void HoldItem::set_has_profit() {
  _has_bits_[0] |= 0x00000400u;
}
void HoldItem::clear_has_profit() {
  _has_bits_[0] &= ~0x00000400u;
}
void HoldItem::clear_profit() {
  profit_ = GOOGLE_LONGLONG(0);
  clear_has_profit();
}
 ::google::protobuf::int64 HoldItem::profit() const {
  // @@protoc_insertion_point(field_get:dzhyun.HoldItem.Profit)
  return profit_;
}
 void HoldItem::set_profit(::google::protobuf::int64 value) {
  set_has_profit();
  profit_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.HoldItem.Profit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryHoldRsp::kRspNoFieldNumber;
const int QueryHoldRsp::kRspDescFieldNumber;
const int QueryHoldRsp::kAvailCapitalFieldNumber;
const int QueryHoldRsp::kFreezeCapitalFieldNumber;
const int QueryHoldRsp::kTotalMarginFieldNumber;
const int QueryHoldRsp::kTotalValueFieldNumber;
const int QueryHoldRsp::kTotalCapitalFieldNumber;
const int QueryHoldRsp::kTotalProfitFieldNumber;
const int QueryHoldRsp::kHoldListFieldNumber;
const int QueryHoldRsp::kCapitalIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryHoldRsp::QueryHoldRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QueryHoldRsp)
}

void QueryHoldRsp::InitAsDefaultInstance() {
}

QueryHoldRsp::QueryHoldRsp(const QueryHoldRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QueryHoldRsp)
}

void QueryHoldRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rspno_ = GOOGLE_LONGLONG(0);
  rspdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  availcapital_ = GOOGLE_LONGLONG(0);
  freezecapital_ = GOOGLE_LONGLONG(0);
  totalmargin_ = GOOGLE_LONGLONG(0);
  totalvalue_ = GOOGLE_LONGLONG(0);
  totalcapital_ = GOOGLE_LONGLONG(0);
  totalprofit_ = GOOGLE_LONGLONG(0);
  capitalid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryHoldRsp::~QueryHoldRsp() {
  // @@protoc_insertion_point(destructor:dzhyun.QueryHoldRsp)
  SharedDtor();
}

void QueryHoldRsp::SharedDtor() {
  rspdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  capitalid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QueryHoldRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryHoldRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryHoldRsp_descriptor_;
}

const QueryHoldRsp& QueryHoldRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2ecounter_2eproto();
  return *default_instance_;
}

QueryHoldRsp* QueryHoldRsp::default_instance_ = NULL;

QueryHoldRsp* QueryHoldRsp::New(::google::protobuf::Arena* arena) const {
  QueryHoldRsp* n = new QueryHoldRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryHoldRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QueryHoldRsp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QueryHoldRsp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QueryHoldRsp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(availcapital_, totalprofit_);
    rspno_ = GOOGLE_LONGLONG(0);
    if (has_rspdesc()) {
      rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (has_capitalid()) {
    capitalid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

#undef ZR_HELPER_
#undef ZR_

  holdlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryHoldRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QueryHoldRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 RspNo = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rspno_)));
          set_has_rspno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RspDesc;
        break;
      }

      // optional string RspDesc = 2;
      case 2: {
        if (tag == 18) {
         parse_RspDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rspdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rspdesc().data(), this->rspdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QueryHoldRsp.RspDesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_AvailCapital;
        break;
      }

      // optional int64 AvailCapital = 3;
      case 3: {
        if (tag == 24) {
         parse_AvailCapital:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &availcapital_)));
          set_has_availcapital();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_FreezeCapital;
        break;
      }

      // optional int64 FreezeCapital = 4;
      case 4: {
        if (tag == 32) {
         parse_FreezeCapital:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &freezecapital_)));
          set_has_freezecapital();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_TotalMargin;
        break;
      }

      // optional int64 TotalMargin = 5;
      case 5: {
        if (tag == 40) {
         parse_TotalMargin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalmargin_)));
          set_has_totalmargin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_TotalValue;
        break;
      }

      // optional int64 TotalValue = 6;
      case 6: {
        if (tag == 48) {
         parse_TotalValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalvalue_)));
          set_has_totalvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_TotalCapital;
        break;
      }

      // optional int64 TotalCapital = 7;
      case 7: {
        if (tag == 56) {
         parse_TotalCapital:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalcapital_)));
          set_has_totalcapital();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_TotalProfit;
        break;
      }

      // optional int64 TotalProfit = 8;
      case 8: {
        if (tag == 64) {
         parse_TotalProfit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalprofit_)));
          set_has_totalprofit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_HoldList;
        break;
      }

      // repeated .dzhyun.HoldItem HoldList = 9;
      case 9: {
        if (tag == 74) {
         parse_HoldList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_HoldList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_holdlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_HoldList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(82)) goto parse_CapitalId;
        break;
      }

      // optional string CapitalId = 10;
      case 10: {
        if (tag == 82) {
         parse_CapitalId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_capitalid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->capitalid().data(), this->capitalid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QueryHoldRsp.CapitalId");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QueryHoldRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QueryHoldRsp)
  return false;
#undef DO_
}

void QueryHoldRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QueryHoldRsp)
  // required int64 RspNo = 1;
  if (has_rspno()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->rspno(), output);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QueryHoldRsp.RspDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rspdesc(), output);
  }

  // optional int64 AvailCapital = 3;
  if (has_availcapital()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->availcapital(), output);
  }

  // optional int64 FreezeCapital = 4;
  if (has_freezecapital()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->freezecapital(), output);
  }

  // optional int64 TotalMargin = 5;
  if (has_totalmargin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->totalmargin(), output);
  }

  // optional int64 TotalValue = 6;
  if (has_totalvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->totalvalue(), output);
  }

  // optional int64 TotalCapital = 7;
  if (has_totalcapital()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->totalcapital(), output);
  }

  // optional int64 TotalProfit = 8;
  if (has_totalprofit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->totalprofit(), output);
  }

  // repeated .dzhyun.HoldItem HoldList = 9;
  for (unsigned int i = 0, n = this->holdlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->holdlist(i), output);
  }

  // optional string CapitalId = 10;
  if (has_capitalid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->capitalid().data(), this->capitalid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QueryHoldRsp.CapitalId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->capitalid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QueryHoldRsp)
}

::google::protobuf::uint8* QueryHoldRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QueryHoldRsp)
  // required int64 RspNo = 1;
  if (has_rspno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->rspno(), target);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QueryHoldRsp.RspDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rspdesc(), target);
  }

  // optional int64 AvailCapital = 3;
  if (has_availcapital()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->availcapital(), target);
  }

  // optional int64 FreezeCapital = 4;
  if (has_freezecapital()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->freezecapital(), target);
  }

  // optional int64 TotalMargin = 5;
  if (has_totalmargin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->totalmargin(), target);
  }

  // optional int64 TotalValue = 6;
  if (has_totalvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->totalvalue(), target);
  }

  // optional int64 TotalCapital = 7;
  if (has_totalcapital()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->totalcapital(), target);
  }

  // optional int64 TotalProfit = 8;
  if (has_totalprofit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->totalprofit(), target);
  }

  // repeated .dzhyun.HoldItem HoldList = 9;
  for (unsigned int i = 0, n = this->holdlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->holdlist(i), target);
  }

  // optional string CapitalId = 10;
  if (has_capitalid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->capitalid().data(), this->capitalid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QueryHoldRsp.CapitalId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->capitalid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QueryHoldRsp)
  return target;
}

int QueryHoldRsp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QueryHoldRsp)
  int total_size = 0;

  // required int64 RspNo = 1;
  if (has_rspno()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rspno());
  }
  if (_has_bits_[1 / 32] & 254u) {
    // optional string RspDesc = 2;
    if (has_rspdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rspdesc());
    }

    // optional int64 AvailCapital = 3;
    if (has_availcapital()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->availcapital());
    }

    // optional int64 FreezeCapital = 4;
    if (has_freezecapital()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->freezecapital());
    }

    // optional int64 TotalMargin = 5;
    if (has_totalmargin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->totalmargin());
    }

    // optional int64 TotalValue = 6;
    if (has_totalvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->totalvalue());
    }

    // optional int64 TotalCapital = 7;
    if (has_totalcapital()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->totalcapital());
    }

    // optional int64 TotalProfit = 8;
    if (has_totalprofit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->totalprofit());
    }

  }
  // optional string CapitalId = 10;
  if (has_capitalid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->capitalid());
  }

  // repeated .dzhyun.HoldItem HoldList = 9;
  total_size += 1 * this->holdlist_size();
  for (int i = 0; i < this->holdlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->holdlist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryHoldRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QueryHoldRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryHoldRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryHoldRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QueryHoldRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QueryHoldRsp)
    MergeFrom(*source);
  }
}

void QueryHoldRsp::MergeFrom(const QueryHoldRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QueryHoldRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  holdlist_.MergeFrom(from.holdlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rspno()) {
      set_rspno(from.rspno());
    }
    if (from.has_rspdesc()) {
      set_has_rspdesc();
      rspdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rspdesc_);
    }
    if (from.has_availcapital()) {
      set_availcapital(from.availcapital());
    }
    if (from.has_freezecapital()) {
      set_freezecapital(from.freezecapital());
    }
    if (from.has_totalmargin()) {
      set_totalmargin(from.totalmargin());
    }
    if (from.has_totalvalue()) {
      set_totalvalue(from.totalvalue());
    }
    if (from.has_totalcapital()) {
      set_totalcapital(from.totalcapital());
    }
    if (from.has_totalprofit()) {
      set_totalprofit(from.totalprofit());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_capitalid()) {
      set_has_capitalid();
      capitalid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.capitalid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryHoldRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QueryHoldRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryHoldRsp::CopyFrom(const QueryHoldRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QueryHoldRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryHoldRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->holdlist())) return false;
  return true;
}

void QueryHoldRsp::Swap(QueryHoldRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryHoldRsp::InternalSwap(QueryHoldRsp* other) {
  std::swap(rspno_, other->rspno_);
  rspdesc_.Swap(&other->rspdesc_);
  std::swap(availcapital_, other->availcapital_);
  std::swap(freezecapital_, other->freezecapital_);
  std::swap(totalmargin_, other->totalmargin_);
  std::swap(totalvalue_, other->totalvalue_);
  std::swap(totalcapital_, other->totalcapital_);
  std::swap(totalprofit_, other->totalprofit_);
  holdlist_.UnsafeArenaSwap(&other->holdlist_);
  capitalid_.Swap(&other->capitalid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryHoldRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryHoldRsp_descriptor_;
  metadata.reflection = QueryHoldRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryHoldRsp

// required int64 RspNo = 1;
bool QueryHoldRsp::has_rspno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryHoldRsp::set_has_rspno() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryHoldRsp::clear_has_rspno() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryHoldRsp::clear_rspno() {
  rspno_ = GOOGLE_LONGLONG(0);
  clear_has_rspno();
}
 ::google::protobuf::int64 QueryHoldRsp::rspno() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryHoldRsp.RspNo)
  return rspno_;
}
 void QueryHoldRsp::set_rspno(::google::protobuf::int64 value) {
  set_has_rspno();
  rspno_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QueryHoldRsp.RspNo)
}

// optional string RspDesc = 2;
bool QueryHoldRsp::has_rspdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryHoldRsp::set_has_rspdesc() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryHoldRsp::clear_has_rspdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryHoldRsp::clear_rspdesc() {
  rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rspdesc();
}
 const ::std::string& QueryHoldRsp::rspdesc() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryHoldRsp.RspDesc)
  return rspdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryHoldRsp::set_rspdesc(const ::std::string& value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QueryHoldRsp.RspDesc)
}
 void QueryHoldRsp::set_rspdesc(const char* value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QueryHoldRsp.RspDesc)
}
 void QueryHoldRsp::set_rspdesc(const char* value, size_t size) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QueryHoldRsp.RspDesc)
}
 ::std::string* QueryHoldRsp::mutable_rspdesc() {
  set_has_rspdesc();
  // @@protoc_insertion_point(field_mutable:dzhyun.QueryHoldRsp.RspDesc)
  return rspdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QueryHoldRsp::release_rspdesc() {
  // @@protoc_insertion_point(field_release:dzhyun.QueryHoldRsp.RspDesc)
  clear_has_rspdesc();
  return rspdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryHoldRsp::set_allocated_rspdesc(::std::string* rspdesc) {
  if (rspdesc != NULL) {
    set_has_rspdesc();
  } else {
    clear_has_rspdesc();
  }
  rspdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rspdesc);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QueryHoldRsp.RspDesc)
}

// optional int64 AvailCapital = 3;
bool QueryHoldRsp::has_availcapital() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QueryHoldRsp::set_has_availcapital() {
  _has_bits_[0] |= 0x00000004u;
}
void QueryHoldRsp::clear_has_availcapital() {
  _has_bits_[0] &= ~0x00000004u;
}
void QueryHoldRsp::clear_availcapital() {
  availcapital_ = GOOGLE_LONGLONG(0);
  clear_has_availcapital();
}
 ::google::protobuf::int64 QueryHoldRsp::availcapital() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryHoldRsp.AvailCapital)
  return availcapital_;
}
 void QueryHoldRsp::set_availcapital(::google::protobuf::int64 value) {
  set_has_availcapital();
  availcapital_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QueryHoldRsp.AvailCapital)
}

// optional int64 FreezeCapital = 4;
bool QueryHoldRsp::has_freezecapital() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QueryHoldRsp::set_has_freezecapital() {
  _has_bits_[0] |= 0x00000008u;
}
void QueryHoldRsp::clear_has_freezecapital() {
  _has_bits_[0] &= ~0x00000008u;
}
void QueryHoldRsp::clear_freezecapital() {
  freezecapital_ = GOOGLE_LONGLONG(0);
  clear_has_freezecapital();
}
 ::google::protobuf::int64 QueryHoldRsp::freezecapital() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryHoldRsp.FreezeCapital)
  return freezecapital_;
}
 void QueryHoldRsp::set_freezecapital(::google::protobuf::int64 value) {
  set_has_freezecapital();
  freezecapital_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QueryHoldRsp.FreezeCapital)
}

// optional int64 TotalMargin = 5;
bool QueryHoldRsp::has_totalmargin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QueryHoldRsp::set_has_totalmargin() {
  _has_bits_[0] |= 0x00000010u;
}
void QueryHoldRsp::clear_has_totalmargin() {
  _has_bits_[0] &= ~0x00000010u;
}
void QueryHoldRsp::clear_totalmargin() {
  totalmargin_ = GOOGLE_LONGLONG(0);
  clear_has_totalmargin();
}
 ::google::protobuf::int64 QueryHoldRsp::totalmargin() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryHoldRsp.TotalMargin)
  return totalmargin_;
}
 void QueryHoldRsp::set_totalmargin(::google::protobuf::int64 value) {
  set_has_totalmargin();
  totalmargin_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QueryHoldRsp.TotalMargin)
}

// optional int64 TotalValue = 6;
bool QueryHoldRsp::has_totalvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void QueryHoldRsp::set_has_totalvalue() {
  _has_bits_[0] |= 0x00000020u;
}
void QueryHoldRsp::clear_has_totalvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
void QueryHoldRsp::clear_totalvalue() {
  totalvalue_ = GOOGLE_LONGLONG(0);
  clear_has_totalvalue();
}
 ::google::protobuf::int64 QueryHoldRsp::totalvalue() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryHoldRsp.TotalValue)
  return totalvalue_;
}
 void QueryHoldRsp::set_totalvalue(::google::protobuf::int64 value) {
  set_has_totalvalue();
  totalvalue_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QueryHoldRsp.TotalValue)
}

// optional int64 TotalCapital = 7;
bool QueryHoldRsp::has_totalcapital() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void QueryHoldRsp::set_has_totalcapital() {
  _has_bits_[0] |= 0x00000040u;
}
void QueryHoldRsp::clear_has_totalcapital() {
  _has_bits_[0] &= ~0x00000040u;
}
void QueryHoldRsp::clear_totalcapital() {
  totalcapital_ = GOOGLE_LONGLONG(0);
  clear_has_totalcapital();
}
 ::google::protobuf::int64 QueryHoldRsp::totalcapital() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryHoldRsp.TotalCapital)
  return totalcapital_;
}
 void QueryHoldRsp::set_totalcapital(::google::protobuf::int64 value) {
  set_has_totalcapital();
  totalcapital_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QueryHoldRsp.TotalCapital)
}

// optional int64 TotalProfit = 8;
bool QueryHoldRsp::has_totalprofit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void QueryHoldRsp::set_has_totalprofit() {
  _has_bits_[0] |= 0x00000080u;
}
void QueryHoldRsp::clear_has_totalprofit() {
  _has_bits_[0] &= ~0x00000080u;
}
void QueryHoldRsp::clear_totalprofit() {
  totalprofit_ = GOOGLE_LONGLONG(0);
  clear_has_totalprofit();
}
 ::google::protobuf::int64 QueryHoldRsp::totalprofit() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryHoldRsp.TotalProfit)
  return totalprofit_;
}
 void QueryHoldRsp::set_totalprofit(::google::protobuf::int64 value) {
  set_has_totalprofit();
  totalprofit_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QueryHoldRsp.TotalProfit)
}

// repeated .dzhyun.HoldItem HoldList = 9;
int QueryHoldRsp::holdlist_size() const {
  return holdlist_.size();
}
void QueryHoldRsp::clear_holdlist() {
  holdlist_.Clear();
}
const ::dzhyun::HoldItem& QueryHoldRsp::holdlist(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryHoldRsp.HoldList)
  return holdlist_.Get(index);
}
::dzhyun::HoldItem* QueryHoldRsp::mutable_holdlist(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QueryHoldRsp.HoldList)
  return holdlist_.Mutable(index);
}
::dzhyun::HoldItem* QueryHoldRsp::add_holdlist() {
  // @@protoc_insertion_point(field_add:dzhyun.QueryHoldRsp.HoldList)
  return holdlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::HoldItem >*
QueryHoldRsp::mutable_holdlist() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QueryHoldRsp.HoldList)
  return &holdlist_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::HoldItem >&
QueryHoldRsp::holdlist() const {
  // @@protoc_insertion_point(field_list:dzhyun.QueryHoldRsp.HoldList)
  return holdlist_;
}

// optional string CapitalId = 10;
bool QueryHoldRsp::has_capitalid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void QueryHoldRsp::set_has_capitalid() {
  _has_bits_[0] |= 0x00000200u;
}
void QueryHoldRsp::clear_has_capitalid() {
  _has_bits_[0] &= ~0x00000200u;
}
void QueryHoldRsp::clear_capitalid() {
  capitalid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_capitalid();
}
 const ::std::string& QueryHoldRsp::capitalid() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryHoldRsp.CapitalId)
  return capitalid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryHoldRsp::set_capitalid(const ::std::string& value) {
  set_has_capitalid();
  capitalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QueryHoldRsp.CapitalId)
}
 void QueryHoldRsp::set_capitalid(const char* value) {
  set_has_capitalid();
  capitalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QueryHoldRsp.CapitalId)
}
 void QueryHoldRsp::set_capitalid(const char* value, size_t size) {
  set_has_capitalid();
  capitalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QueryHoldRsp.CapitalId)
}
 ::std::string* QueryHoldRsp::mutable_capitalid() {
  set_has_capitalid();
  // @@protoc_insertion_point(field_mutable:dzhyun.QueryHoldRsp.CapitalId)
  return capitalid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QueryHoldRsp::release_capitalid() {
  // @@protoc_insertion_point(field_release:dzhyun.QueryHoldRsp.CapitalId)
  clear_has_capitalid();
  return capitalid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryHoldRsp::set_allocated_capitalid(::std::string* capitalid) {
  if (capitalid != NULL) {
    set_has_capitalid();
  } else {
    clear_has_capitalid();
  }
  capitalid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), capitalid);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QueryHoldRsp.CapitalId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderItem::kOrderNoFieldNumber;
const int OrderItem::kOrderTimeFieldNumber;
const int OrderItem::kProductCodeFieldNumber;
const int OrderItem::kProductNameFieldNumber;
const int OrderItem::kBuyOrSellFieldNumber;
const int OrderItem::kOpenOrCloseFieldNumber;
const int OrderItem::kOrderTypeFieldNumber;
const int OrderItem::kOrderAmountFieldNumber;
const int OrderItem::kOrderPriceFieldNumber;
const int OrderItem::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderItem::OrderItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.OrderItem)
}

void OrderItem::InitAsDefaultInstance() {
}

OrderItem::OrderItem(const OrderItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.OrderItem)
}

void OrderItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  orderno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ordertime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buyorsell_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openorclose_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ordertype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orderamount_ = GOOGLE_LONGLONG(0);
  orderprice_ = GOOGLE_LONGLONG(0);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrderItem::~OrderItem() {
  // @@protoc_insertion_point(destructor:dzhyun.OrderItem)
  SharedDtor();
}

void OrderItem::SharedDtor() {
  orderno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ordertime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buyorsell_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openorclose_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ordertype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void OrderItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderItem_descriptor_;
}

const OrderItem& OrderItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2ecounter_2eproto();
  return *default_instance_;
}

OrderItem* OrderItem::default_instance_ = NULL;

OrderItem* OrderItem::New(::google::protobuf::Arena* arena) const {
  OrderItem* n = new OrderItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderItem::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.OrderItem)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_orderno()) {
      orderno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_ordertime()) {
      ordertime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_productcode()) {
      productcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_productname()) {
      productname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_buyorsell()) {
      buyorsell_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_openorclose()) {
      openorclose_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_ordertype()) {
      ordertype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    orderamount_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & 768u) {
    orderprice_ = GOOGLE_LONGLONG(0);
    if (has_status()) {
      status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OrderItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.OrderItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string OrderNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orderno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orderno().data(), this->orderno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.OrderItem.OrderNo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_OrderTime;
        break;
      }

      // optional string OrderTime = 2;
      case 2: {
        if (tag == 18) {
         parse_OrderTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ordertime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ordertime().data(), this->ordertime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.OrderItem.OrderTime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ProductCode;
        break;
      }

      // optional string ProductCode = 3;
      case 3: {
        if (tag == 26) {
         parse_ProductCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->productcode().data(), this->productcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.OrderItem.ProductCode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ProductName;
        break;
      }

      // optional string ProductName = 4;
      case 4: {
        if (tag == 34) {
         parse_ProductName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->productname().data(), this->productname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.OrderItem.ProductName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_BuyOrSell;
        break;
      }

      // optional string BuyOrSell = 5;
      case 5: {
        if (tag == 42) {
         parse_BuyOrSell:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buyorsell()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->buyorsell().data(), this->buyorsell().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.OrderItem.BuyOrSell");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_OpenOrClose;
        break;
      }

      // optional string OpenOrClose = 6;
      case 6: {
        if (tag == 50) {
         parse_OpenOrClose:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_openorclose()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->openorclose().data(), this->openorclose().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.OrderItem.OpenOrClose");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_OrderType;
        break;
      }

      // optional string OrderType = 7;
      case 7: {
        if (tag == 58) {
         parse_OrderType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ordertype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ordertype().data(), this->ordertype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.OrderItem.OrderType");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_OrderAmount;
        break;
      }

      // optional int64 OrderAmount = 8;
      case 8: {
        if (tag == 64) {
         parse_OrderAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderamount_)));
          set_has_orderamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_OrderPrice;
        break;
      }

      // optional int64 OrderPrice = 9;
      case 9: {
        if (tag == 72) {
         parse_OrderPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderprice_)));
          set_has_orderprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_Status;
        break;
      }

      // optional string Status = 10;
      case 10: {
        if (tag == 82) {
         parse_Status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status().data(), this->status().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.OrderItem.Status");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.OrderItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.OrderItem)
  return false;
#undef DO_
}

void OrderItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.OrderItem)
  // required string OrderNo = 1;
  if (has_orderno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderno().data(), this->orderno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.OrderNo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->orderno(), output);
  }

  // optional string OrderTime = 2;
  if (has_ordertime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ordertime().data(), this->ordertime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.OrderTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ordertime(), output);
  }

  // optional string ProductCode = 3;
  if (has_productcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productcode().data(), this->productcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.ProductCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->productcode(), output);
  }

  // optional string ProductName = 4;
  if (has_productname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productname().data(), this->productname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.ProductName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->productname(), output);
  }

  // optional string BuyOrSell = 5;
  if (has_buyorsell()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->buyorsell().data(), this->buyorsell().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.BuyOrSell");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->buyorsell(), output);
  }

  // optional string OpenOrClose = 6;
  if (has_openorclose()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->openorclose().data(), this->openorclose().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.OpenOrClose");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->openorclose(), output);
  }

  // optional string OrderType = 7;
  if (has_ordertype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ordertype().data(), this->ordertype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.OrderType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->ordertype(), output);
  }

  // optional int64 OrderAmount = 8;
  if (has_orderamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->orderamount(), output);
  }

  // optional int64 OrderPrice = 9;
  if (has_orderprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->orderprice(), output);
  }

  // optional string Status = 10;
  if (has_status()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.Status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.OrderItem)
}

::google::protobuf::uint8* OrderItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.OrderItem)
  // required string OrderNo = 1;
  if (has_orderno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderno().data(), this->orderno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.OrderNo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->orderno(), target);
  }

  // optional string OrderTime = 2;
  if (has_ordertime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ordertime().data(), this->ordertime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.OrderTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ordertime(), target);
  }

  // optional string ProductCode = 3;
  if (has_productcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productcode().data(), this->productcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.ProductCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->productcode(), target);
  }

  // optional string ProductName = 4;
  if (has_productname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productname().data(), this->productname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.ProductName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->productname(), target);
  }

  // optional string BuyOrSell = 5;
  if (has_buyorsell()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->buyorsell().data(), this->buyorsell().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.BuyOrSell");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->buyorsell(), target);
  }

  // optional string OpenOrClose = 6;
  if (has_openorclose()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->openorclose().data(), this->openorclose().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.OpenOrClose");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->openorclose(), target);
  }

  // optional string OrderType = 7;
  if (has_ordertype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ordertype().data(), this->ordertype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.OrderType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->ordertype(), target);
  }

  // optional int64 OrderAmount = 8;
  if (has_orderamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->orderamount(), target);
  }

  // optional int64 OrderPrice = 9;
  if (has_orderprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->orderprice(), target);
  }

  // optional string Status = 10;
  if (has_status()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.OrderItem.Status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.OrderItem)
  return target;
}

int OrderItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.OrderItem)
  int total_size = 0;

  // required string OrderNo = 1;
  if (has_orderno()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->orderno());
  }
  if (_has_bits_[1 / 32] & 254u) {
    // optional string OrderTime = 2;
    if (has_ordertime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ordertime());
    }

    // optional string ProductCode = 3;
    if (has_productcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productcode());
    }

    // optional string ProductName = 4;
    if (has_productname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productname());
    }

    // optional string BuyOrSell = 5;
    if (has_buyorsell()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->buyorsell());
    }

    // optional string OpenOrClose = 6;
    if (has_openorclose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->openorclose());
    }

    // optional string OrderType = 7;
    if (has_ordertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ordertype());
    }

    // optional int64 OrderAmount = 8;
    if (has_orderamount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->orderamount());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int64 OrderPrice = 9;
    if (has_orderprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->orderprice());
    }

    // optional string Status = 10;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->status());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.OrderItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OrderItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.OrderItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.OrderItem)
    MergeFrom(*source);
  }
}

void OrderItem::MergeFrom(const OrderItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.OrderItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderno()) {
      set_has_orderno();
      orderno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orderno_);
    }
    if (from.has_ordertime()) {
      set_has_ordertime();
      ordertime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ordertime_);
    }
    if (from.has_productcode()) {
      set_has_productcode();
      productcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productcode_);
    }
    if (from.has_productname()) {
      set_has_productname();
      productname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productname_);
    }
    if (from.has_buyorsell()) {
      set_has_buyorsell();
      buyorsell_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buyorsell_);
    }
    if (from.has_openorclose()) {
      set_has_openorclose();
      openorclose_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.openorclose_);
    }
    if (from.has_ordertype()) {
      set_has_ordertype();
      ordertype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ordertype_);
    }
    if (from.has_orderamount()) {
      set_orderamount(from.orderamount());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_orderprice()) {
      set_orderprice(from.orderprice());
    }
    if (from.has_status()) {
      set_has_status();
      status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void OrderItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.OrderItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderItem::CopyFrom(const OrderItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.OrderItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void OrderItem::Swap(OrderItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderItem::InternalSwap(OrderItem* other) {
  orderno_.Swap(&other->orderno_);
  ordertime_.Swap(&other->ordertime_);
  productcode_.Swap(&other->productcode_);
  productname_.Swap(&other->productname_);
  buyorsell_.Swap(&other->buyorsell_);
  openorclose_.Swap(&other->openorclose_);
  ordertype_.Swap(&other->ordertype_);
  std::swap(orderamount_, other->orderamount_);
  std::swap(orderprice_, other->orderprice_);
  status_.Swap(&other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderItem_descriptor_;
  metadata.reflection = OrderItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderItem

// required string OrderNo = 1;
bool OrderItem::has_orderno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OrderItem::set_has_orderno() {
  _has_bits_[0] |= 0x00000001u;
}
void OrderItem::clear_has_orderno() {
  _has_bits_[0] &= ~0x00000001u;
}
void OrderItem::clear_orderno() {
  orderno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orderno();
}
 const ::std::string& OrderItem::orderno() const {
  // @@protoc_insertion_point(field_get:dzhyun.OrderItem.OrderNo)
  return orderno_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_orderno(const ::std::string& value) {
  set_has_orderno();
  orderno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.OrderItem.OrderNo)
}
 void OrderItem::set_orderno(const char* value) {
  set_has_orderno();
  orderno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.OrderItem.OrderNo)
}
 void OrderItem::set_orderno(const char* value, size_t size) {
  set_has_orderno();
  orderno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.OrderItem.OrderNo)
}
 ::std::string* OrderItem::mutable_orderno() {
  set_has_orderno();
  // @@protoc_insertion_point(field_mutable:dzhyun.OrderItem.OrderNo)
  return orderno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OrderItem::release_orderno() {
  // @@protoc_insertion_point(field_release:dzhyun.OrderItem.OrderNo)
  clear_has_orderno();
  return orderno_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_allocated_orderno(::std::string* orderno) {
  if (orderno != NULL) {
    set_has_orderno();
  } else {
    clear_has_orderno();
  }
  orderno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orderno);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.OrderItem.OrderNo)
}

// optional string OrderTime = 2;
bool OrderItem::has_ordertime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OrderItem::set_has_ordertime() {
  _has_bits_[0] |= 0x00000002u;
}
void OrderItem::clear_has_ordertime() {
  _has_bits_[0] &= ~0x00000002u;
}
void OrderItem::clear_ordertime() {
  ordertime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ordertime();
}
 const ::std::string& OrderItem::ordertime() const {
  // @@protoc_insertion_point(field_get:dzhyun.OrderItem.OrderTime)
  return ordertime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_ordertime(const ::std::string& value) {
  set_has_ordertime();
  ordertime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.OrderItem.OrderTime)
}
 void OrderItem::set_ordertime(const char* value) {
  set_has_ordertime();
  ordertime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.OrderItem.OrderTime)
}
 void OrderItem::set_ordertime(const char* value, size_t size) {
  set_has_ordertime();
  ordertime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.OrderItem.OrderTime)
}
 ::std::string* OrderItem::mutable_ordertime() {
  set_has_ordertime();
  // @@protoc_insertion_point(field_mutable:dzhyun.OrderItem.OrderTime)
  return ordertime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OrderItem::release_ordertime() {
  // @@protoc_insertion_point(field_release:dzhyun.OrderItem.OrderTime)
  clear_has_ordertime();
  return ordertime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_allocated_ordertime(::std::string* ordertime) {
  if (ordertime != NULL) {
    set_has_ordertime();
  } else {
    clear_has_ordertime();
  }
  ordertime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordertime);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.OrderItem.OrderTime)
}

// optional string ProductCode = 3;
bool OrderItem::has_productcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OrderItem::set_has_productcode() {
  _has_bits_[0] |= 0x00000004u;
}
void OrderItem::clear_has_productcode() {
  _has_bits_[0] &= ~0x00000004u;
}
void OrderItem::clear_productcode() {
  productcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productcode();
}
 const ::std::string& OrderItem::productcode() const {
  // @@protoc_insertion_point(field_get:dzhyun.OrderItem.ProductCode)
  return productcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_productcode(const ::std::string& value) {
  set_has_productcode();
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.OrderItem.ProductCode)
}
 void OrderItem::set_productcode(const char* value) {
  set_has_productcode();
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.OrderItem.ProductCode)
}
 void OrderItem::set_productcode(const char* value, size_t size) {
  set_has_productcode();
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.OrderItem.ProductCode)
}
 ::std::string* OrderItem::mutable_productcode() {
  set_has_productcode();
  // @@protoc_insertion_point(field_mutable:dzhyun.OrderItem.ProductCode)
  return productcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OrderItem::release_productcode() {
  // @@protoc_insertion_point(field_release:dzhyun.OrderItem.ProductCode)
  clear_has_productcode();
  return productcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_allocated_productcode(::std::string* productcode) {
  if (productcode != NULL) {
    set_has_productcode();
  } else {
    clear_has_productcode();
  }
  productcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productcode);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.OrderItem.ProductCode)
}

// optional string ProductName = 4;
bool OrderItem::has_productname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OrderItem::set_has_productname() {
  _has_bits_[0] |= 0x00000008u;
}
void OrderItem::clear_has_productname() {
  _has_bits_[0] &= ~0x00000008u;
}
void OrderItem::clear_productname() {
  productname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productname();
}
 const ::std::string& OrderItem::productname() const {
  // @@protoc_insertion_point(field_get:dzhyun.OrderItem.ProductName)
  return productname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_productname(const ::std::string& value) {
  set_has_productname();
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.OrderItem.ProductName)
}
 void OrderItem::set_productname(const char* value) {
  set_has_productname();
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.OrderItem.ProductName)
}
 void OrderItem::set_productname(const char* value, size_t size) {
  set_has_productname();
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.OrderItem.ProductName)
}
 ::std::string* OrderItem::mutable_productname() {
  set_has_productname();
  // @@protoc_insertion_point(field_mutable:dzhyun.OrderItem.ProductName)
  return productname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OrderItem::release_productname() {
  // @@protoc_insertion_point(field_release:dzhyun.OrderItem.ProductName)
  clear_has_productname();
  return productname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_allocated_productname(::std::string* productname) {
  if (productname != NULL) {
    set_has_productname();
  } else {
    clear_has_productname();
  }
  productname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productname);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.OrderItem.ProductName)
}

// optional string BuyOrSell = 5;
bool OrderItem::has_buyorsell() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OrderItem::set_has_buyorsell() {
  _has_bits_[0] |= 0x00000010u;
}
void OrderItem::clear_has_buyorsell() {
  _has_bits_[0] &= ~0x00000010u;
}
void OrderItem::clear_buyorsell() {
  buyorsell_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buyorsell();
}
 const ::std::string& OrderItem::buyorsell() const {
  // @@protoc_insertion_point(field_get:dzhyun.OrderItem.BuyOrSell)
  return buyorsell_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_buyorsell(const ::std::string& value) {
  set_has_buyorsell();
  buyorsell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.OrderItem.BuyOrSell)
}
 void OrderItem::set_buyorsell(const char* value) {
  set_has_buyorsell();
  buyorsell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.OrderItem.BuyOrSell)
}
 void OrderItem::set_buyorsell(const char* value, size_t size) {
  set_has_buyorsell();
  buyorsell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.OrderItem.BuyOrSell)
}
 ::std::string* OrderItem::mutable_buyorsell() {
  set_has_buyorsell();
  // @@protoc_insertion_point(field_mutable:dzhyun.OrderItem.BuyOrSell)
  return buyorsell_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OrderItem::release_buyorsell() {
  // @@protoc_insertion_point(field_release:dzhyun.OrderItem.BuyOrSell)
  clear_has_buyorsell();
  return buyorsell_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_allocated_buyorsell(::std::string* buyorsell) {
  if (buyorsell != NULL) {
    set_has_buyorsell();
  } else {
    clear_has_buyorsell();
  }
  buyorsell_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buyorsell);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.OrderItem.BuyOrSell)
}

// optional string OpenOrClose = 6;
bool OrderItem::has_openorclose() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void OrderItem::set_has_openorclose() {
  _has_bits_[0] |= 0x00000020u;
}
void OrderItem::clear_has_openorclose() {
  _has_bits_[0] &= ~0x00000020u;
}
void OrderItem::clear_openorclose() {
  openorclose_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openorclose();
}
 const ::std::string& OrderItem::openorclose() const {
  // @@protoc_insertion_point(field_get:dzhyun.OrderItem.OpenOrClose)
  return openorclose_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_openorclose(const ::std::string& value) {
  set_has_openorclose();
  openorclose_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.OrderItem.OpenOrClose)
}
 void OrderItem::set_openorclose(const char* value) {
  set_has_openorclose();
  openorclose_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.OrderItem.OpenOrClose)
}
 void OrderItem::set_openorclose(const char* value, size_t size) {
  set_has_openorclose();
  openorclose_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.OrderItem.OpenOrClose)
}
 ::std::string* OrderItem::mutable_openorclose() {
  set_has_openorclose();
  // @@protoc_insertion_point(field_mutable:dzhyun.OrderItem.OpenOrClose)
  return openorclose_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OrderItem::release_openorclose() {
  // @@protoc_insertion_point(field_release:dzhyun.OrderItem.OpenOrClose)
  clear_has_openorclose();
  return openorclose_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_allocated_openorclose(::std::string* openorclose) {
  if (openorclose != NULL) {
    set_has_openorclose();
  } else {
    clear_has_openorclose();
  }
  openorclose_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openorclose);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.OrderItem.OpenOrClose)
}

// optional string OrderType = 7;
bool OrderItem::has_ordertype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void OrderItem::set_has_ordertype() {
  _has_bits_[0] |= 0x00000040u;
}
void OrderItem::clear_has_ordertype() {
  _has_bits_[0] &= ~0x00000040u;
}
void OrderItem::clear_ordertype() {
  ordertype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ordertype();
}
 const ::std::string& OrderItem::ordertype() const {
  // @@protoc_insertion_point(field_get:dzhyun.OrderItem.OrderType)
  return ordertype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_ordertype(const ::std::string& value) {
  set_has_ordertype();
  ordertype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.OrderItem.OrderType)
}
 void OrderItem::set_ordertype(const char* value) {
  set_has_ordertype();
  ordertype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.OrderItem.OrderType)
}
 void OrderItem::set_ordertype(const char* value, size_t size) {
  set_has_ordertype();
  ordertype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.OrderItem.OrderType)
}
 ::std::string* OrderItem::mutable_ordertype() {
  set_has_ordertype();
  // @@protoc_insertion_point(field_mutable:dzhyun.OrderItem.OrderType)
  return ordertype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OrderItem::release_ordertype() {
  // @@protoc_insertion_point(field_release:dzhyun.OrderItem.OrderType)
  clear_has_ordertype();
  return ordertype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_allocated_ordertype(::std::string* ordertype) {
  if (ordertype != NULL) {
    set_has_ordertype();
  } else {
    clear_has_ordertype();
  }
  ordertype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordertype);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.OrderItem.OrderType)
}

// optional int64 OrderAmount = 8;
bool OrderItem::has_orderamount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void OrderItem::set_has_orderamount() {
  _has_bits_[0] |= 0x00000080u;
}
void OrderItem::clear_has_orderamount() {
  _has_bits_[0] &= ~0x00000080u;
}
void OrderItem::clear_orderamount() {
  orderamount_ = GOOGLE_LONGLONG(0);
  clear_has_orderamount();
}
 ::google::protobuf::int64 OrderItem::orderamount() const {
  // @@protoc_insertion_point(field_get:dzhyun.OrderItem.OrderAmount)
  return orderamount_;
}
 void OrderItem::set_orderamount(::google::protobuf::int64 value) {
  set_has_orderamount();
  orderamount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.OrderItem.OrderAmount)
}

// optional int64 OrderPrice = 9;
bool OrderItem::has_orderprice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void OrderItem::set_has_orderprice() {
  _has_bits_[0] |= 0x00000100u;
}
void OrderItem::clear_has_orderprice() {
  _has_bits_[0] &= ~0x00000100u;
}
void OrderItem::clear_orderprice() {
  orderprice_ = GOOGLE_LONGLONG(0);
  clear_has_orderprice();
}
 ::google::protobuf::int64 OrderItem::orderprice() const {
  // @@protoc_insertion_point(field_get:dzhyun.OrderItem.OrderPrice)
  return orderprice_;
}
 void OrderItem::set_orderprice(::google::protobuf::int64 value) {
  set_has_orderprice();
  orderprice_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.OrderItem.OrderPrice)
}

// optional string Status = 10;
bool OrderItem::has_status() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void OrderItem::set_has_status() {
  _has_bits_[0] |= 0x00000200u;
}
void OrderItem::clear_has_status() {
  _has_bits_[0] &= ~0x00000200u;
}
void OrderItem::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_status();
}
 const ::std::string& OrderItem::status() const {
  // @@protoc_insertion_point(field_get:dzhyun.OrderItem.Status)
  return status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_status(const ::std::string& value) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.OrderItem.Status)
}
 void OrderItem::set_status(const char* value) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.OrderItem.Status)
}
 void OrderItem::set_status(const char* value, size_t size) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.OrderItem.Status)
}
 ::std::string* OrderItem::mutable_status() {
  set_has_status();
  // @@protoc_insertion_point(field_mutable:dzhyun.OrderItem.Status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OrderItem::release_status() {
  // @@protoc_insertion_point(field_release:dzhyun.OrderItem.Status)
  clear_has_status();
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderItem::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    set_has_status();
  } else {
    clear_has_status();
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.OrderItem.Status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryOrderRsp::kRspNoFieldNumber;
const int QueryOrderRsp::kRspDescFieldNumber;
const int QueryOrderRsp::kOrderListFieldNumber;
const int QueryOrderRsp::kCapitalIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryOrderRsp::QueryOrderRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QueryOrderRsp)
}

void QueryOrderRsp::InitAsDefaultInstance() {
}

QueryOrderRsp::QueryOrderRsp(const QueryOrderRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QueryOrderRsp)
}

void QueryOrderRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rspno_ = GOOGLE_LONGLONG(0);
  rspdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  capitalid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryOrderRsp::~QueryOrderRsp() {
  // @@protoc_insertion_point(destructor:dzhyun.QueryOrderRsp)
  SharedDtor();
}

void QueryOrderRsp::SharedDtor() {
  rspdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  capitalid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QueryOrderRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryOrderRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryOrderRsp_descriptor_;
}

const QueryOrderRsp& QueryOrderRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2ecounter_2eproto();
  return *default_instance_;
}

QueryOrderRsp* QueryOrderRsp::default_instance_ = NULL;

QueryOrderRsp* QueryOrderRsp::New(::google::protobuf::Arena* arena) const {
  QueryOrderRsp* n = new QueryOrderRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryOrderRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QueryOrderRsp)
  if (_has_bits_[0 / 32] & 11u) {
    rspno_ = GOOGLE_LONGLONG(0);
    if (has_rspdesc()) {
      rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_capitalid()) {
      capitalid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  orderlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryOrderRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QueryOrderRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 RspNo = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rspno_)));
          set_has_rspno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RspDesc;
        break;
      }

      // optional string RspDesc = 2;
      case 2: {
        if (tag == 18) {
         parse_RspDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rspdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rspdesc().data(), this->rspdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QueryOrderRsp.RspDesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_OrderList;
        break;
      }

      // repeated .dzhyun.OrderItem OrderList = 3;
      case 3: {
        if (tag == 26) {
         parse_OrderList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_OrderList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_orderlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_OrderList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_CapitalId;
        break;
      }

      // optional string CapitalId = 4;
      case 4: {
        if (tag == 34) {
         parse_CapitalId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_capitalid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->capitalid().data(), this->capitalid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QueryOrderRsp.CapitalId");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QueryOrderRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QueryOrderRsp)
  return false;
#undef DO_
}

void QueryOrderRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QueryOrderRsp)
  // required int64 RspNo = 1;
  if (has_rspno()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->rspno(), output);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QueryOrderRsp.RspDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rspdesc(), output);
  }

  // repeated .dzhyun.OrderItem OrderList = 3;
  for (unsigned int i = 0, n = this->orderlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->orderlist(i), output);
  }

  // optional string CapitalId = 4;
  if (has_capitalid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->capitalid().data(), this->capitalid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QueryOrderRsp.CapitalId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->capitalid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QueryOrderRsp)
}

::google::protobuf::uint8* QueryOrderRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QueryOrderRsp)
  // required int64 RspNo = 1;
  if (has_rspno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->rspno(), target);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QueryOrderRsp.RspDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rspdesc(), target);
  }

  // repeated .dzhyun.OrderItem OrderList = 3;
  for (unsigned int i = 0, n = this->orderlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->orderlist(i), target);
  }

  // optional string CapitalId = 4;
  if (has_capitalid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->capitalid().data(), this->capitalid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QueryOrderRsp.CapitalId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->capitalid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QueryOrderRsp)
  return target;
}

int QueryOrderRsp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QueryOrderRsp)
  int total_size = 0;

  // required int64 RspNo = 1;
  if (has_rspno()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rspno());
  }
  if (_has_bits_[1 / 32] & 10u) {
    // optional string RspDesc = 2;
    if (has_rspdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rspdesc());
    }

    // optional string CapitalId = 4;
    if (has_capitalid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->capitalid());
    }

  }
  // repeated .dzhyun.OrderItem OrderList = 3;
  total_size += 1 * this->orderlist_size();
  for (int i = 0; i < this->orderlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->orderlist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryOrderRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QueryOrderRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryOrderRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryOrderRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QueryOrderRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QueryOrderRsp)
    MergeFrom(*source);
  }
}

void QueryOrderRsp::MergeFrom(const QueryOrderRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QueryOrderRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  orderlist_.MergeFrom(from.orderlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rspno()) {
      set_rspno(from.rspno());
    }
    if (from.has_rspdesc()) {
      set_has_rspdesc();
      rspdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rspdesc_);
    }
    if (from.has_capitalid()) {
      set_has_capitalid();
      capitalid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.capitalid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryOrderRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QueryOrderRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryOrderRsp::CopyFrom(const QueryOrderRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QueryOrderRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryOrderRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->orderlist())) return false;
  return true;
}

void QueryOrderRsp::Swap(QueryOrderRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryOrderRsp::InternalSwap(QueryOrderRsp* other) {
  std::swap(rspno_, other->rspno_);
  rspdesc_.Swap(&other->rspdesc_);
  orderlist_.UnsafeArenaSwap(&other->orderlist_);
  capitalid_.Swap(&other->capitalid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryOrderRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryOrderRsp_descriptor_;
  metadata.reflection = QueryOrderRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryOrderRsp

// required int64 RspNo = 1;
bool QueryOrderRsp::has_rspno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryOrderRsp::set_has_rspno() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryOrderRsp::clear_has_rspno() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryOrderRsp::clear_rspno() {
  rspno_ = GOOGLE_LONGLONG(0);
  clear_has_rspno();
}
 ::google::protobuf::int64 QueryOrderRsp::rspno() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryOrderRsp.RspNo)
  return rspno_;
}
 void QueryOrderRsp::set_rspno(::google::protobuf::int64 value) {
  set_has_rspno();
  rspno_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QueryOrderRsp.RspNo)
}

// optional string RspDesc = 2;
bool QueryOrderRsp::has_rspdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryOrderRsp::set_has_rspdesc() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryOrderRsp::clear_has_rspdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryOrderRsp::clear_rspdesc() {
  rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rspdesc();
}
 const ::std::string& QueryOrderRsp::rspdesc() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryOrderRsp.RspDesc)
  return rspdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryOrderRsp::set_rspdesc(const ::std::string& value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QueryOrderRsp.RspDesc)
}
 void QueryOrderRsp::set_rspdesc(const char* value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QueryOrderRsp.RspDesc)
}
 void QueryOrderRsp::set_rspdesc(const char* value, size_t size) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QueryOrderRsp.RspDesc)
}
 ::std::string* QueryOrderRsp::mutable_rspdesc() {
  set_has_rspdesc();
  // @@protoc_insertion_point(field_mutable:dzhyun.QueryOrderRsp.RspDesc)
  return rspdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QueryOrderRsp::release_rspdesc() {
  // @@protoc_insertion_point(field_release:dzhyun.QueryOrderRsp.RspDesc)
  clear_has_rspdesc();
  return rspdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryOrderRsp::set_allocated_rspdesc(::std::string* rspdesc) {
  if (rspdesc != NULL) {
    set_has_rspdesc();
  } else {
    clear_has_rspdesc();
  }
  rspdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rspdesc);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QueryOrderRsp.RspDesc)
}

// repeated .dzhyun.OrderItem OrderList = 3;
int QueryOrderRsp::orderlist_size() const {
  return orderlist_.size();
}
void QueryOrderRsp::clear_orderlist() {
  orderlist_.Clear();
}
const ::dzhyun::OrderItem& QueryOrderRsp::orderlist(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryOrderRsp.OrderList)
  return orderlist_.Get(index);
}
::dzhyun::OrderItem* QueryOrderRsp::mutable_orderlist(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QueryOrderRsp.OrderList)
  return orderlist_.Mutable(index);
}
::dzhyun::OrderItem* QueryOrderRsp::add_orderlist() {
  // @@protoc_insertion_point(field_add:dzhyun.QueryOrderRsp.OrderList)
  return orderlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::OrderItem >*
QueryOrderRsp::mutable_orderlist() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QueryOrderRsp.OrderList)
  return &orderlist_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::OrderItem >&
QueryOrderRsp::orderlist() const {
  // @@protoc_insertion_point(field_list:dzhyun.QueryOrderRsp.OrderList)
  return orderlist_;
}

// optional string CapitalId = 4;
bool QueryOrderRsp::has_capitalid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QueryOrderRsp::set_has_capitalid() {
  _has_bits_[0] |= 0x00000008u;
}
void QueryOrderRsp::clear_has_capitalid() {
  _has_bits_[0] &= ~0x00000008u;
}
void QueryOrderRsp::clear_capitalid() {
  capitalid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_capitalid();
}
 const ::std::string& QueryOrderRsp::capitalid() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryOrderRsp.CapitalId)
  return capitalid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryOrderRsp::set_capitalid(const ::std::string& value) {
  set_has_capitalid();
  capitalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QueryOrderRsp.CapitalId)
}
 void QueryOrderRsp::set_capitalid(const char* value) {
  set_has_capitalid();
  capitalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QueryOrderRsp.CapitalId)
}
 void QueryOrderRsp::set_capitalid(const char* value, size_t size) {
  set_has_capitalid();
  capitalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QueryOrderRsp.CapitalId)
}
 ::std::string* QueryOrderRsp::mutable_capitalid() {
  set_has_capitalid();
  // @@protoc_insertion_point(field_mutable:dzhyun.QueryOrderRsp.CapitalId)
  return capitalid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QueryOrderRsp::release_capitalid() {
  // @@protoc_insertion_point(field_release:dzhyun.QueryOrderRsp.CapitalId)
  clear_has_capitalid();
  return capitalid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryOrderRsp::set_allocated_capitalid(::std::string* capitalid) {
  if (capitalid != NULL) {
    set_has_capitalid();
  } else {
    clear_has_capitalid();
  }
  capitalid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), capitalid);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QueryOrderRsp.CapitalId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DealItem::kDealNoFieldNumber;
const int DealItem::kDealTimeFieldNumber;
const int DealItem::kProductCodeFieldNumber;
const int DealItem::kProductNameFieldNumber;
const int DealItem::kBuyOrSellFieldNumber;
const int DealItem::kOpenOrCloseFieldNumber;
const int DealItem::kDealAmountFieldNumber;
const int DealItem::kDealPriceFieldNumber;
const int DealItem::kFeeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DealItem::DealItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.DealItem)
}

void DealItem::InitAsDefaultInstance() {
}

DealItem::DealItem(const DealItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.DealItem)
}

void DealItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dealno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dealtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buyorsell_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openorclose_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dealamount_ = GOOGLE_LONGLONG(0);
  dealprice_ = GOOGLE_LONGLONG(0);
  fee_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DealItem::~DealItem() {
  // @@protoc_insertion_point(destructor:dzhyun.DealItem)
  SharedDtor();
}

void DealItem::SharedDtor() {
  dealno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dealtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buyorsell_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openorclose_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DealItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DealItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DealItem_descriptor_;
}

const DealItem& DealItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2ecounter_2eproto();
  return *default_instance_;
}

DealItem* DealItem::default_instance_ = NULL;

DealItem* DealItem::New(::google::protobuf::Arena* arena) const {
  DealItem* n = new DealItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DealItem::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.DealItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DealItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DealItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(dealamount_, dealprice_);
    if (has_dealno()) {
      dealno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_dealtime()) {
      dealtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_productcode()) {
      productcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_productname()) {
      productname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_buyorsell()) {
      buyorsell_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_openorclose()) {
      openorclose_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  fee_ = GOOGLE_LONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DealItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.DealItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string DealNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dealno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dealno().data(), this->dealno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DealItem.DealNo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DealTime;
        break;
      }

      // optional string DealTime = 2;
      case 2: {
        if (tag == 18) {
         parse_DealTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dealtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dealtime().data(), this->dealtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DealItem.DealTime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ProductCode;
        break;
      }

      // optional string ProductCode = 3;
      case 3: {
        if (tag == 26) {
         parse_ProductCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->productcode().data(), this->productcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DealItem.ProductCode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ProductName;
        break;
      }

      // optional string ProductName = 4;
      case 4: {
        if (tag == 34) {
         parse_ProductName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->productname().data(), this->productname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DealItem.ProductName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_BuyOrSell;
        break;
      }

      // optional string BuyOrSell = 5;
      case 5: {
        if (tag == 42) {
         parse_BuyOrSell:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buyorsell()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->buyorsell().data(), this->buyorsell().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DealItem.BuyOrSell");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_OpenOrClose;
        break;
      }

      // optional string OpenOrClose = 6;
      case 6: {
        if (tag == 50) {
         parse_OpenOrClose:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_openorclose()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->openorclose().data(), this->openorclose().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.DealItem.OpenOrClose");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_DealAmount;
        break;
      }

      // optional int64 DealAmount = 7;
      case 7: {
        if (tag == 56) {
         parse_DealAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dealamount_)));
          set_has_dealamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_DealPrice;
        break;
      }

      // optional int64 DealPrice = 8;
      case 8: {
        if (tag == 64) {
         parse_DealPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dealprice_)));
          set_has_dealprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_Fee;
        break;
      }

      // optional int64 Fee = 9;
      case 9: {
        if (tag == 72) {
         parse_Fee:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fee_)));
          set_has_fee();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.DealItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.DealItem)
  return false;
#undef DO_
}

void DealItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.DealItem)
  // required string DealNo = 1;
  if (has_dealno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dealno().data(), this->dealno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DealItem.DealNo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dealno(), output);
  }

  // optional string DealTime = 2;
  if (has_dealtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dealtime().data(), this->dealtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DealItem.DealTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dealtime(), output);
  }

  // optional string ProductCode = 3;
  if (has_productcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productcode().data(), this->productcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DealItem.ProductCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->productcode(), output);
  }

  // optional string ProductName = 4;
  if (has_productname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productname().data(), this->productname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DealItem.ProductName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->productname(), output);
  }

  // optional string BuyOrSell = 5;
  if (has_buyorsell()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->buyorsell().data(), this->buyorsell().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DealItem.BuyOrSell");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->buyorsell(), output);
  }

  // optional string OpenOrClose = 6;
  if (has_openorclose()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->openorclose().data(), this->openorclose().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DealItem.OpenOrClose");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->openorclose(), output);
  }

  // optional int64 DealAmount = 7;
  if (has_dealamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->dealamount(), output);
  }

  // optional int64 DealPrice = 8;
  if (has_dealprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->dealprice(), output);
  }

  // optional int64 Fee = 9;
  if (has_fee()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->fee(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.DealItem)
}

::google::protobuf::uint8* DealItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.DealItem)
  // required string DealNo = 1;
  if (has_dealno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dealno().data(), this->dealno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DealItem.DealNo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dealno(), target);
  }

  // optional string DealTime = 2;
  if (has_dealtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dealtime().data(), this->dealtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DealItem.DealTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dealtime(), target);
  }

  // optional string ProductCode = 3;
  if (has_productcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productcode().data(), this->productcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DealItem.ProductCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->productcode(), target);
  }

  // optional string ProductName = 4;
  if (has_productname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productname().data(), this->productname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DealItem.ProductName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->productname(), target);
  }

  // optional string BuyOrSell = 5;
  if (has_buyorsell()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->buyorsell().data(), this->buyorsell().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DealItem.BuyOrSell");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->buyorsell(), target);
  }

  // optional string OpenOrClose = 6;
  if (has_openorclose()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->openorclose().data(), this->openorclose().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.DealItem.OpenOrClose");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->openorclose(), target);
  }

  // optional int64 DealAmount = 7;
  if (has_dealamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->dealamount(), target);
  }

  // optional int64 DealPrice = 8;
  if (has_dealprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->dealprice(), target);
  }

  // optional int64 Fee = 9;
  if (has_fee()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->fee(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.DealItem)
  return target;
}

int DealItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.DealItem)
  int total_size = 0;

  // required string DealNo = 1;
  if (has_dealno()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dealno());
  }
  if (_has_bits_[1 / 32] & 254u) {
    // optional string DealTime = 2;
    if (has_dealtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dealtime());
    }

    // optional string ProductCode = 3;
    if (has_productcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productcode());
    }

    // optional string ProductName = 4;
    if (has_productname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productname());
    }

    // optional string BuyOrSell = 5;
    if (has_buyorsell()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->buyorsell());
    }

    // optional string OpenOrClose = 6;
    if (has_openorclose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->openorclose());
    }

    // optional int64 DealAmount = 7;
    if (has_dealamount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dealamount());
    }

    // optional int64 DealPrice = 8;
    if (has_dealprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dealprice());
    }

  }
  // optional int64 Fee = 9;
  if (has_fee()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->fee());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DealItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.DealItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DealItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DealItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.DealItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.DealItem)
    MergeFrom(*source);
  }
}

void DealItem::MergeFrom(const DealItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.DealItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dealno()) {
      set_has_dealno();
      dealno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dealno_);
    }
    if (from.has_dealtime()) {
      set_has_dealtime();
      dealtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dealtime_);
    }
    if (from.has_productcode()) {
      set_has_productcode();
      productcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productcode_);
    }
    if (from.has_productname()) {
      set_has_productname();
      productname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productname_);
    }
    if (from.has_buyorsell()) {
      set_has_buyorsell();
      buyorsell_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buyorsell_);
    }
    if (from.has_openorclose()) {
      set_has_openorclose();
      openorclose_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.openorclose_);
    }
    if (from.has_dealamount()) {
      set_dealamount(from.dealamount());
    }
    if (from.has_dealprice()) {
      set_dealprice(from.dealprice());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_fee()) {
      set_fee(from.fee());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DealItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.DealItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DealItem::CopyFrom(const DealItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.DealItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DealItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DealItem::Swap(DealItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DealItem::InternalSwap(DealItem* other) {
  dealno_.Swap(&other->dealno_);
  dealtime_.Swap(&other->dealtime_);
  productcode_.Swap(&other->productcode_);
  productname_.Swap(&other->productname_);
  buyorsell_.Swap(&other->buyorsell_);
  openorclose_.Swap(&other->openorclose_);
  std::swap(dealamount_, other->dealamount_);
  std::swap(dealprice_, other->dealprice_);
  std::swap(fee_, other->fee_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DealItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DealItem_descriptor_;
  metadata.reflection = DealItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DealItem

// required string DealNo = 1;
bool DealItem::has_dealno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DealItem::set_has_dealno() {
  _has_bits_[0] |= 0x00000001u;
}
void DealItem::clear_has_dealno() {
  _has_bits_[0] &= ~0x00000001u;
}
void DealItem::clear_dealno() {
  dealno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dealno();
}
 const ::std::string& DealItem::dealno() const {
  // @@protoc_insertion_point(field_get:dzhyun.DealItem.DealNo)
  return dealno_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DealItem::set_dealno(const ::std::string& value) {
  set_has_dealno();
  dealno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DealItem.DealNo)
}
 void DealItem::set_dealno(const char* value) {
  set_has_dealno();
  dealno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DealItem.DealNo)
}
 void DealItem::set_dealno(const char* value, size_t size) {
  set_has_dealno();
  dealno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DealItem.DealNo)
}
 ::std::string* DealItem::mutable_dealno() {
  set_has_dealno();
  // @@protoc_insertion_point(field_mutable:dzhyun.DealItem.DealNo)
  return dealno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DealItem::release_dealno() {
  // @@protoc_insertion_point(field_release:dzhyun.DealItem.DealNo)
  clear_has_dealno();
  return dealno_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DealItem::set_allocated_dealno(::std::string* dealno) {
  if (dealno != NULL) {
    set_has_dealno();
  } else {
    clear_has_dealno();
  }
  dealno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dealno);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DealItem.DealNo)
}

// optional string DealTime = 2;
bool DealItem::has_dealtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DealItem::set_has_dealtime() {
  _has_bits_[0] |= 0x00000002u;
}
void DealItem::clear_has_dealtime() {
  _has_bits_[0] &= ~0x00000002u;
}
void DealItem::clear_dealtime() {
  dealtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dealtime();
}
 const ::std::string& DealItem::dealtime() const {
  // @@protoc_insertion_point(field_get:dzhyun.DealItem.DealTime)
  return dealtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DealItem::set_dealtime(const ::std::string& value) {
  set_has_dealtime();
  dealtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DealItem.DealTime)
}
 void DealItem::set_dealtime(const char* value) {
  set_has_dealtime();
  dealtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DealItem.DealTime)
}
 void DealItem::set_dealtime(const char* value, size_t size) {
  set_has_dealtime();
  dealtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DealItem.DealTime)
}
 ::std::string* DealItem::mutable_dealtime() {
  set_has_dealtime();
  // @@protoc_insertion_point(field_mutable:dzhyun.DealItem.DealTime)
  return dealtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DealItem::release_dealtime() {
  // @@protoc_insertion_point(field_release:dzhyun.DealItem.DealTime)
  clear_has_dealtime();
  return dealtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DealItem::set_allocated_dealtime(::std::string* dealtime) {
  if (dealtime != NULL) {
    set_has_dealtime();
  } else {
    clear_has_dealtime();
  }
  dealtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dealtime);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DealItem.DealTime)
}

// optional string ProductCode = 3;
bool DealItem::has_productcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DealItem::set_has_productcode() {
  _has_bits_[0] |= 0x00000004u;
}
void DealItem::clear_has_productcode() {
  _has_bits_[0] &= ~0x00000004u;
}
void DealItem::clear_productcode() {
  productcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productcode();
}
 const ::std::string& DealItem::productcode() const {
  // @@protoc_insertion_point(field_get:dzhyun.DealItem.ProductCode)
  return productcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DealItem::set_productcode(const ::std::string& value) {
  set_has_productcode();
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DealItem.ProductCode)
}
 void DealItem::set_productcode(const char* value) {
  set_has_productcode();
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DealItem.ProductCode)
}
 void DealItem::set_productcode(const char* value, size_t size) {
  set_has_productcode();
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DealItem.ProductCode)
}
 ::std::string* DealItem::mutable_productcode() {
  set_has_productcode();
  // @@protoc_insertion_point(field_mutable:dzhyun.DealItem.ProductCode)
  return productcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DealItem::release_productcode() {
  // @@protoc_insertion_point(field_release:dzhyun.DealItem.ProductCode)
  clear_has_productcode();
  return productcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DealItem::set_allocated_productcode(::std::string* productcode) {
  if (productcode != NULL) {
    set_has_productcode();
  } else {
    clear_has_productcode();
  }
  productcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productcode);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DealItem.ProductCode)
}

// optional string ProductName = 4;
bool DealItem::has_productname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DealItem::set_has_productname() {
  _has_bits_[0] |= 0x00000008u;
}
void DealItem::clear_has_productname() {
  _has_bits_[0] &= ~0x00000008u;
}
void DealItem::clear_productname() {
  productname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productname();
}
 const ::std::string& DealItem::productname() const {
  // @@protoc_insertion_point(field_get:dzhyun.DealItem.ProductName)
  return productname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DealItem::set_productname(const ::std::string& value) {
  set_has_productname();
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DealItem.ProductName)
}
 void DealItem::set_productname(const char* value) {
  set_has_productname();
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DealItem.ProductName)
}
 void DealItem::set_productname(const char* value, size_t size) {
  set_has_productname();
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DealItem.ProductName)
}
 ::std::string* DealItem::mutable_productname() {
  set_has_productname();
  // @@protoc_insertion_point(field_mutable:dzhyun.DealItem.ProductName)
  return productname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DealItem::release_productname() {
  // @@protoc_insertion_point(field_release:dzhyun.DealItem.ProductName)
  clear_has_productname();
  return productname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DealItem::set_allocated_productname(::std::string* productname) {
  if (productname != NULL) {
    set_has_productname();
  } else {
    clear_has_productname();
  }
  productname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productname);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DealItem.ProductName)
}

// optional string BuyOrSell = 5;
bool DealItem::has_buyorsell() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DealItem::set_has_buyorsell() {
  _has_bits_[0] |= 0x00000010u;
}
void DealItem::clear_has_buyorsell() {
  _has_bits_[0] &= ~0x00000010u;
}
void DealItem::clear_buyorsell() {
  buyorsell_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buyorsell();
}
 const ::std::string& DealItem::buyorsell() const {
  // @@protoc_insertion_point(field_get:dzhyun.DealItem.BuyOrSell)
  return buyorsell_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DealItem::set_buyorsell(const ::std::string& value) {
  set_has_buyorsell();
  buyorsell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DealItem.BuyOrSell)
}
 void DealItem::set_buyorsell(const char* value) {
  set_has_buyorsell();
  buyorsell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DealItem.BuyOrSell)
}
 void DealItem::set_buyorsell(const char* value, size_t size) {
  set_has_buyorsell();
  buyorsell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DealItem.BuyOrSell)
}
 ::std::string* DealItem::mutable_buyorsell() {
  set_has_buyorsell();
  // @@protoc_insertion_point(field_mutable:dzhyun.DealItem.BuyOrSell)
  return buyorsell_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DealItem::release_buyorsell() {
  // @@protoc_insertion_point(field_release:dzhyun.DealItem.BuyOrSell)
  clear_has_buyorsell();
  return buyorsell_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DealItem::set_allocated_buyorsell(::std::string* buyorsell) {
  if (buyorsell != NULL) {
    set_has_buyorsell();
  } else {
    clear_has_buyorsell();
  }
  buyorsell_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buyorsell);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DealItem.BuyOrSell)
}

// optional string OpenOrClose = 6;
bool DealItem::has_openorclose() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DealItem::set_has_openorclose() {
  _has_bits_[0] |= 0x00000020u;
}
void DealItem::clear_has_openorclose() {
  _has_bits_[0] &= ~0x00000020u;
}
void DealItem::clear_openorclose() {
  openorclose_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openorclose();
}
 const ::std::string& DealItem::openorclose() const {
  // @@protoc_insertion_point(field_get:dzhyun.DealItem.OpenOrClose)
  return openorclose_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DealItem::set_openorclose(const ::std::string& value) {
  set_has_openorclose();
  openorclose_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.DealItem.OpenOrClose)
}
 void DealItem::set_openorclose(const char* value) {
  set_has_openorclose();
  openorclose_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.DealItem.OpenOrClose)
}
 void DealItem::set_openorclose(const char* value, size_t size) {
  set_has_openorclose();
  openorclose_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.DealItem.OpenOrClose)
}
 ::std::string* DealItem::mutable_openorclose() {
  set_has_openorclose();
  // @@protoc_insertion_point(field_mutable:dzhyun.DealItem.OpenOrClose)
  return openorclose_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DealItem::release_openorclose() {
  // @@protoc_insertion_point(field_release:dzhyun.DealItem.OpenOrClose)
  clear_has_openorclose();
  return openorclose_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DealItem::set_allocated_openorclose(::std::string* openorclose) {
  if (openorclose != NULL) {
    set_has_openorclose();
  } else {
    clear_has_openorclose();
  }
  openorclose_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openorclose);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.DealItem.OpenOrClose)
}

// optional int64 DealAmount = 7;
bool DealItem::has_dealamount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void DealItem::set_has_dealamount() {
  _has_bits_[0] |= 0x00000040u;
}
void DealItem::clear_has_dealamount() {
  _has_bits_[0] &= ~0x00000040u;
}
void DealItem::clear_dealamount() {
  dealamount_ = GOOGLE_LONGLONG(0);
  clear_has_dealamount();
}
 ::google::protobuf::int64 DealItem::dealamount() const {
  // @@protoc_insertion_point(field_get:dzhyun.DealItem.DealAmount)
  return dealamount_;
}
 void DealItem::set_dealamount(::google::protobuf::int64 value) {
  set_has_dealamount();
  dealamount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DealItem.DealAmount)
}

// optional int64 DealPrice = 8;
bool DealItem::has_dealprice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void DealItem::set_has_dealprice() {
  _has_bits_[0] |= 0x00000080u;
}
void DealItem::clear_has_dealprice() {
  _has_bits_[0] &= ~0x00000080u;
}
void DealItem::clear_dealprice() {
  dealprice_ = GOOGLE_LONGLONG(0);
  clear_has_dealprice();
}
 ::google::protobuf::int64 DealItem::dealprice() const {
  // @@protoc_insertion_point(field_get:dzhyun.DealItem.DealPrice)
  return dealprice_;
}
 void DealItem::set_dealprice(::google::protobuf::int64 value) {
  set_has_dealprice();
  dealprice_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DealItem.DealPrice)
}

// optional int64 Fee = 9;
bool DealItem::has_fee() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void DealItem::set_has_fee() {
  _has_bits_[0] |= 0x00000100u;
}
void DealItem::clear_has_fee() {
  _has_bits_[0] &= ~0x00000100u;
}
void DealItem::clear_fee() {
  fee_ = GOOGLE_LONGLONG(0);
  clear_has_fee();
}
 ::google::protobuf::int64 DealItem::fee() const {
  // @@protoc_insertion_point(field_get:dzhyun.DealItem.Fee)
  return fee_;
}
 void DealItem::set_fee(::google::protobuf::int64 value) {
  set_has_fee();
  fee_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.DealItem.Fee)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryDealRsp::kRspNoFieldNumber;
const int QueryDealRsp::kRspDescFieldNumber;
const int QueryDealRsp::kDealListFieldNumber;
const int QueryDealRsp::kCapitalIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryDealRsp::QueryDealRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.QueryDealRsp)
}

void QueryDealRsp::InitAsDefaultInstance() {
}

QueryDealRsp::QueryDealRsp(const QueryDealRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.QueryDealRsp)
}

void QueryDealRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rspno_ = GOOGLE_LONGLONG(0);
  rspdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  capitalid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryDealRsp::~QueryDealRsp() {
  // @@protoc_insertion_point(destructor:dzhyun.QueryDealRsp)
  SharedDtor();
}

void QueryDealRsp::SharedDtor() {
  rspdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  capitalid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QueryDealRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDealRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryDealRsp_descriptor_;
}

const QueryDealRsp& QueryDealRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2ecounter_2eproto();
  return *default_instance_;
}

QueryDealRsp* QueryDealRsp::default_instance_ = NULL;

QueryDealRsp* QueryDealRsp::New(::google::protobuf::Arena* arena) const {
  QueryDealRsp* n = new QueryDealRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryDealRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.QueryDealRsp)
  if (_has_bits_[0 / 32] & 11u) {
    rspno_ = GOOGLE_LONGLONG(0);
    if (has_rspdesc()) {
      rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_capitalid()) {
      capitalid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  deallist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryDealRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.QueryDealRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 RspNo = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rspno_)));
          set_has_rspno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RspDesc;
        break;
      }

      // optional string RspDesc = 2;
      case 2: {
        if (tag == 18) {
         parse_RspDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rspdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rspdesc().data(), this->rspdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QueryDealRsp.RspDesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_DealList;
        break;
      }

      // repeated .dzhyun.DealItem DealList = 3;
      case 3: {
        if (tag == 26) {
         parse_DealList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_DealList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_deallist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_DealList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_CapitalId;
        break;
      }

      // optional string CapitalId = 4;
      case 4: {
        if (tag == 34) {
         parse_CapitalId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_capitalid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->capitalid().data(), this->capitalid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.QueryDealRsp.CapitalId");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.QueryDealRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.QueryDealRsp)
  return false;
#undef DO_
}

void QueryDealRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.QueryDealRsp)
  // required int64 RspNo = 1;
  if (has_rspno()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->rspno(), output);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QueryDealRsp.RspDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rspdesc(), output);
  }

  // repeated .dzhyun.DealItem DealList = 3;
  for (unsigned int i = 0, n = this->deallist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->deallist(i), output);
  }

  // optional string CapitalId = 4;
  if (has_capitalid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->capitalid().data(), this->capitalid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QueryDealRsp.CapitalId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->capitalid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.QueryDealRsp)
}

::google::protobuf::uint8* QueryDealRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.QueryDealRsp)
  // required int64 RspNo = 1;
  if (has_rspno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->rspno(), target);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QueryDealRsp.RspDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rspdesc(), target);
  }

  // repeated .dzhyun.DealItem DealList = 3;
  for (unsigned int i = 0, n = this->deallist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->deallist(i), target);
  }

  // optional string CapitalId = 4;
  if (has_capitalid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->capitalid().data(), this->capitalid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.QueryDealRsp.CapitalId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->capitalid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.QueryDealRsp)
  return target;
}

int QueryDealRsp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.QueryDealRsp)
  int total_size = 0;

  // required int64 RspNo = 1;
  if (has_rspno()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rspno());
  }
  if (_has_bits_[1 / 32] & 10u) {
    // optional string RspDesc = 2;
    if (has_rspdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rspdesc());
    }

    // optional string CapitalId = 4;
    if (has_capitalid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->capitalid());
    }

  }
  // repeated .dzhyun.DealItem DealList = 3;
  total_size += 1 * this->deallist_size();
  for (int i = 0; i < this->deallist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->deallist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDealRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.QueryDealRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryDealRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryDealRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.QueryDealRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.QueryDealRsp)
    MergeFrom(*source);
  }
}

void QueryDealRsp::MergeFrom(const QueryDealRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.QueryDealRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  deallist_.MergeFrom(from.deallist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rspno()) {
      set_rspno(from.rspno());
    }
    if (from.has_rspdesc()) {
      set_has_rspdesc();
      rspdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rspdesc_);
    }
    if (from.has_capitalid()) {
      set_has_capitalid();
      capitalid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.capitalid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryDealRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.QueryDealRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDealRsp::CopyFrom(const QueryDealRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.QueryDealRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDealRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->deallist())) return false;
  return true;
}

void QueryDealRsp::Swap(QueryDealRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryDealRsp::InternalSwap(QueryDealRsp* other) {
  std::swap(rspno_, other->rspno_);
  rspdesc_.Swap(&other->rspdesc_);
  deallist_.UnsafeArenaSwap(&other->deallist_);
  capitalid_.Swap(&other->capitalid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryDealRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryDealRsp_descriptor_;
  metadata.reflection = QueryDealRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryDealRsp

// required int64 RspNo = 1;
bool QueryDealRsp::has_rspno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryDealRsp::set_has_rspno() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryDealRsp::clear_has_rspno() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryDealRsp::clear_rspno() {
  rspno_ = GOOGLE_LONGLONG(0);
  clear_has_rspno();
}
 ::google::protobuf::int64 QueryDealRsp::rspno() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryDealRsp.RspNo)
  return rspno_;
}
 void QueryDealRsp::set_rspno(::google::protobuf::int64 value) {
  set_has_rspno();
  rspno_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.QueryDealRsp.RspNo)
}

// optional string RspDesc = 2;
bool QueryDealRsp::has_rspdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryDealRsp::set_has_rspdesc() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryDealRsp::clear_has_rspdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryDealRsp::clear_rspdesc() {
  rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rspdesc();
}
 const ::std::string& QueryDealRsp::rspdesc() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryDealRsp.RspDesc)
  return rspdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryDealRsp::set_rspdesc(const ::std::string& value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QueryDealRsp.RspDesc)
}
 void QueryDealRsp::set_rspdesc(const char* value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QueryDealRsp.RspDesc)
}
 void QueryDealRsp::set_rspdesc(const char* value, size_t size) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QueryDealRsp.RspDesc)
}
 ::std::string* QueryDealRsp::mutable_rspdesc() {
  set_has_rspdesc();
  // @@protoc_insertion_point(field_mutable:dzhyun.QueryDealRsp.RspDesc)
  return rspdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QueryDealRsp::release_rspdesc() {
  // @@protoc_insertion_point(field_release:dzhyun.QueryDealRsp.RspDesc)
  clear_has_rspdesc();
  return rspdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryDealRsp::set_allocated_rspdesc(::std::string* rspdesc) {
  if (rspdesc != NULL) {
    set_has_rspdesc();
  } else {
    clear_has_rspdesc();
  }
  rspdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rspdesc);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QueryDealRsp.RspDesc)
}

// repeated .dzhyun.DealItem DealList = 3;
int QueryDealRsp::deallist_size() const {
  return deallist_.size();
}
void QueryDealRsp::clear_deallist() {
  deallist_.Clear();
}
const ::dzhyun::DealItem& QueryDealRsp::deallist(int index) const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryDealRsp.DealList)
  return deallist_.Get(index);
}
::dzhyun::DealItem* QueryDealRsp::mutable_deallist(int index) {
  // @@protoc_insertion_point(field_mutable:dzhyun.QueryDealRsp.DealList)
  return deallist_.Mutable(index);
}
::dzhyun::DealItem* QueryDealRsp::add_deallist() {
  // @@protoc_insertion_point(field_add:dzhyun.QueryDealRsp.DealList)
  return deallist_.Add();
}
::google::protobuf::RepeatedPtrField< ::dzhyun::DealItem >*
QueryDealRsp::mutable_deallist() {
  // @@protoc_insertion_point(field_mutable_list:dzhyun.QueryDealRsp.DealList)
  return &deallist_;
}
const ::google::protobuf::RepeatedPtrField< ::dzhyun::DealItem >&
QueryDealRsp::deallist() const {
  // @@protoc_insertion_point(field_list:dzhyun.QueryDealRsp.DealList)
  return deallist_;
}

// optional string CapitalId = 4;
bool QueryDealRsp::has_capitalid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QueryDealRsp::set_has_capitalid() {
  _has_bits_[0] |= 0x00000008u;
}
void QueryDealRsp::clear_has_capitalid() {
  _has_bits_[0] &= ~0x00000008u;
}
void QueryDealRsp::clear_capitalid() {
  capitalid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_capitalid();
}
 const ::std::string& QueryDealRsp::capitalid() const {
  // @@protoc_insertion_point(field_get:dzhyun.QueryDealRsp.CapitalId)
  return capitalid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryDealRsp::set_capitalid(const ::std::string& value) {
  set_has_capitalid();
  capitalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.QueryDealRsp.CapitalId)
}
 void QueryDealRsp::set_capitalid(const char* value) {
  set_has_capitalid();
  capitalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.QueryDealRsp.CapitalId)
}
 void QueryDealRsp::set_capitalid(const char* value, size_t size) {
  set_has_capitalid();
  capitalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.QueryDealRsp.CapitalId)
}
 ::std::string* QueryDealRsp::mutable_capitalid() {
  set_has_capitalid();
  // @@protoc_insertion_point(field_mutable:dzhyun.QueryDealRsp.CapitalId)
  return capitalid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QueryDealRsp::release_capitalid() {
  // @@protoc_insertion_point(field_release:dzhyun.QueryDealRsp.CapitalId)
  clear_has_capitalid();
  return capitalid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryDealRsp::set_allocated_capitalid(::std::string* capitalid) {
  if (capitalid != NULL) {
    set_has_capitalid();
  } else {
    clear_has_capitalid();
  }
  capitalid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), capitalid);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.QueryDealRsp.CapitalId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CounterSettleRsp::kRspNoFieldNumber;
const int CounterSettleRsp::kRspDescFieldNumber;
const int CounterSettleRsp::kSettleTimeFieldNumber;
const int CounterSettleRsp::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CounterSettleRsp::CounterSettleRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.CounterSettleRsp)
}

void CounterSettleRsp::InitAsDefaultInstance() {
}

CounterSettleRsp::CounterSettleRsp(const CounterSettleRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.CounterSettleRsp)
}

void CounterSettleRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rspno_ = GOOGLE_LONGLONG(0);
  rspdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  settletime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CounterSettleRsp::~CounterSettleRsp() {
  // @@protoc_insertion_point(destructor:dzhyun.CounterSettleRsp)
  SharedDtor();
}

void CounterSettleRsp::SharedDtor() {
  rspdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  settletime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CounterSettleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CounterSettleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CounterSettleRsp_descriptor_;
}

const CounterSettleRsp& CounterSettleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2ecounter_2eproto();
  return *default_instance_;
}

CounterSettleRsp* CounterSettleRsp::default_instance_ = NULL;

CounterSettleRsp* CounterSettleRsp::New(::google::protobuf::Arena* arena) const {
  CounterSettleRsp* n = new CounterSettleRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CounterSettleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.CounterSettleRsp)
  if (_has_bits_[0 / 32] & 15u) {
    rspno_ = GOOGLE_LONGLONG(0);
    if (has_rspdesc()) {
      rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_settletime()) {
      settletime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    status_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CounterSettleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.CounterSettleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 RspNo = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rspno_)));
          set_has_rspno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RspDesc;
        break;
      }

      // optional string RspDesc = 2;
      case 2: {
        if (tag == 18) {
         parse_RspDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rspdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rspdesc().data(), this->rspdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.CounterSettleRsp.RspDesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_SettleTime;
        break;
      }

      // optional string SettleTime = 3;
      case 3: {
        if (tag == 26) {
         parse_SettleTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_settletime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->settletime().data(), this->settletime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.CounterSettleRsp.SettleTime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Status;
        break;
      }

      // optional int64 Status = 4;
      case 4: {
        if (tag == 32) {
         parse_Status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.CounterSettleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.CounterSettleRsp)
  return false;
#undef DO_
}

void CounterSettleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.CounterSettleRsp)
  // required int64 RspNo = 1;
  if (has_rspno()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->rspno(), output);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.CounterSettleRsp.RspDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rspdesc(), output);
  }

  // optional string SettleTime = 3;
  if (has_settletime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->settletime().data(), this->settletime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.CounterSettleRsp.SettleTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->settletime(), output);
  }

  // optional int64 Status = 4;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.CounterSettleRsp)
}

::google::protobuf::uint8* CounterSettleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.CounterSettleRsp)
  // required int64 RspNo = 1;
  if (has_rspno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->rspno(), target);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.CounterSettleRsp.RspDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rspdesc(), target);
  }

  // optional string SettleTime = 3;
  if (has_settletime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->settletime().data(), this->settletime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.CounterSettleRsp.SettleTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->settletime(), target);
  }

  // optional int64 Status = 4;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.CounterSettleRsp)
  return target;
}

int CounterSettleRsp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.CounterSettleRsp)
  int total_size = 0;

  // required int64 RspNo = 1;
  if (has_rspno()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rspno());
  }
  if (_has_bits_[1 / 32] & 14u) {
    // optional string RspDesc = 2;
    if (has_rspdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rspdesc());
    }

    // optional string SettleTime = 3;
    if (has_settletime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->settletime());
    }

    // optional int64 Status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->status());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CounterSettleRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.CounterSettleRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CounterSettleRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CounterSettleRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.CounterSettleRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.CounterSettleRsp)
    MergeFrom(*source);
  }
}

void CounterSettleRsp::MergeFrom(const CounterSettleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.CounterSettleRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rspno()) {
      set_rspno(from.rspno());
    }
    if (from.has_rspdesc()) {
      set_has_rspdesc();
      rspdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rspdesc_);
    }
    if (from.has_settletime()) {
      set_has_settletime();
      settletime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.settletime_);
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CounterSettleRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.CounterSettleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CounterSettleRsp::CopyFrom(const CounterSettleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.CounterSettleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CounterSettleRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CounterSettleRsp::Swap(CounterSettleRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CounterSettleRsp::InternalSwap(CounterSettleRsp* other) {
  std::swap(rspno_, other->rspno_);
  rspdesc_.Swap(&other->rspdesc_);
  settletime_.Swap(&other->settletime_);
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CounterSettleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CounterSettleRsp_descriptor_;
  metadata.reflection = CounterSettleRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CounterSettleRsp

// required int64 RspNo = 1;
bool CounterSettleRsp::has_rspno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CounterSettleRsp::set_has_rspno() {
  _has_bits_[0] |= 0x00000001u;
}
void CounterSettleRsp::clear_has_rspno() {
  _has_bits_[0] &= ~0x00000001u;
}
void CounterSettleRsp::clear_rspno() {
  rspno_ = GOOGLE_LONGLONG(0);
  clear_has_rspno();
}
 ::google::protobuf::int64 CounterSettleRsp::rspno() const {
  // @@protoc_insertion_point(field_get:dzhyun.CounterSettleRsp.RspNo)
  return rspno_;
}
 void CounterSettleRsp::set_rspno(::google::protobuf::int64 value) {
  set_has_rspno();
  rspno_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.CounterSettleRsp.RspNo)
}

// optional string RspDesc = 2;
bool CounterSettleRsp::has_rspdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CounterSettleRsp::set_has_rspdesc() {
  _has_bits_[0] |= 0x00000002u;
}
void CounterSettleRsp::clear_has_rspdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
void CounterSettleRsp::clear_rspdesc() {
  rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rspdesc();
}
 const ::std::string& CounterSettleRsp::rspdesc() const {
  // @@protoc_insertion_point(field_get:dzhyun.CounterSettleRsp.RspDesc)
  return rspdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CounterSettleRsp::set_rspdesc(const ::std::string& value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.CounterSettleRsp.RspDesc)
}
 void CounterSettleRsp::set_rspdesc(const char* value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.CounterSettleRsp.RspDesc)
}
 void CounterSettleRsp::set_rspdesc(const char* value, size_t size) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.CounterSettleRsp.RspDesc)
}
 ::std::string* CounterSettleRsp::mutable_rspdesc() {
  set_has_rspdesc();
  // @@protoc_insertion_point(field_mutable:dzhyun.CounterSettleRsp.RspDesc)
  return rspdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CounterSettleRsp::release_rspdesc() {
  // @@protoc_insertion_point(field_release:dzhyun.CounterSettleRsp.RspDesc)
  clear_has_rspdesc();
  return rspdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CounterSettleRsp::set_allocated_rspdesc(::std::string* rspdesc) {
  if (rspdesc != NULL) {
    set_has_rspdesc();
  } else {
    clear_has_rspdesc();
  }
  rspdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rspdesc);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.CounterSettleRsp.RspDesc)
}

// optional string SettleTime = 3;
bool CounterSettleRsp::has_settletime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CounterSettleRsp::set_has_settletime() {
  _has_bits_[0] |= 0x00000004u;
}
void CounterSettleRsp::clear_has_settletime() {
  _has_bits_[0] &= ~0x00000004u;
}
void CounterSettleRsp::clear_settletime() {
  settletime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_settletime();
}
 const ::std::string& CounterSettleRsp::settletime() const {
  // @@protoc_insertion_point(field_get:dzhyun.CounterSettleRsp.SettleTime)
  return settletime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CounterSettleRsp::set_settletime(const ::std::string& value) {
  set_has_settletime();
  settletime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.CounterSettleRsp.SettleTime)
}
 void CounterSettleRsp::set_settletime(const char* value) {
  set_has_settletime();
  settletime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.CounterSettleRsp.SettleTime)
}
 void CounterSettleRsp::set_settletime(const char* value, size_t size) {
  set_has_settletime();
  settletime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.CounterSettleRsp.SettleTime)
}
 ::std::string* CounterSettleRsp::mutable_settletime() {
  set_has_settletime();
  // @@protoc_insertion_point(field_mutable:dzhyun.CounterSettleRsp.SettleTime)
  return settletime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CounterSettleRsp::release_settletime() {
  // @@protoc_insertion_point(field_release:dzhyun.CounterSettleRsp.SettleTime)
  clear_has_settletime();
  return settletime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CounterSettleRsp::set_allocated_settletime(::std::string* settletime) {
  if (settletime != NULL) {
    set_has_settletime();
  } else {
    clear_has_settletime();
  }
  settletime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), settletime);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.CounterSettleRsp.SettleTime)
}

// optional int64 Status = 4;
bool CounterSettleRsp::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CounterSettleRsp::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
void CounterSettleRsp::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
void CounterSettleRsp::clear_status() {
  status_ = GOOGLE_LONGLONG(0);
  clear_has_status();
}
 ::google::protobuf::int64 CounterSettleRsp::status() const {
  // @@protoc_insertion_point(field_get:dzhyun.CounterSettleRsp.Status)
  return status_;
}
 void CounterSettleRsp::set_status(::google::protobuf::int64 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.CounterSettleRsp.Status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TradeRuleRsp::kRspNoFieldNumber;
const int TradeRuleRsp::kRspDescFieldNumber;
const int TradeRuleRsp::kUpdateTimeFieldNumber;
const int TradeRuleRsp::kTradeRateFieldNumber;
const int TradeRuleRsp::kMinTradeFeeFieldNumber;
const int TradeRuleRsp::kMaxPosAmountFieldNumber;
const int TradeRuleRsp::kMaxOrderAmountFieldNumber;
const int TradeRuleRsp::kSettleTimeFieldNumber;
const int TradeRuleRsp::kStopTradeFieldNumber;
const int TradeRuleRsp::kTradeRuleFieldNumber;
const int TradeRuleRsp::kMarginRateFieldNumber;
const int TradeRuleRsp::kForceCloseRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TradeRuleRsp::TradeRuleRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dzhyun.TradeRuleRsp)
}

void TradeRuleRsp::InitAsDefaultInstance() {
}

TradeRuleRsp::TradeRuleRsp(const TradeRuleRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dzhyun.TradeRuleRsp)
}

void TradeRuleRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rspno_ = GOOGLE_LONGLONG(0);
  rspdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  traderate_ = GOOGLE_LONGLONG(0);
  mintradefee_ = GOOGLE_LONGLONG(0);
  maxposamount_ = GOOGLE_LONGLONG(0);
  maxorderamount_ = GOOGLE_LONGLONG(0);
  settletime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoptrade_ = GOOGLE_LONGLONG(0);
  traderule_ = GOOGLE_LONGLONG(0);
  marginrate_ = GOOGLE_LONGLONG(0);
  forcecloserate_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TradeRuleRsp::~TradeRuleRsp() {
  // @@protoc_insertion_point(destructor:dzhyun.TradeRuleRsp)
  SharedDtor();
}

void TradeRuleRsp::SharedDtor() {
  rspdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  settletime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TradeRuleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TradeRuleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TradeRuleRsp_descriptor_;
}

const TradeRuleRsp& TradeRuleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dzhyun_2ecounter_2eproto();
  return *default_instance_;
}

TradeRuleRsp* TradeRuleRsp::default_instance_ = NULL;

TradeRuleRsp* TradeRuleRsp::New(::google::protobuf::Arena* arena) const {
  TradeRuleRsp* n = new TradeRuleRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TradeRuleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:dzhyun.TradeRuleRsp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TradeRuleRsp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TradeRuleRsp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(traderate_, maxorderamount_);
    rspno_ = GOOGLE_LONGLONG(0);
    if (has_rspdesc()) {
      rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_updatetime()) {
      updatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_settletime()) {
      settletime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ZR_(stoptrade_, forcecloserate_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TradeRuleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dzhyun.TradeRuleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 RspNo = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rspno_)));
          set_has_rspno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RspDesc;
        break;
      }

      // optional string RspDesc = 2;
      case 2: {
        if (tag == 18) {
         parse_RspDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rspdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rspdesc().data(), this->rspdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.TradeRuleRsp.RspDesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_UpdateTime;
        break;
      }

      // optional string UpdateTime = 3;
      case 3: {
        if (tag == 26) {
         parse_UpdateTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updatetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->updatetime().data(), this->updatetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.TradeRuleRsp.UpdateTime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_TradeRate;
        break;
      }

      // optional int64 TradeRate = 4;
      case 4: {
        if (tag == 32) {
         parse_TradeRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &traderate_)));
          set_has_traderate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_MinTradeFee;
        break;
      }

      // optional int64 MinTradeFee = 5;
      case 5: {
        if (tag == 40) {
         parse_MinTradeFee:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mintradefee_)));
          set_has_mintradefee();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_MaxPosAmount;
        break;
      }

      // optional int64 MaxPosAmount = 6;
      case 6: {
        if (tag == 48) {
         parse_MaxPosAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxposamount_)));
          set_has_maxposamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_MaxOrderAmount;
        break;
      }

      // optional int64 MaxOrderAmount = 7;
      case 7: {
        if (tag == 56) {
         parse_MaxOrderAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxorderamount_)));
          set_has_maxorderamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_SettleTime;
        break;
      }

      // optional string SettleTime = 8;
      case 8: {
        if (tag == 66) {
         parse_SettleTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_settletime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->settletime().data(), this->settletime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dzhyun.TradeRuleRsp.SettleTime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_StopTrade;
        break;
      }

      // optional int64 StopTrade = 9;
      case 9: {
        if (tag == 72) {
         parse_StopTrade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stoptrade_)));
          set_has_stoptrade();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_TradeRule;
        break;
      }

      // optional int64 TradeRule = 10;
      case 10: {
        if (tag == 80) {
         parse_TradeRule:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &traderule_)));
          set_has_traderule();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_MarginRate;
        break;
      }

      // optional int64 MarginRate = 11;
      case 11: {
        if (tag == 88) {
         parse_MarginRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &marginrate_)));
          set_has_marginrate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_ForceCloseRate;
        break;
      }

      // optional int64 ForceCloseRate = 12;
      case 12: {
        if (tag == 96) {
         parse_ForceCloseRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &forcecloserate_)));
          set_has_forcecloserate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dzhyun.TradeRuleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dzhyun.TradeRuleRsp)
  return false;
#undef DO_
}

void TradeRuleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dzhyun.TradeRuleRsp)
  // required int64 RspNo = 1;
  if (has_rspno()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->rspno(), output);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.TradeRuleRsp.RspDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rspdesc(), output);
  }

  // optional string UpdateTime = 3;
  if (has_updatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->updatetime().data(), this->updatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.TradeRuleRsp.UpdateTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->updatetime(), output);
  }

  // optional int64 TradeRate = 4;
  if (has_traderate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->traderate(), output);
  }

  // optional int64 MinTradeFee = 5;
  if (has_mintradefee()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->mintradefee(), output);
  }

  // optional int64 MaxPosAmount = 6;
  if (has_maxposamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->maxposamount(), output);
  }

  // optional int64 MaxOrderAmount = 7;
  if (has_maxorderamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->maxorderamount(), output);
  }

  // optional string SettleTime = 8;
  if (has_settletime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->settletime().data(), this->settletime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.TradeRuleRsp.SettleTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->settletime(), output);
  }

  // optional int64 StopTrade = 9;
  if (has_stoptrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->stoptrade(), output);
  }

  // optional int64 TradeRule = 10;
  if (has_traderule()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->traderule(), output);
  }

  // optional int64 MarginRate = 11;
  if (has_marginrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->marginrate(), output);
  }

  // optional int64 ForceCloseRate = 12;
  if (has_forcecloserate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->forcecloserate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dzhyun.TradeRuleRsp)
}

::google::protobuf::uint8* TradeRuleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dzhyun.TradeRuleRsp)
  // required int64 RspNo = 1;
  if (has_rspno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->rspno(), target);
  }

  // optional string RspDesc = 2;
  if (has_rspdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspdesc().data(), this->rspdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.TradeRuleRsp.RspDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rspdesc(), target);
  }

  // optional string UpdateTime = 3;
  if (has_updatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->updatetime().data(), this->updatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.TradeRuleRsp.UpdateTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->updatetime(), target);
  }

  // optional int64 TradeRate = 4;
  if (has_traderate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->traderate(), target);
  }

  // optional int64 MinTradeFee = 5;
  if (has_mintradefee()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->mintradefee(), target);
  }

  // optional int64 MaxPosAmount = 6;
  if (has_maxposamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->maxposamount(), target);
  }

  // optional int64 MaxOrderAmount = 7;
  if (has_maxorderamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->maxorderamount(), target);
  }

  // optional string SettleTime = 8;
  if (has_settletime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->settletime().data(), this->settletime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dzhyun.TradeRuleRsp.SettleTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->settletime(), target);
  }

  // optional int64 StopTrade = 9;
  if (has_stoptrade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->stoptrade(), target);
  }

  // optional int64 TradeRule = 10;
  if (has_traderule()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->traderule(), target);
  }

  // optional int64 MarginRate = 11;
  if (has_marginrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->marginrate(), target);
  }

  // optional int64 ForceCloseRate = 12;
  if (has_forcecloserate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->forcecloserate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dzhyun.TradeRuleRsp)
  return target;
}

int TradeRuleRsp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dzhyun.TradeRuleRsp)
  int total_size = 0;

  // required int64 RspNo = 1;
  if (has_rspno()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rspno());
  }
  if (_has_bits_[1 / 32] & 254u) {
    // optional string RspDesc = 2;
    if (has_rspdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rspdesc());
    }

    // optional string UpdateTime = 3;
    if (has_updatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->updatetime());
    }

    // optional int64 TradeRate = 4;
    if (has_traderate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->traderate());
    }

    // optional int64 MinTradeFee = 5;
    if (has_mintradefee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mintradefee());
    }

    // optional int64 MaxPosAmount = 6;
    if (has_maxposamount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->maxposamount());
    }

    // optional int64 MaxOrderAmount = 7;
    if (has_maxorderamount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->maxorderamount());
    }

    // optional string SettleTime = 8;
    if (has_settletime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->settletime());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional int64 StopTrade = 9;
    if (has_stoptrade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->stoptrade());
    }

    // optional int64 TradeRule = 10;
    if (has_traderule()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->traderule());
    }

    // optional int64 MarginRate = 11;
    if (has_marginrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->marginrate());
    }

    // optional int64 ForceCloseRate = 12;
    if (has_forcecloserate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->forcecloserate());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TradeRuleRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dzhyun.TradeRuleRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TradeRuleRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TradeRuleRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dzhyun.TradeRuleRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dzhyun.TradeRuleRsp)
    MergeFrom(*source);
  }
}

void TradeRuleRsp::MergeFrom(const TradeRuleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dzhyun.TradeRuleRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rspno()) {
      set_rspno(from.rspno());
    }
    if (from.has_rspdesc()) {
      set_has_rspdesc();
      rspdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rspdesc_);
    }
    if (from.has_updatetime()) {
      set_has_updatetime();
      updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
    }
    if (from.has_traderate()) {
      set_traderate(from.traderate());
    }
    if (from.has_mintradefee()) {
      set_mintradefee(from.mintradefee());
    }
    if (from.has_maxposamount()) {
      set_maxposamount(from.maxposamount());
    }
    if (from.has_maxorderamount()) {
      set_maxorderamount(from.maxorderamount());
    }
    if (from.has_settletime()) {
      set_has_settletime();
      settletime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.settletime_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_stoptrade()) {
      set_stoptrade(from.stoptrade());
    }
    if (from.has_traderule()) {
      set_traderule(from.traderule());
    }
    if (from.has_marginrate()) {
      set_marginrate(from.marginrate());
    }
    if (from.has_forcecloserate()) {
      set_forcecloserate(from.forcecloserate());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TradeRuleRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dzhyun.TradeRuleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TradeRuleRsp::CopyFrom(const TradeRuleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dzhyun.TradeRuleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TradeRuleRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TradeRuleRsp::Swap(TradeRuleRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TradeRuleRsp::InternalSwap(TradeRuleRsp* other) {
  std::swap(rspno_, other->rspno_);
  rspdesc_.Swap(&other->rspdesc_);
  updatetime_.Swap(&other->updatetime_);
  std::swap(traderate_, other->traderate_);
  std::swap(mintradefee_, other->mintradefee_);
  std::swap(maxposamount_, other->maxposamount_);
  std::swap(maxorderamount_, other->maxorderamount_);
  settletime_.Swap(&other->settletime_);
  std::swap(stoptrade_, other->stoptrade_);
  std::swap(traderule_, other->traderule_);
  std::swap(marginrate_, other->marginrate_);
  std::swap(forcecloserate_, other->forcecloserate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TradeRuleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TradeRuleRsp_descriptor_;
  metadata.reflection = TradeRuleRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TradeRuleRsp

// required int64 RspNo = 1;
bool TradeRuleRsp::has_rspno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TradeRuleRsp::set_has_rspno() {
  _has_bits_[0] |= 0x00000001u;
}
void TradeRuleRsp::clear_has_rspno() {
  _has_bits_[0] &= ~0x00000001u;
}
void TradeRuleRsp::clear_rspno() {
  rspno_ = GOOGLE_LONGLONG(0);
  clear_has_rspno();
}
 ::google::protobuf::int64 TradeRuleRsp::rspno() const {
  // @@protoc_insertion_point(field_get:dzhyun.TradeRuleRsp.RspNo)
  return rspno_;
}
 void TradeRuleRsp::set_rspno(::google::protobuf::int64 value) {
  set_has_rspno();
  rspno_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TradeRuleRsp.RspNo)
}

// optional string RspDesc = 2;
bool TradeRuleRsp::has_rspdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TradeRuleRsp::set_has_rspdesc() {
  _has_bits_[0] |= 0x00000002u;
}
void TradeRuleRsp::clear_has_rspdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
void TradeRuleRsp::clear_rspdesc() {
  rspdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rspdesc();
}
 const ::std::string& TradeRuleRsp::rspdesc() const {
  // @@protoc_insertion_point(field_get:dzhyun.TradeRuleRsp.RspDesc)
  return rspdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TradeRuleRsp::set_rspdesc(const ::std::string& value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.TradeRuleRsp.RspDesc)
}
 void TradeRuleRsp::set_rspdesc(const char* value) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.TradeRuleRsp.RspDesc)
}
 void TradeRuleRsp::set_rspdesc(const char* value, size_t size) {
  set_has_rspdesc();
  rspdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.TradeRuleRsp.RspDesc)
}
 ::std::string* TradeRuleRsp::mutable_rspdesc() {
  set_has_rspdesc();
  // @@protoc_insertion_point(field_mutable:dzhyun.TradeRuleRsp.RspDesc)
  return rspdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TradeRuleRsp::release_rspdesc() {
  // @@protoc_insertion_point(field_release:dzhyun.TradeRuleRsp.RspDesc)
  clear_has_rspdesc();
  return rspdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TradeRuleRsp::set_allocated_rspdesc(::std::string* rspdesc) {
  if (rspdesc != NULL) {
    set_has_rspdesc();
  } else {
    clear_has_rspdesc();
  }
  rspdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rspdesc);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.TradeRuleRsp.RspDesc)
}

// optional string UpdateTime = 3;
bool TradeRuleRsp::has_updatetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TradeRuleRsp::set_has_updatetime() {
  _has_bits_[0] |= 0x00000004u;
}
void TradeRuleRsp::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000004u;
}
void TradeRuleRsp::clear_updatetime() {
  updatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_updatetime();
}
 const ::std::string& TradeRuleRsp::updatetime() const {
  // @@protoc_insertion_point(field_get:dzhyun.TradeRuleRsp.UpdateTime)
  return updatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TradeRuleRsp::set_updatetime(const ::std::string& value) {
  set_has_updatetime();
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.TradeRuleRsp.UpdateTime)
}
 void TradeRuleRsp::set_updatetime(const char* value) {
  set_has_updatetime();
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.TradeRuleRsp.UpdateTime)
}
 void TradeRuleRsp::set_updatetime(const char* value, size_t size) {
  set_has_updatetime();
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.TradeRuleRsp.UpdateTime)
}
 ::std::string* TradeRuleRsp::mutable_updatetime() {
  set_has_updatetime();
  // @@protoc_insertion_point(field_mutable:dzhyun.TradeRuleRsp.UpdateTime)
  return updatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TradeRuleRsp::release_updatetime() {
  // @@protoc_insertion_point(field_release:dzhyun.TradeRuleRsp.UpdateTime)
  clear_has_updatetime();
  return updatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TradeRuleRsp::set_allocated_updatetime(::std::string* updatetime) {
  if (updatetime != NULL) {
    set_has_updatetime();
  } else {
    clear_has_updatetime();
  }
  updatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), updatetime);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.TradeRuleRsp.UpdateTime)
}

// optional int64 TradeRate = 4;
bool TradeRuleRsp::has_traderate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TradeRuleRsp::set_has_traderate() {
  _has_bits_[0] |= 0x00000008u;
}
void TradeRuleRsp::clear_has_traderate() {
  _has_bits_[0] &= ~0x00000008u;
}
void TradeRuleRsp::clear_traderate() {
  traderate_ = GOOGLE_LONGLONG(0);
  clear_has_traderate();
}
 ::google::protobuf::int64 TradeRuleRsp::traderate() const {
  // @@protoc_insertion_point(field_get:dzhyun.TradeRuleRsp.TradeRate)
  return traderate_;
}
 void TradeRuleRsp::set_traderate(::google::protobuf::int64 value) {
  set_has_traderate();
  traderate_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TradeRuleRsp.TradeRate)
}

// optional int64 MinTradeFee = 5;
bool TradeRuleRsp::has_mintradefee() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TradeRuleRsp::set_has_mintradefee() {
  _has_bits_[0] |= 0x00000010u;
}
void TradeRuleRsp::clear_has_mintradefee() {
  _has_bits_[0] &= ~0x00000010u;
}
void TradeRuleRsp::clear_mintradefee() {
  mintradefee_ = GOOGLE_LONGLONG(0);
  clear_has_mintradefee();
}
 ::google::protobuf::int64 TradeRuleRsp::mintradefee() const {
  // @@protoc_insertion_point(field_get:dzhyun.TradeRuleRsp.MinTradeFee)
  return mintradefee_;
}
 void TradeRuleRsp::set_mintradefee(::google::protobuf::int64 value) {
  set_has_mintradefee();
  mintradefee_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TradeRuleRsp.MinTradeFee)
}

// optional int64 MaxPosAmount = 6;
bool TradeRuleRsp::has_maxposamount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TradeRuleRsp::set_has_maxposamount() {
  _has_bits_[0] |= 0x00000020u;
}
void TradeRuleRsp::clear_has_maxposamount() {
  _has_bits_[0] &= ~0x00000020u;
}
void TradeRuleRsp::clear_maxposamount() {
  maxposamount_ = GOOGLE_LONGLONG(0);
  clear_has_maxposamount();
}
 ::google::protobuf::int64 TradeRuleRsp::maxposamount() const {
  // @@protoc_insertion_point(field_get:dzhyun.TradeRuleRsp.MaxPosAmount)
  return maxposamount_;
}
 void TradeRuleRsp::set_maxposamount(::google::protobuf::int64 value) {
  set_has_maxposamount();
  maxposamount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TradeRuleRsp.MaxPosAmount)
}

// optional int64 MaxOrderAmount = 7;
bool TradeRuleRsp::has_maxorderamount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TradeRuleRsp::set_has_maxorderamount() {
  _has_bits_[0] |= 0x00000040u;
}
void TradeRuleRsp::clear_has_maxorderamount() {
  _has_bits_[0] &= ~0x00000040u;
}
void TradeRuleRsp::clear_maxorderamount() {
  maxorderamount_ = GOOGLE_LONGLONG(0);
  clear_has_maxorderamount();
}
 ::google::protobuf::int64 TradeRuleRsp::maxorderamount() const {
  // @@protoc_insertion_point(field_get:dzhyun.TradeRuleRsp.MaxOrderAmount)
  return maxorderamount_;
}
 void TradeRuleRsp::set_maxorderamount(::google::protobuf::int64 value) {
  set_has_maxorderamount();
  maxorderamount_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TradeRuleRsp.MaxOrderAmount)
}

// optional string SettleTime = 8;
bool TradeRuleRsp::has_settletime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TradeRuleRsp::set_has_settletime() {
  _has_bits_[0] |= 0x00000080u;
}
void TradeRuleRsp::clear_has_settletime() {
  _has_bits_[0] &= ~0x00000080u;
}
void TradeRuleRsp::clear_settletime() {
  settletime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_settletime();
}
 const ::std::string& TradeRuleRsp::settletime() const {
  // @@protoc_insertion_point(field_get:dzhyun.TradeRuleRsp.SettleTime)
  return settletime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TradeRuleRsp::set_settletime(const ::std::string& value) {
  set_has_settletime();
  settletime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dzhyun.TradeRuleRsp.SettleTime)
}
 void TradeRuleRsp::set_settletime(const char* value) {
  set_has_settletime();
  settletime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dzhyun.TradeRuleRsp.SettleTime)
}
 void TradeRuleRsp::set_settletime(const char* value, size_t size) {
  set_has_settletime();
  settletime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dzhyun.TradeRuleRsp.SettleTime)
}
 ::std::string* TradeRuleRsp::mutable_settletime() {
  set_has_settletime();
  // @@protoc_insertion_point(field_mutable:dzhyun.TradeRuleRsp.SettleTime)
  return settletime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TradeRuleRsp::release_settletime() {
  // @@protoc_insertion_point(field_release:dzhyun.TradeRuleRsp.SettleTime)
  clear_has_settletime();
  return settletime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TradeRuleRsp::set_allocated_settletime(::std::string* settletime) {
  if (settletime != NULL) {
    set_has_settletime();
  } else {
    clear_has_settletime();
  }
  settletime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), settletime);
  // @@protoc_insertion_point(field_set_allocated:dzhyun.TradeRuleRsp.SettleTime)
}

// optional int64 StopTrade = 9;
bool TradeRuleRsp::has_stoptrade() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void TradeRuleRsp::set_has_stoptrade() {
  _has_bits_[0] |= 0x00000100u;
}
void TradeRuleRsp::clear_has_stoptrade() {
  _has_bits_[0] &= ~0x00000100u;
}
void TradeRuleRsp::clear_stoptrade() {
  stoptrade_ = GOOGLE_LONGLONG(0);
  clear_has_stoptrade();
}
 ::google::protobuf::int64 TradeRuleRsp::stoptrade() const {
  // @@protoc_insertion_point(field_get:dzhyun.TradeRuleRsp.StopTrade)
  return stoptrade_;
}
 void TradeRuleRsp::set_stoptrade(::google::protobuf::int64 value) {
  set_has_stoptrade();
  stoptrade_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TradeRuleRsp.StopTrade)
}

// optional int64 TradeRule = 10;
bool TradeRuleRsp::has_traderule() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void TradeRuleRsp::set_has_traderule() {
  _has_bits_[0] |= 0x00000200u;
}
void TradeRuleRsp::clear_has_traderule() {
  _has_bits_[0] &= ~0x00000200u;
}
void TradeRuleRsp::clear_traderule() {
  traderule_ = GOOGLE_LONGLONG(0);
  clear_has_traderule();
}
 ::google::protobuf::int64 TradeRuleRsp::traderule() const {
  // @@protoc_insertion_point(field_get:dzhyun.TradeRuleRsp.TradeRule)
  return traderule_;
}
 void TradeRuleRsp::set_traderule(::google::protobuf::int64 value) {
  set_has_traderule();
  traderule_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TradeRuleRsp.TradeRule)
}

// optional int64 MarginRate = 11;
bool TradeRuleRsp::has_marginrate() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void TradeRuleRsp::set_has_marginrate() {
  _has_bits_[0] |= 0x00000400u;
}
void TradeRuleRsp::clear_has_marginrate() {
  _has_bits_[0] &= ~0x00000400u;
}
void TradeRuleRsp::clear_marginrate() {
  marginrate_ = GOOGLE_LONGLONG(0);
  clear_has_marginrate();
}
 ::google::protobuf::int64 TradeRuleRsp::marginrate() const {
  // @@protoc_insertion_point(field_get:dzhyun.TradeRuleRsp.MarginRate)
  return marginrate_;
}
 void TradeRuleRsp::set_marginrate(::google::protobuf::int64 value) {
  set_has_marginrate();
  marginrate_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TradeRuleRsp.MarginRate)
}

// optional int64 ForceCloseRate = 12;
bool TradeRuleRsp::has_forcecloserate() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void TradeRuleRsp::set_has_forcecloserate() {
  _has_bits_[0] |= 0x00000800u;
}
void TradeRuleRsp::clear_has_forcecloserate() {
  _has_bits_[0] &= ~0x00000800u;
}
void TradeRuleRsp::clear_forcecloserate() {
  forcecloserate_ = GOOGLE_LONGLONG(0);
  clear_has_forcecloserate();
}
 ::google::protobuf::int64 TradeRuleRsp::forcecloserate() const {
  // @@protoc_insertion_point(field_get:dzhyun.TradeRuleRsp.ForceCloseRate)
  return forcecloserate_;
}
 void TradeRuleRsp::set_forcecloserate(::google::protobuf::int64 value) {
  set_has_forcecloserate();
  forcecloserate_ = value;
  // @@protoc_insertion_point(field_set:dzhyun.TradeRuleRsp.ForceCloseRate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dzhyun

// @@protoc_insertion_point(global_scope)
